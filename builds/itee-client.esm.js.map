{"version":3,"file":"itee-client.esm.js","sources":["../sources/cores/TConstants.js","../sources/cores/TStore.js","../sources/cores/TAbstractFactory.js","../sources/cores/TCloningFactory.js","../sources/cores/TInstancingFactory.js","../sources/loggers/TLogger.js","../sources/input_devices/TKeyboardController.js","../sources/input_devices/TMouseController.js","../sources/loaders/TBinaryReader.js","../sources/managers/TDataBaseManager.js","../sources/utils/TIdFactory.js"],"sourcesContent":["/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @class ClassName\r\n * @classdesc Todo...\r\n * @example Todo...\r\n *\r\n */\r\n/**\r\n * A freezed javascript object used like an enum.\r\n * @typedef {object} Enum\r\n * @example\r\n * const Foo = Object.freeze( {\r\n *     Bar: 0,\r\n *     Baz: 1,\r\n *     Qux: 3\r\n * } )\r\n */\r\n\r\nimport { toEnum } from 'itee-utils'\r\n\r\n/**\r\n * The FileFormat Enum give some commonly used file format in 3d context\r\n * @type {Enum}\r\n */\r\nconst FileFormat = toEnum( {\r\n    Asc:  { value: 'asc' },\r\n    Dae:  { value: 'dae' },\r\n    Dbf:  { value: 'dbf' },\r\n    Fbx:  { value: 'fbx' },\r\n    Mtl:  { value: 'mtl' },\r\n    Json: { value: 'json' },\r\n    Obj:  { value: 'obj' },\r\n    Shp:  { value: 'shp' },\r\n    Stl:  { value: 'stl' }\r\n} )\r\n\r\n/**\r\n * @typedef {Enum} HttpStatusCode\r\n * @property {number} Continue=100 - Waiting for the continuation of the request.\r\n * @property {number} SwitchingProtocols=101 - The requester has asked the server to switch protocols and the server has agreed to do so.\r\n * @property {number} Processing=102 - WebDAV: Processing in progress (prevents the client from exceeding the limited waiting time).\r\n * @property {number} Ok=200 - Query successfully processed.\r\n * @property {number} Created=201 - Query successfully processed and a document was created.\r\n * @property {number} Accepted=202 - Query processed, but without guarantee of result.\r\n * @property {number} NonAuthoritativeInformation=203 - Information returned, but generated by an uncertified source.\r\n * @property {number} NoContent=204 - Query successfully processed but no information returned.\r\n * @property {number} ResetContent=205 - Query successfully processed, the current page can be cleared.\r\n * @property {number} PartialContent=206 - Only part of the resource has been transmitted.\r\n * @property {number} MultiStatus=207 - WebDAV: Multiple Response.\r\n * @property {number} AlreadyReported=208 - WebDAV: The document was previously sent to this collection.\r\n * @property {number} ContentDifferent=210 - WebDAV: The copy of the client-side resource differs from that of the server (content or properties).\r\n * @property {number} IMUsed=226 - The server has completed the request for the resource, and the response is a representation of the result of one or more instance manipulations applied to the\r\n *     current instance.\r\n * @property {number} MultipleChoices=300 - The requested URI refers to multiple resources.\r\n * @property {number} MovedPermanently=301 - Document moved permanently.\r\n * @property {number} Found=302 - Document moved temporarily.\r\n * @property {number} SeeOther=303 - The answer to this query is elsewhere.\r\n * @property {number} NotModified=304 - Document not modified since the last request.\r\n * @property {number} UseProxy=305 - The request must be re-addressed to the proxy.\r\n * @property {number} Unused=306 - Code used by an older version of RFC 2616, now reserved.\r\n * @property {number} TemporaryRedirect=307 - The request must be temporarily redirected to the specified URI.\r\n * @property {number} PermanentRedirect=308 - The request must be redirected permanently to the specified URI.\r\n * @property {number} TooManyRedirects=310 - The request must be redirected too many times, or is the victim of a redirection loop.\r\n * @property {number} BadRequest=400 - The syntax of the query is wrong.\r\n * @property {number} Unauthorized=401 - Authentication is required to access the resource.\r\n * @property {number} PaymentRequired=402 - Payment required to access the resource.\r\n * @property {number} Forbidden=403 - The server understood the request, but refuses to execute it. Unlike error 401, authenticating will not make any difference. On servers where authentication is\r\n *     required, this usually means that authentication has been accepted but access rights do not allow the client to access the resource.\r\n * @property {number} NotFound=404 - Resource not found.\r\n * @property {number} MethodNotAllowed=405 - Unauthorized request method.\r\n * @property {number} NotAcceptable=406 - The requested resource is not available in a format that would respect the \"Accept\" headers of the request.\r\n * @property {number} ProxyAuthenticationRequired=407 - Access to the authorized resource by identification with the proxy.\r\n * @property {number} RequestTimeOut=408 - Waiting time for an elapsed client request.\r\n * @property {number} Conflict=409 - The request can not be processed in the current state.\r\n * @property {number} Gone=410 - The resource is no longer available and no redirection address is known.\r\n * @property {number} LengthRequired=411 - The length of the request has not been specified.\r\n * @property {number} PreconditionFailed=412 - Preconditions sent by the query unverified.\r\n * @property {number} RequestEntityTooLarge=413 - Abandoned processing due to excessive request\r\n * @property {number} RequestURITooLong=414 - URI too long\r\n * @property {number} UnsupportedMediaType=415 - Unsupported query format for a given method and resource.\r\n * @property {number} RequestRangeUnsatisfiable=416 - Invalid \"range\" request header fields.\r\n * @property {number} ExpectationFailed=417 - Expected behavior and defined in the header of the unsatisfactory request.\r\n * @property {number} ImATeapot=418 - \"I am a teapot\". This code is defined in RFC 2324 dated April 1, 1998, Hyper Text Coffee Pot Control Protocol.\r\n * @property {number} BadMapping=421 - The request was sent to a server that is not able to produce a response (for example, because a connection has been reused).\r\n * @property {number} UnprocessableEntity=422 - WebDAV: The entity provided with the request is incomprehensible or incomplete.\r\n * @property {number} Locked=423 - WebDAV: The operation can not take place because the resource is locked.\r\n * @property {number} MethodFailure=424 - WebDAV: A method of the transaction failed.\r\n * @property {number} UnorderedCollection=425 - WebDAV RFC 3648. This code is defined in the WebDAV Advanced Collections Protocol draft , but is absent from the Web Distributed Authoring and\r\n *     Versioning (WebDAV) Ordered Collections Protocol.\r\n * @property {number} UpgradeRequired=426 - RFC 2817 The client should change protocol, for example to TLS / 1.0 .\r\n * @property {number} PreconditionRequired=428 - RFC 6585 The request must be conditional.\r\n * @property {number} TooManyRequests=429 - RFC 6585 The client has issued too many requests within a given time.\r\n * @property {number} RequestHeaderFieldsTooLarge=431 - RFC 6585 HTTP headers issued exceed the maximum size allowed by the server.\r\n * @property {number} NoResponse=444 - Indicates that the server did not return any information to the client and closed the connection.\r\n * @property {number} RetryWith=449 - Code defined by Microsoft . The request should be returned after performing an action.\r\n * @property {number} BlockedByWindowsParentalControls=450 - Code defined by Microsoft. This error is generated when Windows Parental Control tools are enabled and block access to the page.\r\n * @property {number} UnavailableForLegalReasons=451 - This error code indicates that the requested resource is inaccessible for legal reasons\r\n * @property {number} UnrecoverableError=456 - WebDAV: Fatal error.\r\n * @property {number} SSLCertificateError=495 - An extension of the 400 Bad Request error, used when the client provided an invalid certificate.\r\n * @property {number} SSLCertificateRequired=496 - An extension of the 400 Bad Request error, used when a required client certificate is not provided.\r\n * @property {number} HTTPRequestSentToHTTPSPort=497 - An extension of the 400 Bad Request error, used when the client sends an HTTP request to port 443 normally intended for HTTPS requests.\r\n * @property {number} ClientClosedRequest=499 - The client closed the connection before receiving the response. This error occurs when the processing is too long on the server side.\r\n * @property {number} InternalServerError=500 - Internal server error.\r\n * @property {number} NotImplemented=501 - Functionality claimed not supported by the server.\r\n * @property {number} BadGateway=502 - Wrong response sent to an intermediate server by another server.\r\n * @property {number} ServiceUnavailable=503 - Service temporarily unavailable or under maintenance.\r\n * @property {number} GatewayTimeOut=504 - Waiting time for a response from a server to an intermediate server that has elapsed.\r\n * @property {number} HTTPVersionNotSupported=505 - HTTP version not managed by the server.\r\n * @property {number} VariantAlsoNegotiates=506 - RFC 2295: Negotiation Error. Transparent content negociation.\r\n * @property {number} InsufficientStorage=507 - WebDAV: Insufficient space to modify properties or build the collection.\r\n * @property {number} LoopDetected=508 - WebDAV: Loop in a Resource Match\r\n * @property {number} BandwidthLimitExceeded=509 - Used by many servers to indicate a quota overrun.\r\n * @property {number} NotExtended=510 - RFC 2774: The request does not respect the policy for accessing extended HTTP resources.\r\n * @property {number} NetworkAuthenticationRequired=511 - RFC 6585: The client must authenticate to access the network. Used by captive portals to redirect clients to the authentication page.\r\n * @property {number} UnknownError=520 - Error 520 is used as a wildcard response when the origin server returns an unexpected result.\r\n * @property {number} WebServerIsDown=521 - The server has refused the connection from Cloudflare.\r\n * @property {number} ConnectionTimedOut=522 - Cloudflare could not negotiate a TCP handshake with the origin server.\r\n * @property {number} OriginIsUnreachable=523 - Cloudflare failed to reach the origin server. This can occur if DNS server name resolution fails.\r\n * @property {number} ATimeoutOccured=524 - Cloudflare established a TCP connection with the origin server but did not receive an HTTP response before the login timeout.\r\n * @property {number} SSLHandshakeFailed=525 - Cloudflare could not negotiate SSL / TLS handshake with the origin server.\r\n * @property {number} InvalidSSLCertificate=526 - Cloudflare could not validate the SSL certificate presented by the origin server.\r\n * @property {number} RailgunError=527 - Error 527 indicates that the request has timed out or failed after the WAN connection was established.\r\n *\r\n * @constant\r\n * @type {HttpStatusCode}\r\n * @description HttpStatusCode contains all http status code available to check and process correctly server response.\r\n * @see {@link https://en.wikipedia.org/wiki/List_of_HTTP_status_codes} for further information.\r\n */\r\nconst HttpStatusCode = toEnum( {\r\n\r\n    // 100\r\n    Continue:           { value: 100 },\r\n    SwitchingProtocols: { value: 101 },\r\n    Processing:         { value: 102 },\r\n\r\n    // 200\r\n    Ok:                          { value: 200 },\r\n    Created:                     { value: 201 },\r\n    Accepted:                    { value: 202 },\r\n    NonAuthoritativeInformation: { value: 203 },\r\n    NoContent:                   { value: 204 },\r\n    ResetContent:                { value: 205 },\r\n    PartialContent:              { value: 206 },\r\n    MultiStatus:                 { value: 207 },\r\n    AlreadyReported:             { value: 208 },\r\n    ContentDifferent:            { value: 210 },\r\n    IMUsed:                      { value: 226 },\r\n\r\n    // 300\r\n    MultipleChoices:   { value: 300 },\r\n    MovedPermanently:  { value: 301 },\r\n    Found:             { value: 302 },\r\n    SeeOther:          { value: 303 },\r\n    NotModified:       { value: 304 },\r\n    UseProxy:          { value: 305 },\r\n    Unused:            { value: 306 },\r\n    TemporaryRedirect: { value: 307 },\r\n    PermanentRedirect: { value: 308 },\r\n    TooManyRedirects:  { value: 310 },\r\n\r\n    // 400\r\n    BadRequest:                       { value: 400 },\r\n    Unauthorized:                     { value: 401 },\r\n    PaymentRequired:                  { value: 402 },\r\n    Forbidden:                        { value: 403 },\r\n    NotFound:                         { value: 404 },\r\n    MethodNotAllowed:                 { value: 405 },\r\n    NotAcceptable:                    { value: 406 },\r\n    ProxyAuthenticationRequired:      { value: 407 },\r\n    RequestTimeOut:                   { value: 408 },\r\n    Conflict:                         { value: 409 },\r\n    Gone:                             { value: 410 },\r\n    LengthRequired:                   { value: 411 },\r\n    PreconditionFailed:               { value: 412 },\r\n    RequestEntityTooLarge:            { value: 413 },\r\n    RequestRangeUnsatisfiable:        { value: 416 },\r\n    ExpectationFailed:                { value: 417 },\r\n    ImATeapot:                        { value: 418 },\r\n    BadMapping:                       { value: 421 },\r\n    UnprocessableEntity:              { value: 422 },\r\n    Locked:                           { value: 423 },\r\n    MethodFailure:                    { value: 424 },\r\n    UnorderedCollection:              { value: 425 },\r\n    UpgradeRequired:                  { value: 426 },\r\n    PreconditionRequired:             { value: 428 },\r\n    TooManyRequests:                  { value: 429 },\r\n    RequestHeaderFieldsTooLarge:      { value: 431 },\r\n    NoResponse:                       { value: 444 },\r\n    RetryWith:                        { value: 449 },\r\n    BlockedByWindowsParentalControls: { value: 450 },\r\n    UnavailableForLegalReasons:       { value: 451 },\r\n    UnrecoverableError:               { value: 456 },\r\n    SSLCertificateError:              { value: 495 },\r\n    SSLCertificateRequired:           { value: 496 },\r\n    HTTPRequestSentToHTTPSPort:       { value: 497 },\r\n    ClientClosedRequest:              { value: 499 },\r\n\r\n    // 500\r\n    InternalServerError:           { value: 500 },\r\n    NotImplemented:                { value: 501 },\r\n    BadGateway:                    { value: 502 },\r\n    ServiceUnavailable:            { value: 503 },\r\n    GatewayTimeOut:                { value: 504 },\r\n    HTTPVersionNotSupported:       { value: 505 },\r\n    VariantAlsoNegotiates:         { value: 506 },\r\n    InsufficientStorage:           { value: 507 },\r\n    LoopDetected:                  { value: 508 },\r\n    BandwidthLimitExceeded:        { value: 509 },\r\n    NotExtended:                   { value: 510 },\r\n    NetworkAuthenticationRequired: { value: 511 },\r\n    UnknownError:                  { value: 520 },\r\n    WebServerIsDown:               { value: 521 },\r\n    ConnectionTimedOut:            { value: 522 },\r\n    OriginIsUnreachable:           { value: 523 },\r\n    ATimeoutOccured:               { value: 524 },\r\n    SSLHandshakeFailed:            { value: 525 },\r\n    InvalidSSLCertificate:         { value: 526 },\r\n    RailgunError:                  { value: 527 }\r\n\r\n} )\r\n\r\n/**\r\n * @typedef {Enum} HttpVerb\r\n * @property {string} Create=\"PUT\" - Corresponding to the create http verb for an itee server, namely \"PUT\".\r\n * @property {string} Read=\"POST\" - Corresponding to the read http verb for an itee server, namely \"POST\".\r\n * @property {string} Update=\"PATCH\" - Corresponding to the update http verb for an itee server, namely \"PATCH\".\r\n * @property {string} Delete=\"DELETE\" - Corresponding to the delete http verb for an itee server, namely \"DELETE\".\r\n *\r\n * @constant\r\n * @type {HttpVerb}\r\n * @description HttpVerb contains the CRUD actions with corresponding http verb to request an itee server.\r\n * @see {@link https://en.wikipedia.org/wiki/Create,_read,_update_and_delete} for further information.\r\n */\r\nconst HttpVerb = toEnum( {\r\n    Create: { value: 'PUT' },\r\n    Read:   { value: 'POST' },\r\n    Update: { value: 'PATCH' },\r\n    Delete: { value: 'DELETE' }\r\n} )\r\n\r\n/**\r\n * The Keys Enum give the associated key_code\r\n * @type {Enum}\r\n */\r\nconst Keys = toEnum( {\r\n    BACKSPACE:            { value: 8 },\r\n    TAB:                  { value: 9 },\r\n    ENTER:                { value: 13 },\r\n    SHIFT:                { value: 16 },\r\n    CTRL:                 { value: 17 },\r\n    ALT:                  { value: 18 },\r\n    PAUSE:                { value: 19 },\r\n    CAPS_LOCK:            { value: 20 },\r\n    ESCAPE:               { value: 27 },\r\n    SPACE:                { value: 32 },\r\n    PAGE_UP:              { value: 33 },\r\n    PAGE_DOWN:            { value: 34 },\r\n    END:                  { value: 35 },\r\n    HOME:                 { value: 36 },\r\n    LEFT_ARROW:           { value: 37 },\r\n    UP_ARROW:             { value: 38 },\r\n    RIGHT_ARROW:          { value: 39 },\r\n    DOWN_ARROW:           { value: 40 },\r\n    INSERT:               { value: 45 },\r\n    DELETE:               { value: 46 },\r\n    ZERO:                 { value: 48 },\r\n    ONE:                  { value: 49 },\r\n    TWO:                  { value: 50 },\r\n    THREE:                { value: 51 },\r\n    FOUR:                 { value: 52 },\r\n    FIVE:                 { value: 53 },\r\n    SIX:                  { value: 54 },\r\n    SEVEN:                { value: 55 },\r\n    HEIGHT:               { value: 56 },\r\n    NINE:                 { value: 57 },\r\n    A:                    { value: 65 },\r\n    B:                    { value: 66 },\r\n    C:                    { value: 67 },\r\n    D:                    { value: 68 },\r\n    E:                    { value: 69 },\r\n    F:                    { value: 70 },\r\n    G:                    { value: 71 },\r\n    H:                    { value: 72 },\r\n    I:                    { value: 73 },\r\n    J:                    { value: 74 },\r\n    K:                    { value: 75 },\r\n    L:                    { value: 76 },\r\n    M:                    { value: 77 },\r\n    N:                    { value: 78 },\r\n    O:                    { value: 79 },\r\n    P:                    { value: 80 },\r\n    Q:                    { value: 81 },\r\n    R:                    { value: 82 },\r\n    S:                    { value: 83 },\r\n    T:                    { value: 84 },\r\n    U:                    { value: 85 },\r\n    V:                    { value: 86 },\r\n    W:                    { value: 87 },\r\n    X:                    { value: 88 },\r\n    Y:                    { value: 89 },\r\n    Z:                    { value: 90 },\r\n    LEFT_WINDOW_KEY:      { value: 91 },\r\n    RIGHT_WINDOW_KEY:     { value: 92 },\r\n    SELECT_KEY:           { value: 93 },\r\n    NUMPAD_0:             { value: 96 },\r\n    NUMPAD_1:             { value: 97 },\r\n    NUMPAD_2:             { value: 98 },\r\n    NUMPAD_3:             { value: 99 },\r\n    NUMPAD_4:             { value: 100 },\r\n    NUMPAD_5:             { value: 101 },\r\n    NUMPAD_6:             { value: 102 },\r\n    NUMPAD_7:             { value: 103 },\r\n    NUMPAD_8:             { value: 104 },\r\n    NUMPAD_9:             { value: 105 },\r\n    MULTIPLY:             { value: 106 },\r\n    ADD:                  { value: 107 },\r\n    SUBSTRACT:            { value: 109 },\r\n    DECIMAL_POINT:        { value: 110 },\r\n    DIVIDE:               { value: 111 },\r\n    F1:                   { value: 112 },\r\n    F2:                   { value: 113 },\r\n    F3:                   { value: 114 },\r\n    F4:                   { value: 115 },\r\n    F5:                   { value: 116 },\r\n    F6:                   { value: 117 },\r\n    F7:                   { value: 118 },\r\n    F8:                   { value: 119 },\r\n    F9:                   { value: 120 },\r\n    F10:                  { value: 121 },\r\n    F11:                  { value: 122 },\r\n    F12:                  { value: 123 },\r\n    NUM_LOCK:             { value: 144 },\r\n    SCROLL_LOCK:          { value: 145 },\r\n    SEMICOLON:            { value: 186 },\r\n    EQUAL:                { value: 187 },\r\n    COMMA:                { value: 188 },\r\n    DASH:                 { value: 189 },\r\n    PERIODE:              { value: 190 },\r\n    SLASH:                { value: 191 },\r\n    GRAVE_ACCENT:         { value: 192 },\r\n    OPEN_SQUARE_BRACKET:  { value: 219 },\r\n    BACKSLASH:            { value: 220 },\r\n    CLOSE_SQUARE_BRACKET: { value: 221 },\r\n    SINGLE_QUOTE:         { value: 222 }\r\n} )\r\n\r\n// Todo\r\nconst MimeType = toEnum( {} )\r\n\r\n/**\r\n * This Enum expose 4 common state of mouse button.\r\n * Wheel, Left, Middle and Right\r\n * @type {Enum}\r\n */\r\nconst Mouse = toEnum( {\r\n    WHEEL:  { value: -1 },\r\n    LEFT:   { value: 0 },\r\n    MIDDLE: { value: 1 },\r\n    RIGHT:  { value: 2 }\r\n} )\r\n\r\n/**\r\n * @typedef {Enum} ResponseType\r\n * @property {string} ArrayBuffer=\"arraybuffer\" - The \"arraybuffer\" server response type.\r\n * @property {string} Blob=\"blob\" - The \"blob\" server response type.\r\n * @property {string} Document=\"document\" - The \"document\" server response type.\r\n * @property {string} Json=\"json\" - The \"json\" server response type.\r\n * @property {string} DOMString=\"text\" - The \"text\" server response type.\r\n * @property {string} Default=\"text\" - The \"\" server response type ( equivalent to DOMString ).\r\n *\r\n * @constant\r\n * @type {ResponseType}\r\n * @description ResponseType allow to filter wich type of response is recieved from the server.\r\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType} for further information.\r\n */\r\nconst ResponseType = toEnum( {\r\n    ArrayBuffer: { value: 'arraybuffer' },\r\n    Blob:        { value: 'blob' },\r\n    Document:    { value: 'document' },\r\n    Json:        { value: 'json' },\r\n    DOMString:   { value: 'text' },\r\n    Default:     { value: '' }\r\n} )\r\n\r\nexport {\r\n    FileFormat,\r\n    HttpStatusCode,\r\n    HttpVerb,\r\n    Keys,\r\n    MimeType,\r\n    Mouse,\r\n    ResponseType\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @class TCache\r\n * @classdesc TCache is a simple javascript object whose purpose is to store some ket/value data to future usage. It could be enable/disable.\r\n *\r\n * @example\r\n * var cache = new TCache()\r\n * cache.add( 'foo', 'bar' )\r\n * TLogger.log( cache.get('foo') ) // 'bar'\r\n */\r\n\r\nimport {\r\n    isFunction,\r\n    isNotArray,\r\n    isNotBoolean,\r\n    isNotObject,\r\n    isNotUndefined,\r\n    isNull,\r\n    isString,\r\n    isUndefined\r\n} from 'itee-validators'\r\n\r\n/**\r\n * @class Super class cache!\r\n */\r\nclass TStore {\r\n\r\n    static _validate ( value, validators ) {\r\n\r\n        for ( let validatorIndex = 0, numberOfValidators = validators.length ; validatorIndex < numberOfValidators ; validatorIndex++ ) {\r\n\r\n            let validator = validators[ validatorIndex ]\r\n\r\n            if ( !validator.validator( value ) ) {\r\n\r\n                const error = validator.error\r\n                if ( isString( error ) ) {\r\n                    throw new TypeError( error )\r\n                } else if ( isFunction( error ) ) {\r\n                    throw new TypeError( error( value ) )\r\n                } else {\r\n                    throw new TypeError( `${value} is invalid.` )\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor ( parameters = {} ) {\r\n\r\n        const _parameters = {\r\n            ...{\r\n                collection:      {},\r\n                allowOverride:   false,\r\n                keyValidators:   [],\r\n                valueValidators: []\r\n            }, ...parameters\r\n        }\r\n\r\n        this.collection      = _parameters.collection\r\n        this.allowOverride   = _parameters.allowOverride\r\n        this.keyValidators   = _parameters.keyValidators\r\n        this.valueValidators = _parameters.valueValidators\r\n\r\n    }\r\n\r\n    get collection () {\r\n\r\n        return this._collection\r\n\r\n    }\r\n\r\n    set collection ( value ) {\r\n\r\n        const memberName = 'Collection'\r\n        const expect     = 'Expect an object.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotObject( value ) ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._collection = value\r\n\r\n    }\r\n\r\n    get allowOverride () {\r\n\r\n        return this._allowOverride\r\n\r\n    }\r\n\r\n    set allowOverride ( value ) {\r\n\r\n        const memberName = 'Allow override'\r\n        const expect     = 'Expect a boolean.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotBoolean( value ) ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._allowOverride = value\r\n\r\n    }\r\n\r\n    get keyValidators () {\r\n\r\n        return this._keyValidators\r\n\r\n    }\r\n\r\n    set keyValidators ( value ) {\r\n\r\n        const memberName = 'Keys validators'\r\n        const expect     = 'Expect an array of TValidator or an empty array.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotArray( value ) ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._keyValidators = value\r\n\r\n    }\r\n\r\n    get valueValidators () {\r\n        return this._valueValidators\r\n    }\r\n\r\n    set valueValidators ( value ) {\r\n\r\n        const memberName = 'Values validators'\r\n        const expect     = 'Expect an array of TValidator or an empty array.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotArray( value ) ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._valueValidators = value\r\n\r\n    }\r\n\r\n    get keys () {\r\n\r\n        return Object.keys( this._collection )\r\n\r\n    }\r\n\r\n    get values () {\r\n\r\n        return Object.values( this._collection )\r\n\r\n    }\r\n\r\n    setCollection ( value ) {\r\n\r\n        this.collection = value\r\n        return this\r\n\r\n    }\r\n\r\n    setAllowOverride ( value ) {\r\n\r\n        this.allowOverride = value\r\n        return this\r\n\r\n    }\r\n\r\n    setKeyValidators ( value ) {\r\n\r\n        this.keyValidators( value )\r\n        return this\r\n\r\n    }\r\n\r\n    setValueValidators ( value ) {\r\n\r\n        this.valueValidators( value )\r\n        return this\r\n\r\n    }\r\n\r\n    /**\r\n     * Allow to add new key value pair, the key cannot be null, undefined, or an empty string.\r\n     * In case the key already exist, the value will be overwritten if force params is true or this\r\n     * allow overriding else it throw an TypeError.\r\n     *\r\n     * @param key\r\n     * @param value\r\n     * @param force\r\n     */\r\n    add ( key, value, force = false ) {\r\n\r\n        if ( this.contain( key ) && ( !this._allowOverride && !force ) ) {\r\n            throw new TypeError( `Item with key (${key}) already exist in collection !` )\r\n        }\r\n\r\n        TStore._validate( key, this._keyValidators )\r\n        TStore._validate( value, this._valueValidators )\r\n\r\n        this._collection[ key ] = value\r\n\r\n        return this\r\n\r\n    }\r\n\r\n    contain ( key ) {\r\n\r\n        return isNotUndefined( this._collection[ key ] )\r\n\r\n    }\r\n\r\n    /**\r\n     * Return the value associated to the key.\r\n     *\r\n     * @param key\r\n     * @returns {*}\r\n     */\r\n    get ( key ) {\r\n\r\n        return this._collection[ key ]\r\n\r\n    }\r\n\r\n    /**\r\n     * Remove to value from the cache. Does nothing if the key does not exist.\r\n     *\r\n     * @param key\r\n     */\r\n    remove ( key ) {\r\n\r\n        delete this._collection[ key ]\r\n\r\n        return this\r\n\r\n    }\r\n\r\n    /**\r\n     * Clear the cache and reset collection to an empty object.\r\n     */\r\n    clear () {\r\n\r\n        this._collection = {}\r\n\r\n        return this\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { TStore }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport { TStore } from './TStore'\r\n\r\nclass TAbstractFactory extends TStore {\r\n\r\n    constructor ( parameters = {} ) {\r\n\r\n        const _parameters = { ...{}, ...parameters }\r\n\r\n        super( _parameters )\r\n\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    create ( key, ...parameters ) {\r\n\r\n        // Need to be reimplemented\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { TAbstractFactory }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport { TAbstractFactory } from './TAbstractFactory'\r\n\r\nclass TCloningFactory extends TAbstractFactory {\r\n\r\n    constructor ( parameters = {} ) {\r\n\r\n        const _parameters = { ...{}, ...parameters }\r\n\r\n        super( _parameters )\r\n\r\n    }\r\n\r\n    create ( key, ...parameters ) {\r\n        super.create( key, ...parameters )\r\n\r\n        return this.get( key ).clone( ...parameters )\r\n\r\n    }\r\n}\r\n\r\nexport { TCloningFactory }\r\n\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport { TAbstractFactory } from './TAbstractFactory'\r\n\r\nclass TInstancingFactory extends TAbstractFactory {\r\n\r\n    constructor ( parameters = {} ) {\r\n\r\n        const _parameters = { ...{}, ...parameters }\r\n\r\n        super( _parameters )\r\n\r\n    }\r\n\r\n    create ( key, ...parameters ) {\r\n        super.create( key, ...parameters )\r\n\r\n        return new this.get( key )( ...parameters )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { TInstancingFactory }\r\n\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @class Todo...\r\n * @classdesc Todo...\r\n * @example Todo...\r\n *\r\n */\r\n\r\n/* eslint-env browser */\r\n\r\nimport { toEnum } from 'itee-utils'\r\nimport {\r\n    isArrayOfObject,\r\n    isArrayOfString,\r\n    isNull,\r\n    isObject,\r\n    isString,\r\n    isUndefined\r\n}                 from 'itee-validators'\r\n\r\n/**\r\n *\r\n * @type {Object}\r\n */\r\nconst LogOutput = toEnum( {\r\n    Console:  1,\r\n    Html:     2,\r\n    Toast:    4,\r\n    File:     8,\r\n    Database: 16,\r\n    All:      255\r\n} )\r\n\r\nconst LogType = toEnum( {\r\n    Message:  0,\r\n    Progress: 1,\r\n    Time:     2\r\n} )\r\n\r\n/**\r\n *\r\n * @type {Object}\r\n */\r\nconst LogLevel = toEnum( {\r\n    None:    0,\r\n    Debug:   1,\r\n    Info:    2,\r\n    Warning: 4,\r\n    Error:   8,\r\n    All:     255\r\n} )\r\n\r\n/*\r\n *  Allow to toast an message or error to user\r\n *  @level String who represent the gravity level of message between \"error | warn (for warning) | other (will display like info message)\"\r\n *  @message String message to display\r\n */\r\n/**\r\n *\r\n * @param outputs\r\n * @constructor\r\n */\r\nclass TLogger {\r\n\r\n    /**\r\n     *\r\n     * @param level\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    static _levelToString ( level ) {\r\n\r\n        let levelString = ''\r\n\r\n        switch ( level ) {\r\n\r\n            case LogLevel.Info:\r\n                levelString = 'info'\r\n                break\r\n\r\n            case LogLevel.Warning:\r\n                levelString = 'warning'\r\n                break\r\n\r\n            case LogLevel.Error:\r\n                levelString = 'error'\r\n                break\r\n\r\n            default:\r\n                levelString = 'unknownLogLevel'\r\n                break\r\n\r\n        }\r\n\r\n        return levelString\r\n\r\n    }\r\n\r\n    constructor ( parameters = {} ) {\r\n\r\n        const _parameters = {\r\n            ...{\r\n                outputLevel: LogLevel.Error,\r\n                outputs:     LogOutput.Console\r\n            }, ...parameters\r\n        }\r\n\r\n        this.outputLevel = _parameters.outputLevel\r\n        this.outputs     = _parameters.outputs\r\n\r\n        this._logsArray    = []\r\n        this._timers       = {}\r\n        this._counterTrace = 0\r\n\r\n    }\r\n\r\n    get outputLevel () {\r\n        return this._outputLevel\r\n    }\r\n\r\n    set outputLevel ( value ) {\r\n\r\n        const memberName = 'OutputLevel'\r\n        const expect     = 'Expect a value from LogLevel enum.'\r\n\r\n        if ( isNull( value ) ) { throw new Error( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new Error( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        //        if ( !Object.keys( LogLevel ).includes( value ) ) { throw new Error( `${memberName} cannot be an instance of ${value.constructor.name}. ${expect}` ) }\r\n\r\n        this._outputLevel = value\r\n\r\n    }\r\n\r\n    get outputs () {\r\n        return this._outputs\r\n    }\r\n\r\n    set outputs ( value ) {\r\n\r\n        const memberName = 'Output'\r\n        const expect     = 'Expect a value from LogOutput enum.'\r\n\r\n        if ( isNull( value ) ) { throw new Error( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new Error( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        //        if ( !Object.keys( LogOutput ).includes( value ) ) { throw new Error( `${memberName} cannot be an instance of ${value.constructor.name}. ${expect}` ) }\r\n\r\n        this._outputs = value\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param level\r\n     * @param datas\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _formatTrace ( level, datas ) {\r\n\r\n        const levelString = TLogger._levelToString( level )\r\n        const tmpLevel    = `${levelString}_${this._counterTrace}`\r\n\r\n        if ( isString( datas ) ) {\r\n\r\n            this._logsArray[ tmpLevel ] = datas\r\n\r\n        } else if ( isObject( datas ) ) {\r\n\r\n            this._logsArray[ tmpLevel ] = TLogger._formatObjectError( datas )\r\n\r\n        } else if ( isArrayOfString( datas ) ) {\r\n\r\n            this._logsArray[ tmpLevel ] = datas.toString()\r\n\r\n        } else if ( isArrayOfObject( datas ) ) {\r\n\r\n            this._logsArray[ tmpLevel ] = ''\r\n\r\n            for ( let dataIndex = 0, numberOfDatas = datas.length ; dataIndex < numberOfDatas ; dataIndex++ ) {\r\n                this._formatTrace( level, datas[ dataIndex ] )\r\n            }\r\n\r\n        } else {\r\n\r\n            this._logsArray[ tmpLevel ] = ( datas ) ? datas.toString() : 'Empty log data !'\r\n\r\n        }\r\n\r\n        this._counterTrace++\r\n        return this._logsArray[ tmpLevel ]\r\n\r\n    }\r\n\r\n    // Todo: Use listener models\r\n    /**\r\n     *\r\n     * @param message\r\n     */\r\n    dispatch ( message ) {\r\n\r\n        const type = message.type\r\n        switch ( type ) {\r\n\r\n            case LogType.Message:\r\n                this._dispatchMessage( message )\r\n                break\r\n\r\n            case LogType.Progress:\r\n                this._dispatchProgress( message )\r\n                break\r\n\r\n            case LogType.Time:\r\n                this._dispatchTime( message )\r\n                break\r\n\r\n            default:\r\n                throw new RangeError( `Invalid switch parameter: ${type}` )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchMessage ( message ) {\r\n\r\n        const level = message.level\r\n        const data  = message.message\r\n\r\n        // Root message in function of gravity\r\n        switch ( level ) {\r\n\r\n            case LogLevel.Error:\r\n                if ( this.outputLevel & LogLevel.Error ) {\r\n                    this._dispatchErrorMessage( data )\r\n                }\r\n                break\r\n\r\n            case LogLevel.Warning:\r\n                if ( this.outputLevel & LogLevel.Warning ) {\r\n                    this._dispatchWarningMessage( data )\r\n                }\r\n                break\r\n\r\n            case LogLevel.Info:\r\n                if ( this.outputLevel & LogLevel.Info ) {\r\n                    this._dispatchInfoMessage( data )\r\n                }\r\n                break\r\n\r\n            case LogLevel.Debug:\r\n                if ( this.outputLevel & LogLevel.Debug ) {\r\n                    this._dispatchDebugMessage( data )\r\n                }\r\n                break\r\n\r\n            // For \"Debug\" output, don't store trace like this !\r\n            default:\r\n                throw new RangeError( `Invalid switch parameter: ${level}` )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchErrorMessage ( errorMessage ) {\r\n\r\n        if ( this.outputs & LogOutput.Console ) {\r\n\r\n            console.error( errorMessage )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Html ) {\r\n\r\n            const span = document.createElement( 'span' )\r\n            span.classList.add( 'log-error' )\r\n            span.innerText = errorMessage\r\n            document.body.appendChild( span )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Toast ) {\r\n\r\n            // Todo: implement TToast\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.File ) {\r\n\r\n            // Todo: implement file\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Database ) {\r\n\r\n            // Todo: implement db\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchWarningMessage ( warnMessage ) {\r\n\r\n        if ( this.outputs & LogOutput.Console ) {\r\n\r\n            console.warn( warnMessage )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Html ) {\r\n\r\n            const span = document.createElement( 'span' )\r\n            span.classList.add( 'log-warning' )\r\n            span.innerText = warnMessage\r\n            document.body.appendChild( span )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Toast ) {\r\n\r\n            // Todo: implement TToast\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.File ) {\r\n\r\n            // Todo: implement file\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Database ) {\r\n\r\n            // Todo: implement db\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchInfoMessage ( infoMessage ) {\r\n\r\n        if ( this.outputs & LogOutput.Console ) {\r\n\r\n            console.log( infoMessage )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Html ) {\r\n\r\n            const span = document.createElement( 'span' )\r\n            span.classList.add( 'log-info' )\r\n            span.innerText = infoMessage\r\n            document.body.appendChild( span )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Toast ) {\r\n\r\n            // Todo: implement TToast\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.File ) {\r\n\r\n            // Todo: implement file\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Database ) {\r\n\r\n            // Todo: implement db\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchDebugMessage ( debugMessage ) {\r\n\r\n        if ( this.outputs & LogOutput.Console ) {\r\n\r\n            console.log( debugMessage )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Html ) {\r\n\r\n            const span = document.createElement( 'span' )\r\n            span.classList.add( 'log-info' )\r\n            span.innerText = debugMessage\r\n            document.body.appendChild( span )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Toast ) {\r\n\r\n            // Todo: implement TToast\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.File ) {\r\n\r\n            // Todo: implement file\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Database ) {\r\n\r\n            // Todo: implement db\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchProgress ( progress ) {\r\n\r\n        const level          = progress.level\r\n        let formattedMessage = progress.message\r\n\r\n        // Root message in function of gravity\r\n        switch ( level ) {\r\n\r\n            case LogLevel.Info:\r\n                if ( this.outputLevel & LogLevel.Info ) {\r\n                    this._dispatchInfoProgress( formattedMessage )\r\n                }\r\n                break\r\n\r\n            case LogLevel.Debug:\r\n                if ( this.outputLevel & LogLevel.Debug ) {\r\n                    this._dispatchDebugProgress( formattedMessage )\r\n                }\r\n                break\r\n\r\n            // For \"Debug\" output, don't store trace like this !\r\n            default:\r\n                throw new RangeError( `Invalid switch parameter: ${level}` )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchInfoProgress ( infoProgress ) {\r\n\r\n        if ( this.outputs & LogOutput.Console ) {\r\n\r\n            console.log( infoProgress )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Html ) {\r\n\r\n            const span = document.createElement( 'span' )\r\n            span.classList.add( 'log-info' )\r\n            span.innerText = infoProgress\r\n            document.body.appendChild( span )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Toast ) {\r\n\r\n            // Todo: implement TToast\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.File ) {\r\n\r\n            // Todo: implement file\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Database ) {\r\n\r\n            // Todo: implement db\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchDebugProgress ( debugProgress ) {\r\n\r\n        if ( this.outputs & LogOutput.Console ) {\r\n\r\n            console.log( debugProgress )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Html ) {\r\n\r\n            const span = document.createElement( 'span' )\r\n            span.classList.add( 'log-info' )\r\n            span.innerText = debugProgress\r\n            document.body.appendChild( span )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Toast ) {\r\n\r\n            // Todo: implement TToast\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.File ) {\r\n\r\n            // Todo: implement file\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Database ) {\r\n\r\n            // Todo: implement db\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchTime ( time ) {\r\n\r\n        console.log( time.message )\r\n\r\n    }\r\n\r\n    debug ( debug ) {\r\n\r\n        this.dispatch( {\r\n            type:    LogType.Message,\r\n            level:   LogLevel.Debug,\r\n            message: debug\r\n        } )\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param info\r\n     */\r\n    log ( info ) {\r\n\r\n        this.dispatch( {\r\n            type:    LogType.Message,\r\n            level:   LogLevel.Info,\r\n            message: info\r\n        } )\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param warning\r\n     */\r\n    warn ( warning ) {\r\n\r\n        this.dispatch( {\r\n            type:    LogType.Message,\r\n            level:   LogLevel.Warning,\r\n            message: warning\r\n        } )\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param error\r\n     */\r\n    error ( error ) {\r\n\r\n        this.dispatch( {\r\n            type:    LogType.Message,\r\n            level:   LogLevel.Error,\r\n            message: error\r\n        } )\r\n\r\n    }\r\n\r\n    progress ( progress ) {\r\n\r\n        progress.preventDefault()\r\n        if ( progress.cancelable ) {\r\n            progress.stopImmediatePropagation()\r\n        }\r\n\r\n        if ( progress.lengthComputable ) {\r\n\r\n            const type        = progress.type\r\n            const loaded      = progress.loaded\r\n            const total       = progress.total\r\n            const advancement = Math.round( ( loaded / total ) * 10000 ) / 100\r\n            const message     = `${type}: ${advancement}% [${loaded}/${total}]`\r\n\r\n            this.dispatch( {\r\n                type:    LogType.Progress,\r\n                level:   LogLevel.Info,\r\n                message: message\r\n            } )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    startChronoFor ( key ) {\r\n\r\n        this._timers[ key ] = new Date().getTime()\r\n\r\n    }\r\n\r\n    stopChronoFor ( key ) {\r\n\r\n        const deltaTime = ( new Date().getTime() - this._timers[ key ] )\r\n        const message   = `${key} take ${deltaTime}ms.`\r\n\r\n        this.dispatch( {\r\n            type:    LogType.Time,\r\n            level:   LogLevel.Debug,\r\n            message: message\r\n        } )\r\n\r\n    }\r\n\r\n    setOutputLevel ( value ) {\r\n\r\n        this.outputLevel = value\r\n        return this\r\n\r\n    }\r\n\r\n    setOutput ( value ) {\r\n\r\n        this.outputs = value\r\n        return this\r\n\r\n    }\r\n\r\n}\r\n\r\nconst DefaultLogger = new TLogger()\r\n\r\nexport {\r\n    TLogger,\r\n    DefaultLogger,\r\n    LogLevel,\r\n    LogType,\r\n    LogOutput\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * based on Lee Stemkoski work\r\n *\r\n * @class TFactory\r\n * @classdesc Todo...\r\n * @example Todo...\r\n * (1) create a global variable:\r\n *      var keyboard = new TKeyboardController();\r\n * (2) during main loop:\r\n *       keyboard.update();\r\n * (3) check state of keys:\r\n *       keyboard.down(\"A\")    -- true for one update cycle after key is pressed\r\n *       keyboard.pressed(\"A\") -- true as long as key is being pressed\r\n *       keyboard.up(\"A\")      -- true for one update cycle after key is released\r\n *\r\n *  See TKeyboardController.k object data below for names of keys whose state can be polled\r\n *\r\n */\r\n\r\n/* eslint-env browser */\r\n\r\nimport { Keys }                     from '../cores/TConstants'\r\nimport { DefaultLogger as TLogger } from '../loggers/TLogger'\r\n\r\nclass TKeyboardController {\r\n\r\n    /**\r\n     *\r\n     * @param keyCode\r\n     * @return {string}\r\n     */\r\n    static keyName ( keyCode ) {\r\n        return ( TKeyboardController.k[ keyCode ] !== null ) ?\r\n            TKeyboardController.k[ keyCode ] :\r\n            String.fromCharCode( keyCode )\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param event\r\n     */\r\n    static onKeyUp ( event ) {\r\n        var key = TKeyboardController.keyName( event.keyCode )\r\n        if ( TKeyboardController.status[ key ] ) {\r\n            TKeyboardController.status[ key ].pressed = false\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param event\r\n     */\r\n    static onKeyDown ( event ) {\r\n        var key = TKeyboardController.keyName( event.keyCode )\r\n        if ( !TKeyboardController.status[ key ] ) {\r\n            TKeyboardController.status[ key ] = {\r\n                down:              false,\r\n                pressed:           false,\r\n                up:                false,\r\n                updatedPreviously: false\r\n            }\r\n        }\r\n    }\r\n\r\n    constructor ( /*parameters = {}*/ ) {\r\n\r\n        /*\r\n         const _parameters = {\r\n         ...{}, ...parameters\r\n         }\r\n         */\r\n\r\n        // bind keyEvents\r\n        document.addEventListener( 'keydown', TKeyboardController.onKeyDown, false )\r\n        document.addEventListener( 'keyup', TKeyboardController.onKeyUp, false )\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    update () {\r\n        for ( var key in TKeyboardController.status ) {\r\n            // insure that every keypress has \"down\" status exactly once\r\n            if ( !TKeyboardController.status[ key ].updatedPreviously ) {\r\n                TKeyboardController.status[ key ].down              = true\r\n                TKeyboardController.status[ key ].pressed           = true\r\n                TKeyboardController.status[ key ].updatedPreviously = true\r\n            } else { // updated previously\r\n                TKeyboardController.status[ key ].down = false\r\n            }\r\n\r\n            // key has been flagged as \"up\" since last update\r\n            if ( TKeyboardController.status[ key ].up ) {\r\n                delete TKeyboardController.status[ key ]\r\n                continue // move on to next key\r\n            }\r\n\r\n            if ( !TKeyboardController.status[ key ].pressed ) // key released\r\n            {\r\n                TKeyboardController.status[ key ].up = true\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param keyName\r\n     * @return {*}\r\n     */\r\n    down ( keyName ) {\r\n        return ( TKeyboardController.status[ keyName ] && TKeyboardController.status[ keyName ].down )\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param keyName\r\n     * @return {*|pressed|boolean}\r\n     */\r\n    pressed ( keyName ) {\r\n        return ( TKeyboardController.status[ keyName ] && TKeyboardController.status[ keyName ].pressed )\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param keyName\r\n     * @return {*}\r\n     */\r\n    up ( keyName ) {\r\n        return ( TKeyboardController.status[ keyName ] && TKeyboardController.status[ keyName ].up )\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    debug () {\r\n        var list = 'Keys active: '\r\n        for ( var arg in TKeyboardController.status ) {\r\n            list += ' ' + arg\r\n        }\r\n        TLogger.log( list )\r\n    }\r\n\r\n}\r\n\r\nTKeyboardController.k      = Keys\r\nTKeyboardController.status = {}\r\n\r\nexport { TKeyboardController }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @class Todo...\r\n * @classdesc Todo...\r\n * @example Todo...\r\n *\r\n */\r\n\r\n/* eslint-env browser */\r\n\r\nclass TMouseController {\r\n\r\n    constructor ( /*parameters = {}*/ ) {\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { TMouseController }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @class Todo...\r\n * @classdesc Todo...\r\n * @example Todo...\r\n *\r\n */\r\n\r\nimport { toEnum } from 'itee-utils'\r\nimport {\r\n    isNotArrayBuffer,\r\n    isNotBoolean,\r\n    isNotNumber,\r\n    isNull,\r\n    isUndefined\r\n}                 from 'itee-validators'\r\n\r\n/* eslint-env browser */\r\n\r\n/**\r\n *\r\n * @type {Object}\r\n */\r\nconst Endianness = toEnum( {\r\n    Little: true,\r\n    Big:    false\r\n} )\r\n\r\n/**\r\n *\r\n * @type {Object}\r\n */\r\nconst Byte = toEnum( {\r\n    One:    1,\r\n    Two:    2,\r\n    Four:   4,\r\n    Height: 8\r\n} )\r\n\r\n/**\r\n *\r\n * @param buffer\r\n * @param offset\r\n * @param length\r\n * @param endianness\r\n * @constructor\r\n */\r\n\r\nclass TBinaryReader {\r\n\r\n    constructor ( parameters = {} ) {\r\n\r\n        const _parameters = {\r\n            ...{\r\n                buffer:     new ArrayBuffer( 0 ),\r\n                offset:     0,\r\n                length:     0,\r\n                endianness: Endianness.Little\r\n            }, ...parameters\r\n        }\r\n\r\n        this.buffer     = _parameters.buffer\r\n        this.offset     = _parameters.offset\r\n        this.length     = _parameters.length\r\n        this.endianness = _parameters.endianness\r\n\r\n        this._updateDataView()\r\n\r\n    }\r\n\r\n    get buffer () {\r\n        return this._buffer\r\n    }\r\n\r\n    set buffer ( value ) {\r\n\r\n        const memberName = 'Buffer'\r\n        const expect     = 'Expect an instance of ArrayBuffer.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotArrayBuffer ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._buffer = value\r\n        this._offset = 0\r\n        this._length = value.byteLength\r\n\r\n        this._updateDataView()\r\n\r\n    }\r\n\r\n    get offset () {\r\n        return this._offset\r\n    }\r\n\r\n    set offset ( value ) {\r\n\r\n        const memberName = 'Offset'\r\n        const expect     = 'Expect a number.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotNumber( value ) ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._offset = value\r\n\r\n        this._updateDataView()\r\n\r\n    }\r\n\r\n    get length () {\r\n        return this._length\r\n    }\r\n\r\n    set length ( value ) {\r\n\r\n        const memberName = 'Length'\r\n        const expect     = 'Expect a number.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotNumber( value ) ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._length = value\r\n\r\n        this._updateDataView()\r\n\r\n    }\r\n\r\n    get endianness () {\r\n        return this._endianness\r\n    }\r\n\r\n    set endianness ( value ) {\r\n\r\n        const memberName = 'Endianness'\r\n        const expect     = 'Expect a boolean.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotBoolean( value ) ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._endianness = value\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param buffer\r\n     * @param offset\r\n     * @param length\r\n     * @return {this}\r\n     */\r\n    setBuffer ( buffer, offset, length ) {\r\n\r\n        this.buffer = buffer\r\n        this.offset = offset || 0\r\n        this.length = length || buffer.byteLength\r\n\r\n        return this\r\n\r\n    }\r\n\r\n    setOffset ( value ) {\r\n\r\n        this.offset = value\r\n        return this\r\n\r\n    }\r\n\r\n    setLength ( value ) {\r\n\r\n        this.length = value\r\n        return this\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param endianess\r\n     * @return {this}\r\n     */\r\n    setEndianess ( endianess ) {\r\n\r\n        this.endianness = endianess\r\n        return this\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param increment\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _getAndUpdateOffsetBy ( increment ) {\r\n\r\n        const currentOffset = this._offset\r\n        this._offset += increment\r\n        return currentOffset\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _updateDataView () {\r\n\r\n        this._dataView = new DataView( this._buffer, this._offset, this._length )\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {boolean}\r\n     */\r\n    isEndOfFile () {\r\n\r\n        return ( this._offset === this._length )\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param offset\r\n     * @return {this}\r\n     */\r\n    skipOffsetTo ( offset ) {\r\n\r\n        this._offset = offset\r\n\r\n        return this\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param nBytes\r\n     * @return {this}\r\n     */\r\n    skipOffsetOf ( nBytes ) {\r\n\r\n        this._offset += nBytes\r\n\r\n        return this\r\n\r\n    }\r\n\r\n    getBoolean () {\r\n\r\n        return ( ( this.getUint8() & 1 ) === 1 )\r\n\r\n    }\r\n\r\n    getBooleanArray ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getBoolean() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getInt8 () {\r\n\r\n        return this._dataView.getInt8( this._getAndUpdateOffsetBy( Byte.One ) )\r\n\r\n    }\r\n\r\n    getInt8Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getInt8() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getUint8 () {\r\n\r\n        return this._dataView.getUint8( this._getAndUpdateOffsetBy( Byte.One ) )\r\n\r\n    }\r\n\r\n    getUint8Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getUint8() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getInt16 () {\r\n\r\n        return this._dataView.getInt16( this._getAndUpdateOffsetBy( Byte.Two ), this._endianness )\r\n\r\n    }\r\n\r\n    getInt16Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getInt16() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getUint16 () {\r\n\r\n        return this._dataView.getUint16( this._getAndUpdateOffsetBy( Byte.Two ), this._endianness )\r\n\r\n    }\r\n\r\n    getUint16Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getUint16() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getInt32 () {\r\n\r\n        return this._dataView.getInt32( this._getAndUpdateOffsetBy( Byte.Four ), this._endianness )\r\n\r\n    }\r\n\r\n    getInt32Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getInt32() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getUint32 () {\r\n\r\n        return this._dataView.getUint32( this._getAndUpdateOffsetBy( Byte.Four ), this._endianness )\r\n\r\n    }\r\n\r\n    getUint32Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getUint32() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    // From THREE.FBXLoader\r\n    // JavaScript doesn't support 64-bit integer so attempting to calculate by ourselves.\r\n    // 1 << 32 will return 1 so using multiply operation instead here.\r\n    // There'd be a possibility that this method returns wrong value if the value\r\n    // is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\r\n    // TODO: safely handle 64-bit integer\r\n    getInt64 () {\r\n\r\n        let low  = null\r\n        let high = null\r\n\r\n        if ( this._endianness === Endianness.Little ) {\r\n\r\n            low  = this.getUint32()\r\n            high = this.getUint32()\r\n\r\n        } else {\r\n\r\n            high = this.getUint32()\r\n            low  = this.getUint32()\r\n\r\n        }\r\n\r\n        // calculate negative value\r\n        if ( high & 0x80000000 ) {\r\n\r\n            high = ~high & 0xFFFFFFFF\r\n            low  = ~low & 0xFFFFFFFF\r\n\r\n            if ( low === 0xFFFFFFFF ) {\r\n                high = ( high + 1 ) & 0xFFFFFFFF\r\n            }\r\n\r\n            low = ( low + 1 ) & 0xFFFFFFFF\r\n\r\n            return -( high * 0x100000000 + low )\r\n\r\n        }\r\n\r\n        return high * 0x100000000 + low\r\n\r\n    }\r\n\r\n    getInt64Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getInt64() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    // Note: see getInt64() comment\r\n    getUint64 () {\r\n\r\n        let low  = null\r\n        let high = null\r\n\r\n        if ( this._endianness === Endianness.Little ) {\r\n\r\n            low  = this.getUint32()\r\n            high = this.getUint32()\r\n\r\n        } else {\r\n\r\n            high = this.getUint32()\r\n            low  = this.getUint32()\r\n\r\n        }\r\n\r\n        return high * 0x100000000 + low\r\n\r\n    }\r\n\r\n    getUint64Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getUint64() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getFloat32 () {\r\n\r\n        return this._dataView.getFloat32( this._getAndUpdateOffsetBy( Byte.Four ), this._endianness )\r\n\r\n    }\r\n\r\n    getFloat32Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getFloat32() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getFloat64 () {\r\n\r\n        return this._dataView.getFloat64( this._getAndUpdateOffsetBy( Byte.Height ), this._endianness )\r\n\r\n    }\r\n\r\n    getFloat64Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getFloat64() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {string}\r\n     */\r\n    getChar () {\r\n\r\n        return String.fromCharCode( this.getUint8() )\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param length\r\n     * @param trim\r\n     * @return {string}\r\n     */\r\n    getString ( length, trim = true ) {\r\n\r\n        let string   = ''\r\n        let charCode = null\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n            charCode = this.getUint8()\r\n\r\n            if ( charCode === 0 ) {\r\n                continue\r\n            }\r\n\r\n            string += String.fromCharCode( charCode )\r\n        }\r\n\r\n        if ( trim ) {\r\n            string = string.trim()\r\n        }\r\n\r\n        return string\r\n\r\n    }\r\n\r\n    getArrayBuffer ( size ) {\r\n\r\n        const offset = this._getAndUpdateOffsetBy( size )\r\n        return this._dataView.buffer.slice( offset, offset + size )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    TBinaryReader,\r\n    Endianness,\r\n    Byte\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @class TDataBaseManager\r\n * @classdesc The base class of database managers. Give the basic interface about database call.\r\n *\r\n * @requires {@link HttpVerb}\r\n * @requires {@link ResponseType}\r\n * @requires {@link HttpStatusCode}\r\n * @requires {@link TOrchestrator}\r\n * @requires {@link TStore}\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\n/* eslint-env browser */\r\n\r\nimport {\r\n    isArray,\r\n    isArrayOfSingleElement,\r\n    isBlankString,\r\n    isDefined,\r\n    isEmptyObject,\r\n    isEmptyString,\r\n    isNotBlankString,\r\n    isNotDefined,\r\n    isNotEmptyArray,\r\n    isNotEmptyObject,\r\n    isNotEmptyString,\r\n    isNotNumber,\r\n    isNotObject,\r\n    isNotString,\r\n    isNull,\r\n    isNumberNegative,\r\n    isNumberPositive,\r\n    isObject,\r\n    isString,\r\n    isUndefined,\r\n    isZero\r\n}                 from 'itee-validators'\r\nimport { toEnum } from 'itee-utils'\r\nimport {\r\n    HttpStatusCode,\r\n    HttpVerb,\r\n    ResponseType\r\n}                 from '../cores/TConstants'\r\nimport { TStore } from '../cores/TStore'\r\nimport {\r\n    DefaultLogger,\r\n    TLogger\r\n}                 from '../loggers/TLogger'\r\n\r\nclass IdGenerator {\r\n\r\n    constructor () {\r\n        this._id = 0\r\n    }\r\n\r\n    get id () {\r\n        this._id += 1\r\n        return this._id\r\n    }\r\n\r\n}\r\n\r\nconst Generate = new IdGenerator()\r\n\r\nconst RequestType = toEnum( {\r\n    CreateOne:   0,\r\n    CreateMany:  1,\r\n    ReadOne:     2,\r\n    ReadMany:    3,\r\n    ReadWhere:   4,\r\n    ReadAll:     5,\r\n    UpdateOne:   6,\r\n    UpdateMany:  7,\r\n    UpdateWhere: 8,\r\n    UpdateAll:   9,\r\n    DeleteOne:   10,\r\n    DeleteMany:  11,\r\n    DeleteWhere: 12,\r\n    DeleteAll:   13\r\n} )\r\n\r\nclass TDataBaseManager {\r\n\r\n    static get requestId () {\r\n        TDataBaseManager._requestId++\r\n        return TDataBaseManager._requestId\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param parameters\r\n     */\r\n    constructor ( parameters = {} ) {\r\n\r\n        const _parameters = {\r\n            ...{\r\n                basePath:               '/',\r\n                responseType:           ResponseType.Json,\r\n                bunchSize:              500,\r\n                requestAggregationTime: 200,\r\n                requestsConcurrency:    6,\r\n                logger:                 DefaultLogger\r\n            }, ...parameters\r\n        }\r\n\r\n        this.basePath               = _parameters.basePath\r\n        this.responseType           = _parameters.responseType\r\n        this.bunchSize              = _parameters.bunchSize\r\n        this.requestAggregationTime = _parameters.requestAggregationTime\r\n        this.requestsConcurrency    = _parameters.requestsConcurrency\r\n        this.logger                 = _parameters.logger\r\n\r\n        this._cache                = new TStore()\r\n        this._waitingQueue         = []\r\n        this._aggregateQueue       = []\r\n        this._requestQueue         = []\r\n        this._processQueue         = []\r\n        this._aggregationTimeoutId = null\r\n\r\n        this._idToRequest = []\r\n\r\n    }\r\n\r\n    get basePath () {\r\n        return this._basePath\r\n    }\r\n\r\n    set basePath ( value ) {\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( 'Base path cannot be null ! Expect a non empty string.' ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( 'Base path cannot be undefined ! Expect a non empty string.' ) }\r\n        if ( isNotString( value ) ) { throw new TypeError( `Base path cannot be an instance of ${value.constructor.name} ! Expect a non empty string.` ) }\r\n        if ( isEmptyString( value ) ) { throw new TypeError( 'Base path cannot be empty ! Expect a non empty string.' ) }\r\n        if ( isBlankString( value ) ) { throw new TypeError( 'Base path cannot contain only whitespace ! Expect a non empty string.' ) }\r\n\r\n        this._basePath = value\r\n\r\n    }\r\n\r\n    get responseType () {\r\n        return this._responseType\r\n    }\r\n\r\n    set responseType ( value ) {\r\n\r\n        if ( isNull( value ) ) { throw new Error( 'TDataBaseManager: responseType cannot be null !' ) }\r\n        if ( isNull( value ) ) { throw new TypeError( 'Response type cannot be null ! Expect a non empty string.' ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( 'Response type cannot be undefined ! Expect a non empty string.' ) }\r\n        if ( !( value instanceof ResponseType ) ) { throw new TypeError( `Response type cannot be an instance of ${value.constructor.name} ! Expect a value from ResponseType enum.` ) }\r\n\r\n        this._responseType = value\r\n\r\n    }\r\n\r\n    get bunchSize () {\r\n        return this._bunchSize\r\n    }\r\n\r\n    set bunchSize ( value ) {\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( 'Bunch size cannot be null ! Expect a positive number.' ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( 'Bunch size cannot be undefined ! Expect a positive number.' ) }\r\n        if ( isNotNumber( value ) ) { throw new TypeError( `Bunch size cannot be an instance of ${value.constructor.name} ! Expect a positive number.` ) }\r\n        if ( !isNumberPositive( value ) ) { throw new TypeError( `Bunch size cannot be lower or equal to zero ! Expect a positive number.` ) }\r\n\r\n        this._bunchSize = value\r\n\r\n    }\r\n\r\n    get requestAggregationTime () {\r\n        return this._requestAggregationTime\r\n    }\r\n\r\n    set requestAggregationTime ( value ) {\r\n\r\n        if ( isNull( value ) ) {\r\n            throw new TypeError( 'Requests aggregation time cannot be null ! Expect a positive number.' )\r\n        }\r\n\r\n        if ( isUndefined( value ) ) {\r\n            throw new TypeError( 'Requests aggregation time cannot be undefined ! Expect a positive number.' )\r\n        }\r\n\r\n        if ( isNotNumber( value ) ) {\r\n            throw new TypeError( `Requests aggregation time cannot be an instance of ${value.constructor.name} ! Expect a positive number.` )\r\n        }\r\n\r\n        if ( isNumberNegative( value ) ) {\r\n            throw new TypeError( 'Requests aggregation time cannot be lower or equal to zero ! Expect a positive number.' )\r\n        }\r\n\r\n        this._requestAggregationTime = value\r\n\r\n    }\r\n\r\n    get requestsConcurrency () {\r\n        return this._requestsConcurrency\r\n    }\r\n\r\n    set requestsConcurrency ( value ) {\r\n\r\n        if ( isNull( value ) ) {\r\n            throw new TypeError( 'Minimum of simultaneous request cannot be null ! Expect a positive number.' )\r\n        }\r\n\r\n        if ( isUndefined( value ) ) {\r\n            throw new TypeError( 'Minimum of simultaneous request cannot be undefined ! Expect a positive number.' )\r\n        }\r\n\r\n        if ( isNotNumber( value ) ) {\r\n            throw new TypeError( `Minimum of simultaneous request cannot be an instance of ${value.constructor.name} ! Expect a positive number.` )\r\n        }\r\n\r\n        if ( isZero( value ) || isNumberNegative( value ) ) {\r\n            throw new TypeError( 'Minimum of simultaneous request cannot be lower or equal to zero ! Expect a positive number.' )\r\n        }\r\n\r\n        this._requestsConcurrency = value\r\n\r\n    }\r\n\r\n    get logger () {\r\n        return this._logger\r\n    }\r\n\r\n    set logger ( value ) {\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( 'Progress manager cannot be null ! Expect an instance of TProgressManager.' ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( 'Progress manager cannot be undefined ! Expect an instance of TProgressManager.' ) }\r\n        if ( !( value instanceof TLogger ) ) { throw new TypeError( `Progress manager cannot be an instance of ${value.constructor.name} ! Expect an instance of TProgressManager.` ) }\r\n\r\n        this._logger = value\r\n\r\n    }\r\n\r\n    setBasePath ( value ) {\r\n\r\n        this.basePath = value\r\n        return this\r\n\r\n    }\r\n\r\n    setResponseType ( value ) {\r\n\r\n        this.responseType = value\r\n        return this\r\n\r\n    }\r\n\r\n    setBunchSize ( value ) {\r\n\r\n        this.bunchSize = value\r\n        return this\r\n\r\n    }\r\n\r\n    setRequestAggregationTime ( value ) {\r\n\r\n        this.requestAggregationTime = value\r\n        return this\r\n\r\n    }\r\n\r\n    setRequestsConcurrency ( value ) {\r\n\r\n        this.requestsConcurrency = value\r\n        return this\r\n\r\n    }\r\n\r\n    setLogger ( value ) {\r\n\r\n        this.logger = value\r\n        return this\r\n\r\n    }\r\n\r\n    aggregateQueue () {\r\n\r\n        clearTimeout( this._aggregationTimeoutId )\r\n\r\n        this._aggregationTimeoutId = setTimeout( () => {\r\n\r\n            const datasToRequest = this._idToRequest\r\n            let idBunch          = []\r\n            for ( let idIndex = datasToRequest.length - 1 ; idIndex >= 0 ; idIndex-- ) {\r\n\r\n                idBunch.push( datasToRequest.pop() )\r\n\r\n                if ( idBunch.length === this._bunchSize || idIndex === 0 ) {\r\n\r\n                    this._requestQueue.push( {\r\n                        _id:        `readMany_${Generate.id}`,\r\n                        _timeStart: new Date(),\r\n                        _type:      RequestType.ReadMany,\r\n                        method:     HttpVerb.Read.value,\r\n                        url:        this._basePath,\r\n                        data:       {\r\n                            ids: idBunch\r\n                        },\r\n                        responseType: this._responseType\r\n                    } )\r\n\r\n                    idBunch = []\r\n                }\r\n\r\n            }\r\n\r\n            this.processQueue.call( this )\r\n\r\n        }, this._requestAggregationTime )\r\n\r\n    }\r\n\r\n    processQueue () {\r\n\r\n        while ( this._requestQueue.length > 0 && this._processQueue.length < this._requestsConcurrency ) {\r\n\r\n            const requestSkull = this._requestQueue.pop()\r\n            this._processQueue.push( requestSkull )\r\n\r\n            const request              = new XMLHttpRequest()\r\n            request.onloadstart        = _onLoadStart.bind( this )\r\n            request.onload             = this._onLoad.bind( this,\r\n                requestSkull,\r\n                this._onEnd.bind( this, requestSkull, requestSkull.onLoad ),\r\n                this._onProgress.bind( this, requestSkull.onProgress ),\r\n                this._onError.bind( this, requestSkull, requestSkull.onError )\r\n            )\r\n            request.onloadend          = _onLoadEnd.bind( this )\r\n            request.onprogress         = this._onProgress.bind( this, requestSkull.onProgress )\r\n            request.onreadystatechange = _onReadyStateChange.bind( this )\r\n            request.onabort            = _onAbort.bind( this )\r\n            request.onerror            = this._onError.bind( this, requestSkull, requestSkull.onError )\r\n            request.ontimeout          = _onTimeout.bind( this )\r\n            request.open( requestSkull.method, requestSkull.url, true )\r\n            request.setRequestHeader( 'Content-Type', 'application/json' )\r\n            request.setRequestHeader( 'Accept', 'application/json' )\r\n            request.responseType = requestSkull.responseType.value\r\n\r\n            const dataToSend = ( requestSkull.data && requestSkull.responseType === ResponseType.Json ) ? JSON.stringify( requestSkull.data ) : requestSkull.data\r\n            request.send( dataToSend )\r\n\r\n        }\r\n\r\n        function _onLoadStart ( loadStartEvent ) { this.logger.progress( loadStartEvent ) }\r\n\r\n        function _onLoadEnd ( loadEndEvent ) { this.logger.progress( loadEndEvent ) }\r\n\r\n        function _onReadyStateChange ( readyStateEvent ) { this.logger.debug( readyStateEvent ) }\r\n\r\n        function _onAbort ( abortEvent ) { this.logger.error( abortEvent ) }\r\n\r\n        function _onTimeout ( timeoutEvent ) { this.logger.error( timeoutEvent ) }\r\n\r\n    }\r\n\r\n    // Publics\r\n    /**\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The create method allow to create a new ressource on the server. Providing a single object that match a database schema, or an array of them.\r\n     *\r\n     * @param {object|array.<object>} data - The data to send for create new objects.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    create ( data, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        if ( isArray( data ) && isNotEmptyArray( data ) ) {\r\n\r\n            if ( isArrayOfSingleElement( data ) ) {\r\n\r\n                this._createOne( data[ 0 ], onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            } else {\r\n\r\n                this._createMany( data, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            }\r\n\r\n        } else if ( isObject( data ) && isNotEmptyObject( data ) ) {\r\n\r\n            this._createOne( data, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n        } else {\r\n\r\n            onErrorCallback( 'TDataBaseManager.create: Invalid data type, expect object or array of objects.' )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The read method allow to retrieve data from the server, using a single id or an array of them.\r\n     *\r\n     * @param {string|array.<string>} condition - The ids of objects to retrieve.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    read ( condition, projection, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        if ( isString( condition ) && isNotEmptyString( condition ) && isNotBlankString( condition ) ) {\r\n\r\n            this._readOne( condition, projection, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n        } else if ( isArray( condition ) && isNotEmptyArray( condition ) ) {\r\n\r\n            if ( isArrayOfSingleElement( condition ) ) {\r\n\r\n                this._readOne( condition[ 0 ], projection, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            } else {\r\n\r\n                this._readMany( condition, projection, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            }\r\n\r\n        } else if ( isObject( condition ) ) {\r\n\r\n            if ( isEmptyObject( condition ) ) {\r\n\r\n                this._readAll( projection, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            } else {\r\n\r\n                this._readWhere( condition, projection, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            onErrorCallback( 'TDataBaseManager.read: Invalid data type, expect string, object or array of objects.' )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The update method allow to update data on the server, using a single id or an array of them, and a corresponding object about the data to update.\r\n     *\r\n     * @param {string|array.<string>} condition - The ids of objects to update.\r\n     * @param {object} update - The update data ( need to match the related database schema ! ). In case of multiple ids they will be updated with the same given data.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    update ( condition, update, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        if ( isNotDefined( update ) ) {\r\n            onErrorCallback( 'TDataBaseManager.update: Update data cannot be null or undefined !' )\r\n            return\r\n        }\r\n\r\n        if ( isNotObject( update ) ) {\r\n            onErrorCallback( 'TDataBaseManager.update: Invalid update data type. Expect an object.' )\r\n            return\r\n        }\r\n\r\n        if ( isString( condition ) && isNotEmptyString( condition ) && isNotBlankString( condition ) ) {\r\n\r\n            this._updateOne( condition, update, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n        } else if ( isArray( condition ) && isNotEmptyArray( condition ) ) {\r\n\r\n            if ( isArrayOfSingleElement( condition ) ) {\r\n\r\n                this._updateOne( condition[ 0 ], update, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            } else {\r\n\r\n                this._updateMany( condition, update, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            }\r\n\r\n        } else if ( isObject( condition ) ) {\r\n\r\n            if ( isEmptyObject( condition ) ) {\r\n\r\n                this._updateAll( update, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            } else {\r\n\r\n                this._updateWhere( condition, update, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            onErrorCallback( 'TDataBaseManager.update: Invalid data type, expect string, object or array of objects.' )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The delete method allow to remove data from the server, using a single id or an array of them.\r\n     *\r\n     * @param {string|array.<string>|object|null} condition - The ids of objects to delete.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    delete ( condition, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        if ( isString( condition ) && isNotEmptyString( condition ) && isNotBlankString( condition ) ) {\r\n\r\n            this._deleteOne( condition, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n        } else if ( isArray( condition ) && isNotEmptyArray( condition ) ) {\r\n\r\n            if ( isArrayOfSingleElement( condition ) ) {\r\n\r\n                this._deleteOne( condition[ 0 ], onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            } else {\r\n\r\n                this._deleteMany( condition, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            }\r\n\r\n        } else if ( isObject( condition ) ) {\r\n\r\n            if ( isEmptyObject( condition ) ) {\r\n\r\n                this._deleteAll( onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            } else {\r\n\r\n                this._deleteWhere( condition, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            onErrorCallback( 'TDataBaseManager.delete: Invalid data type, expect null, string, object or array of objects.' )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // Privates\r\n\r\n    //// Events\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _onLoad method allow to process the server response in an abstract way to check against error and wrong status code.\r\n     * It will bind user callback on each type of returns, and dispatch in sub methods in function of the response type.\r\n     *\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     * @param {object} loadEvent - The server response object to parse.\r\n     */\r\n    _onLoad ( request, onLoadCallback, onProgressCallback, onErrorCallback, loadEvent ) {\r\n\r\n        const target       = loadEvent.target\r\n        const status       = target.status\r\n        const response     = target.response\r\n        const responseType = target.responseType\r\n\r\n        switch ( status ) {\r\n\r\n            // 100\r\n            //            case HttpStatusCode.Continue.value:\r\n            //            case HttpStatusCode.SwitchingProtocols.value:\r\n            //            case HttpStatusCode.Processing.value:\r\n\r\n            // 200\r\n            case HttpStatusCode.Ok.value:\r\n                this._dispatchResponse( response, responseType, onLoadCallback, onProgressCallback, onErrorCallback )\r\n                break\r\n            //            case HttpStatusCode.Created.value:\r\n            //            case HttpStatusCode.Accepted.value:\r\n\r\n            case HttpStatusCode.NonAuthoritativeInformation.value:\r\n            case HttpStatusCode.NoContent.value:\r\n            case HttpStatusCode.ResetContent.value:\r\n            case HttpStatusCode.PartialContent.value:\r\n            case HttpStatusCode.MultiStatus.value:\r\n            case HttpStatusCode.AlreadyReported.value:\r\n            case HttpStatusCode.ContentDifferent.value:\r\n            case HttpStatusCode.IMUsed.value:\r\n            case HttpStatusCode.MultipleChoices.value:\r\n            case HttpStatusCode.MovedPermanently.value:\r\n            case HttpStatusCode.Found.value:\r\n            case HttpStatusCode.SeeOther.value:\r\n            case HttpStatusCode.NotModified.value:\r\n            case HttpStatusCode.UseProxy.value:\r\n            case HttpStatusCode.Unused.value:\r\n            case HttpStatusCode.TemporaryRedirect.value:\r\n            case HttpStatusCode.PermanentRedirect.value:\r\n            case HttpStatusCode.TooManyRedirects.value:\r\n            case HttpStatusCode.BadRequest.value:\r\n            case HttpStatusCode.Unauthorized.value:\r\n            case HttpStatusCode.PaymentRequired.value:\r\n            case HttpStatusCode.Forbidden.value:\r\n            case HttpStatusCode.NotFound.value:\r\n            case HttpStatusCode.MethodNotAllowed.value:\r\n            case HttpStatusCode.NotAcceptable.value:\r\n            case HttpStatusCode.ProxyAuthenticationRequired.value:\r\n            case HttpStatusCode.RequestTimeOut.value:\r\n            case HttpStatusCode.Conflict.value:\r\n            case HttpStatusCode.Gone.value:\r\n            case HttpStatusCode.LengthRequired.value:\r\n            case HttpStatusCode.PreconditionFailed.value:\r\n            case HttpStatusCode.RequestEntityTooLarge.value:\r\n            case HttpStatusCode.RequestRangeUnsatisfiable.value:\r\n            case HttpStatusCode.ExpectationFailed.value:\r\n            case HttpStatusCode.ImATeapot.value:\r\n            case HttpStatusCode.BadMapping.value:\r\n            case HttpStatusCode.UnprocessableEntity.value:\r\n            case HttpStatusCode.Locked.value:\r\n            case HttpStatusCode.MethodFailure.value:\r\n            case HttpStatusCode.UnorderedCollection.value:\r\n            case HttpStatusCode.UpgradeRequired.value:\r\n            case HttpStatusCode.PreconditionRequired.value:\r\n            case HttpStatusCode.TooManyRequests.value:\r\n            case HttpStatusCode.RequestHeaderFieldsTooLarge.value:\r\n            case HttpStatusCode.NoResponse.value:\r\n            case HttpStatusCode.RetryWith.value:\r\n            case HttpStatusCode.BlockedByWindowsParentalControls.value:\r\n            case HttpStatusCode.UnavailableForLegalReasons.value:\r\n            case HttpStatusCode.UnrecoverableError.value:\r\n            case HttpStatusCode.SSLCertificateError.value:\r\n            case HttpStatusCode.SSLCertificateRequired.value:\r\n            case HttpStatusCode.HTTPRequestSentToHTTPSPort.value:\r\n            case HttpStatusCode.ClientClosedRequest.value:\r\n            case HttpStatusCode.InternalServerError.value:\r\n            case HttpStatusCode.NotImplemented.value:\r\n            case HttpStatusCode.BadGateway.value:\r\n            case HttpStatusCode.ServiceUnavailable.value:\r\n            case HttpStatusCode.GatewayTimeOut.value:\r\n            case HttpStatusCode.HTTPVersionNotSupported.value:\r\n            case HttpStatusCode.VariantAlsoNegotiates.value:\r\n            case HttpStatusCode.InsufficientStorage.value:\r\n            case HttpStatusCode.LoopDetected.value:\r\n            case HttpStatusCode.BandwidthLimitExceeded.value:\r\n            case HttpStatusCode.NotExtended.value:\r\n            case HttpStatusCode.NetworkAuthenticationRequired.value:\r\n            case HttpStatusCode.UnknownError.value:\r\n            case HttpStatusCode.WebServerIsDown.value:\r\n            case HttpStatusCode.ConnectionTimedOut.value:\r\n            case HttpStatusCode.OriginIsUnreachable.value:\r\n            case HttpStatusCode.ATimeoutOccured.value:\r\n            case HttpStatusCode.SSLHandshakeFailed.value:\r\n            case HttpStatusCode.InvalidSSLCertificate.value:\r\n            case HttpStatusCode.RailgunError.value:\r\n                onErrorCallback( response )\r\n                break\r\n\r\n            default:\r\n                throw new RangeError( `Unmanaged HttpStatusCode: ${status}` )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _onProgress method will handle all progress event from server and submit them to the logger if exist else to the user onProgressCallback\r\n     *\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {object} progressEvent - The server progress event.\r\n     */\r\n    _onProgress ( onProgressCallback, progressEvent ) {\r\n\r\n        if ( isDefined( this.logger ) ) {\r\n\r\n            this.logger.progress( progressEvent, onProgressCallback )\r\n\r\n        } else if ( isDefined( onProgressCallback ) ) {\r\n\r\n            onProgressCallback( progressEvent )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _onError method will handle all error event from server and submit them to the logger if exist else to the user onErrorCallback\r\n     *\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     * @param {object} errorEvent - A server error event\r\n     */\r\n    _onError ( request, onErrorCallback, errorEvent ) {\r\n\r\n        this._closeRequest( request )\r\n\r\n        if ( isDefined( this.logger ) ) {\r\n\r\n            this.logger.error( errorEvent, onErrorCallback )\r\n\r\n        } else if ( isDefined( onErrorCallback ) ) {\r\n\r\n            onErrorCallback( errorEvent )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _onEnd ( request, onLoadCallback, response ) {\r\n\r\n        const type = request._type\r\n\r\n        switch ( type ) {\r\n\r\n            case RequestType.ReadOne:\r\n            case RequestType.ReadMany:\r\n                this._updateCache( response )\r\n                this._updateWaitingQueue()\r\n                break\r\n\r\n            case RequestType.ReadWhere:\r\n            case RequestType.ReadAll:\r\n                this._updateCache( response )\r\n                this._updateWaitingQueue()\r\n                onLoadCallback( response )\r\n                break\r\n\r\n            case RequestType.CreateOne:\r\n            case RequestType.CreateMany:\r\n            case RequestType.UpdateOne:\r\n            case RequestType.UpdateMany:\r\n            case RequestType.UpdateWhere:\r\n            case RequestType.UpdateAll:\r\n            case RequestType.DeleteOne:\r\n            case RequestType.DeleteMany:\r\n            case RequestType.DeleteWhere:\r\n            case RequestType.DeleteAll:\r\n                onLoadCallback( response )\r\n                break\r\n\r\n            default:\r\n                throw new RangeError( `Invalid request type: ${type}` )\r\n\r\n        }\r\n\r\n        this._closeRequest( request )\r\n\r\n    }\r\n\r\n    //// Data parsing\r\n    // Expect that methods were reimplemented when TDataBaseManager is inherited\r\n\r\n    // Dispatch response to the correct handler in function of response type\r\n    _dispatchResponse ( response, responseType, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        switch ( responseType ) {\r\n\r\n            case ResponseType.ArrayBuffer.value:\r\n                this._onArrayBuffer(\r\n                    response,\r\n                    onLoadCallback,\r\n                    onProgressCallback,\r\n                    onErrorCallback\r\n                )\r\n                break\r\n\r\n            case ResponseType.Blob.value:\r\n                this._onBlob(\r\n                    response,\r\n                    onLoadCallback,\r\n                    onProgressCallback,\r\n                    onErrorCallback\r\n                )\r\n                break\r\n\r\n            case ResponseType.Json.value:\r\n                this._onJson(\r\n                    response,\r\n                    onLoadCallback,\r\n                    onProgressCallback,\r\n                    onErrorCallback\r\n                )\r\n                break\r\n\r\n            case ResponseType.DOMString.value:\r\n            case ResponseType.Default.value:\r\n                this._onText(\r\n                    response,\r\n                    onLoadCallback,\r\n                    onProgressCallback,\r\n                    onErrorCallback\r\n                )\r\n                break\r\n\r\n            default:\r\n                throw new Error( `Unknown response type: ${responseType}` )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Will remove the request from the process queue\r\n     * @param request\r\n     * @private\r\n     */\r\n    _closeRequest ( request ) {\r\n\r\n        this._processQueue.splice( this._processQueue.indexOf( request ), 1 )\r\n\r\n        if ( Window.Itee && Window.Itee.Debug ) {\r\n\r\n            const diff    = new Date().valueOf() - request._timeStart.valueOf()\r\n            const message = `${this.constructor.name} close request [${request._id}] on ${diff}ms.` +\r\n                `Waiting queue: ${this._waitingQueue.length}` +\r\n                `Request queue: ${this._requestQueue.length}` +\r\n                `Process queue: ${this._processQueue.length}` +\r\n                `==========================`\r\n            this.logger.debug( message )\r\n\r\n        }\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    _retrieveCachedValues ( ids ) {\r\n\r\n        let results      = {}\r\n        let underRequest = []\r\n        let toRequest    = []\r\n\r\n        for ( let idIndex = 0, numberOfIds = ids.length ; idIndex < numberOfIds ; idIndex++ ) {\r\n\r\n            const id          = ids[ idIndex ]\r\n            const cachedValue = this._cache.get( id )\r\n\r\n            if ( isDefined( cachedValue ) ) {\r\n                results[ id ] = cachedValue\r\n            } else if ( isNull( cachedValue ) ) { // In request\r\n                underRequest.push( id )\r\n            } else {\r\n                toRequest.push( id )\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            results,\r\n            underRequest,\r\n            toRequest\r\n        }\r\n\r\n    }\r\n\r\n    _updateCache ( datas ) {\r\n\r\n        if ( isNull( datas ) ) { throw new TypeError( 'Data cannot be null ! Expect an array of object.' ) }\r\n        if ( isUndefined( datas ) ) { throw new TypeError( 'Data cannot be undefined ! Expect an array of object.' ) }\r\n\r\n        let _datas = {}\r\n        if ( isArray( datas ) ) {\r\n\r\n            for ( let key in datas ) {\r\n                _datas[ datas[ key ]._id ] = datas[ key ]\r\n            }\r\n\r\n        } else {\r\n\r\n            _datas = datas\r\n\r\n        }\r\n\r\n        for ( let [ id, data ] of Object.entries( _datas ) ) {\r\n\r\n            const cachedResult = this._cache.get( id )\r\n\r\n            if ( isNull( cachedResult ) ) {\r\n                this._cache.add( id, data, true )\r\n            } else if ( isUndefined( cachedResult ) ) {\r\n                this.logger.warn( 'Cache was not pre-allocated with null value.' )\r\n                this._cache.add( id, data )\r\n            } else {\r\n                this.logger.error( 'Cached value already exist !' )\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _updateWaitingQueue () {\r\n\r\n        const haveNoRequestToProcess = ( this._requestQueue.length === 0 && this._processQueue.length === 0 )\r\n\r\n        for ( let requestIndex = this._waitingQueue.length - 1 ; requestIndex >= 0 ; requestIndex-- ) {\r\n\r\n            const demand = this._waitingQueue[ requestIndex ]\r\n\r\n            // Update requested datas\r\n            for ( let dataIndex = demand.underRequest.length - 1 ; dataIndex >= 0 ; dataIndex-- ) {\r\n\r\n                const id           = demand.underRequest[ dataIndex ]\r\n                const cachedResult = this._cache.get( id )\r\n\r\n                if ( isNotDefined( cachedResult ) ) { continue }\r\n\r\n                // Assign the cached value\r\n                demand.results[ id ] = cachedResult\r\n\r\n                // Remove the requested object that is now added\r\n                demand.underRequest.splice( demand.underRequest.indexOf( id ), 1 )\r\n\r\n            }\r\n\r\n            // Check if request is now fullfilled\r\n            const demandIsComplet = ( demand.underRequest.length === 0 )\r\n            if ( demandIsComplet ) {\r\n\r\n                this._waitingQueue.splice( requestIndex, 1 )\r\n                demand.onLoadCallback( demand.results )\r\n\r\n            } else if ( !demandIsComplet && haveNoRequestToProcess /* && haveTryAgainManyTimesButFail */ ) {\r\n\r\n                this.logger.warn( 'Incomplet demand but empty request/process queue' )\r\n                this._waitingQueue.splice( requestIndex, 1 )\r\n                demand.onLoadCallback( demand.results )\r\n\r\n            } else {\r\n\r\n                // Wait next response\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @abstract\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The abstract private _onArrayBuffer method must be overridden in case the parser expect an array buffer as input data.\r\n     *\r\n     * @param {ArrayBuffer} data - The retrieved data to parse.\r\n     * @param {function} onSuccess - The onLoad callback, which is call when parser parse with success the data.\r\n     * @param {function} onProgress - The onProgress callback, which is call during the parsing.\r\n     * @param {function} onError - The onError callback, which is call when parser throw an error during parsing.\r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    _onArrayBuffer ( data, onSuccess, onProgress, onError ) {}\r\n\r\n    /**\r\n     * @private\r\n     * @abstract\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The abstract private _onBlob method must be overridden in case the parser expect a blob as input data.\r\n     *\r\n     * @param {Blob} data - The retrieved data to parse.\r\n     * @param {function} onSuccess - The onLoad callback, which is call when parser parse with success the data.\r\n     * @param {function} onProgress - The onProgress callback, which is call during the parsing.\r\n     * @param {function} onError - The onError callback, which is call when parser throw an error during parsing.\r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    _onBlob ( data, onSuccess, onProgress, onError ) {}\r\n\r\n    /**\r\n     * @private\r\n     * @abstract\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The abstract private _onJson method must be overridden in case the parser expect json as input data.\r\n     *\r\n     * @param {json} data - The retrieved data to parse.\r\n     * @param {function} onSuccess - The onLoad callback, which is call when parser parse with success the data.\r\n     * @param {function} onProgress - The onProgress callback, which is call during the parsing.\r\n     * @param {function} onError - The onError callback, which is call when parser throw an error during parsing.\r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    _onJson ( data, onSuccess, onProgress, onError ) {}\r\n\r\n    /**\r\n     * @private\r\n     * @abstract\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The abstract private _onText method must be overridden in case the parser expect a string/text as input data.\r\n     *\r\n     * @param {string} data - The retrieved data to parse.\r\n     * @param {function} onSuccess - The onLoad callback, which is call when parser parse with success the data.\r\n     * @param {function} onProgress - The onProgress callback, which is call during the parsing.\r\n     * @param {function} onError - The onError callback, which is call when parser throw an error during parsing.\r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    _onText ( data, onSuccess, onProgress, onError ) {}\r\n\r\n    // REST Api calls\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _create method allow to format a server request to create objects with the given data and get creation result with given callbacks.\r\n     *\r\n     * @param {object} data - The data to send.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    _createOne ( data, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:          `createOne_${Generate.id}`,\r\n            _timeStart:   new Date(),\r\n            _type:        RequestType.CreateOne,\r\n            method:       HttpVerb.Create.value,\r\n            url:          this._basePath,\r\n            data:         data,\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    _createMany ( datas, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:          `createMany_${Generate.id}`,\r\n            _timeStart:   new Date(),\r\n            _type:        RequestType.CreateMany,\r\n            method:       HttpVerb.Create.value,\r\n            url:          this._basePath,\r\n            data:         datas,\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _updateOne method will format a server request to get a single object with the given id.\r\n     *\r\n     * @param {string} id - The object's id of the object to retrieve.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    _readOne ( id, projection, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        // Filter requested values by cached values\r\n        const datas = this._retrieveCachedValues( [ id ] )\r\n\r\n        // retrieveLocalStorageValues...\r\n\r\n        // getDatabaseValues()\r\n\r\n        if ( datas.toRequest.length === 0 ) {\r\n\r\n            if ( datas.underRequest.length === 0 ) {\r\n\r\n                onLoadCallback( datas.results )\r\n\r\n            } else {\r\n\r\n                datas[ 'onLoadCallback' ] = onLoadCallback\r\n                datas[ 'onProgressCallback' ] = onProgressCallback\r\n                datas[ 'onErrorCallback' ] = onErrorCallback\r\n                this._waitingQueue.push( datas )\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            datas[ 'onLoadCallback' ] = onLoadCallback\r\n            datas[ 'onProgressCallback' ] = onProgressCallback\r\n            datas[ 'onErrorCallback' ] = onErrorCallback\r\n            this._waitingQueue.push( datas )\r\n\r\n            try {\r\n                this._cache.add( id, null )\r\n                datas.underRequest.push( id )\r\n                datas.toRequest.splice( datas.toRequest.indexOf( id ), 1 )\r\n            } catch ( error ) {\r\n                this.logger.error( error )\r\n            }\r\n\r\n            this._idToRequest.push( id )\r\n            this.aggregateQueue()\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _readMany method will format a server request to get objects with id in the ids array.\r\n     *\r\n     * @param {array.<string>} ids - The ids of objects to retrieve.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    _readMany ( ids, projection, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        // Filter requested values by cached values\r\n        const datas = this._retrieveCachedValues( ids )\r\n\r\n        // retrieveLocalStorageValues...\r\n\r\n        // getDatabaseValues()\r\n\r\n        if ( datas.toRequest.length === 0 ) {\r\n\r\n            if ( datas.underRequest.length === 0 ) {\r\n\r\n                onLoadCallback( datas.results )\r\n\r\n            } else {\r\n\r\n                datas[ 'onLoadCallback' ] = onLoadCallback\r\n                datas[ 'onProgressCallback' ] = onProgressCallback\r\n                datas[ 'onErrorCallback' ] = onErrorCallback\r\n                this._waitingQueue.push( datas )\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            datas[ 'onLoadCallback' ] = onLoadCallback\r\n            datas[ 'onProgressCallback' ] = onProgressCallback\r\n            datas[ 'onErrorCallback' ] = onErrorCallback\r\n            this._waitingQueue.push( datas )\r\n\r\n            const datasToRequest = datas.toRequest\r\n            let id               = undefined\r\n            for ( let idIndex = datasToRequest.length - 1 ; idIndex >= 0 ; idIndex-- ) {\r\n\r\n                id = datasToRequest[ idIndex ]\r\n\r\n                // Prepare entry for id to request\r\n                try {\r\n                    this._cache.add( id, null )\r\n                    datas.underRequest.push( id )\r\n                    datas.toRequest.splice( datas.toRequest.indexOf( id ), 1 )\r\n                } catch ( error ) {\r\n                    this.logger.error( error )\r\n                }\r\n\r\n                this._idToRequest.push( id )\r\n\r\n            }\r\n\r\n            this.aggregateQueue()\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _readWhere ( query, projection, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        //        // Filter requested values by cached values\r\n        //                const datas = {\r\n        //                    results: {},\r\n        //                    underRequest: [],\r\n        //                    toRequest: []\r\n        //                }\r\n        //\r\n        //        datas[ 'onLoadCallback' ] = onLoadCallback\r\n        //        this._waitingQueue.push( datas )\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `readWhere_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.ReadWhere,\r\n            method:     HttpVerb.Read.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                query,\r\n                projection\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    _readAll ( projection, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        //        const datas = {\r\n        //            results: {},\r\n        //            underRequest: [],\r\n        //            toRequest: []\r\n        //        }\r\n        //\r\n        //        datas[ 'onLoadCallback' ] = onLoadCallback\r\n        //        this._waitingQueue.push( datas )\r\n\r\n        const query = {}\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `readAll_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.ReadAll,\r\n            method:     HttpVerb.Read.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                query,\r\n                projection\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _updateOne method will format a server request to update a single object with the given id.\r\n     *\r\n     * @param {string} id - The object's id of the object to update.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    _updateOne ( id, update, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `updateOne_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.UpdateOne,\r\n            method:     HttpVerb.Update.value,\r\n            url:        `${this._basePath}/${id}`,\r\n            data:       {\r\n                update\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _updateMany method will format a server request to update objects with id in the ids array.\r\n     *\r\n     * @param {array.<string>} ids - The ids of objects to update.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    _updateMany ( ids, update, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `updateMany_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.UpdateMany,\r\n            method:     HttpVerb.Update.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                ids,\r\n                update\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    _updateWhere ( query, update, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `updateWhere_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.UpdateWhere,\r\n            method:     HttpVerb.Update.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                query,\r\n                update\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    _updateAll ( update, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        const query = {}\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `updateAll_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.UpdateAll,\r\n            method:     HttpVerb.Update.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                query,\r\n                update\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _deleteOne method will format a server request to delete a single object with the given id.\r\n     *\r\n     * @param {string} id - The object's id of the object to delete.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    _deleteOne ( id, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:          `deleteOne_${Generate.id}`,\r\n            _timeStart:   new Date(),\r\n            _type:        RequestType.DeleteOne,\r\n            method:       HttpVerb.Delete.value,\r\n            url:          `${this._basePath}/${id}`,\r\n            data:         null,\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _deleteMany method will format a server request to delete objects with id in the ids array.\r\n     *\r\n     * @param {array.<string>} ids - The ids of objects to delete.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    _deleteMany ( ids, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `deleteMany_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.DeleteMany,\r\n            method:     HttpVerb.Delete.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                ids\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    _deleteWhere ( query, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `deleteWhere_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.DeleteWhere,\r\n            method:     HttpVerb.Delete.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                query\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    _deleteAll ( onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        const query = {}\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `deleteAll_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.DeleteAll,\r\n            method:     HttpVerb.Delete.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                query\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n}\r\n\r\n// Static stuff\r\n\r\nTDataBaseManager._requestId = 0\r\n\r\nTDataBaseManager._requests = {\r\n    waitingQueue: {},\r\n    toProcess:    {\r\n        create: {},\r\n        read:   {},\r\n        update: {},\r\n        delete: {}\r\n    },\r\n    underProcess: {\r\n        create: {},\r\n        read:   {},\r\n        update: {},\r\n        delete: {}\r\n    },\r\n    processed: {\r\n        create: {},\r\n        read:   {},\r\n        update: {},\r\n        delete: {}\r\n    }\r\n}\r\n//TDataBaseManager._orchestrator = TOrchestrator\r\n\r\nexport { TDataBaseManager }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport {\r\n    isNotNumber,\r\n    isNotString,\r\n    isNull,\r\n    isUndefined\r\n} from 'itee-validators'\r\n\r\n//\r\n//const TIdFactoryType = Object.freeze( {\r\n//    Number: 0,\r\n//    String: 1,\r\n//    Uuid:   2,\r\n//    includes ( key ) {\r\n//        return isNotUndefined( TIdFactoryType[ key ] )\r\n//    },\r\n//    availablesTypes () {\r\n//        return [ 'Number', 'String', 'UUID' ]\r\n//    }\r\n//} )\r\n\r\nconst TIdFactoryType = Object.freeze( Object.defineProperties( {}, {\r\n    Number: {\r\n        value:      0,\r\n        enumerable: true\r\n    },\r\n    String: {\r\n        value:      1,\r\n        enumerable: true\r\n    },\r\n    Uuid: {\r\n        value:      2,\r\n        enumerable: true\r\n    },\r\n    includes: {\r\n        value: function includes ( key ) {\r\n            return Object.values( this ).includes( key )\r\n        }\r\n    },\r\n    types: {\r\n        value: function types () {\r\n            return Object.keys( this )\r\n        }\r\n    }\r\n\r\n} ) )\r\n\r\nclass TIdFactory {\r\n\r\n    constructor ( type = TIdFactoryType.Number, base = null ) {\r\n\r\n        this.type = type\r\n        this.base = base\r\n\r\n        this._counter = 0\r\n\r\n    }\r\n\r\n    get type () {\r\n        return this._type\r\n    }\r\n\r\n    set type ( value ) {\r\n\r\n        if ( isNull( value ) ) { throw new Error( `Type cannot be null ! Expect an value from TIdFactoryType enum: ${TIdFactoryType.types()}` ) }\r\n        if ( isUndefined( value ) ) { throw new Error( `Type cannot be undefined ! Expect an value from TIdFactoryType enum: ${TIdFactoryType.types()}` ) }\r\n        if ( !TIdFactoryType.includes( value ) ) { throw new Error( `Invalide type ! Expect an value from TIdFactoryType enum: ${TIdFactoryType.types()}` ) }\r\n\r\n        this._type = value\r\n    }\r\n\r\n    get base () {\r\n        return this._base\r\n    }\r\n\r\n    set base ( value ) {\r\n\r\n        if ( isUndefined( value ) ) { throw new Error( 'Base cannot be undefined ! Expect an instance of Object3D.' ) }\r\n\r\n        if ( ( this._type === TIdFactoryType.Number ) && isNotNumber( value ) ) { throw new Error( 'Invalide Base ! It does not match the type.' ) }\r\n        if ( ( this._type === TIdFactoryType.String ) && isNotString( value ) ) { throw new Error( 'Invalide Base ! It does not match the type.' ) }\r\n        //        if( (this._type === TIdFactoryType.Uuid) && isNotUuid( value ) ) { throw new Error( 'Invalide Base ! It does not match the type.' ) }\r\n\r\n        this._base = value\r\n    }\r\n\r\n    setType ( value ) {\r\n\r\n        this.type = value\r\n        return this\r\n\r\n    }\r\n\r\n    setBase ( value ) {\r\n\r\n        this.base = value\r\n        return this\r\n\r\n    }\r\n\r\n    createId () {\r\n        return this._base + this._counter++\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    TIdFactory,\r\n    TIdFactoryType\r\n}\r\n"],"names":["TLogger"],"mappings":";;;;AAAA;;;;;;;;;AASA,AAYA;;;;;AAKA,AAAK,MAAC,UAAU,GAAG,MAAM,EAAE;IACvB,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;IACtB,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;IACtB,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;IACtB,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;IACtB,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;IACtB,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE;IACvB,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;IACtB,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;IACtB,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;CACzB,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FH,AAAK,MAAC,cAAc,GAAG,MAAM,EAAE;;;IAG3B,QAAQ,YAAY,EAAE,KAAK,EAAE,GAAG,EAAE;IAClC,kBAAkB,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;IAClC,UAAU,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE;;;IAGlC,EAAE,2BAA2B,EAAE,KAAK,EAAE,GAAG,EAAE;IAC3C,OAAO,sBAAsB,EAAE,KAAK,EAAE,GAAG,EAAE;IAC3C,QAAQ,qBAAqB,EAAE,KAAK,EAAE,GAAG,EAAE;IAC3C,2BAA2B,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;IAC3C,SAAS,oBAAoB,EAAE,KAAK,EAAE,GAAG,EAAE;IAC3C,YAAY,iBAAiB,EAAE,KAAK,EAAE,GAAG,EAAE;IAC3C,cAAc,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE;IAC3C,WAAW,kBAAkB,EAAE,KAAK,EAAE,GAAG,EAAE;IAC3C,eAAe,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE;IAC3C,gBAAgB,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE;IAC3C,MAAM,uBAAuB,EAAE,KAAK,EAAE,GAAG,EAAE;;;IAG3C,eAAe,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE;IACjC,gBAAgB,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;IACjC,KAAK,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE;IACjC,QAAQ,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE;IACjC,WAAW,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE;IACjC,QAAQ,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE;IACjC,MAAM,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE;IACjC,iBAAiB,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;IACjC,iBAAiB,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;IACjC,gBAAgB,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;;;IAGjC,UAAU,wBAAwB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,YAAY,sBAAsB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,eAAe,mBAAmB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,SAAS,yBAAyB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,QAAQ,0BAA0B,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,gBAAgB,kBAAkB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,aAAa,qBAAqB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,2BAA2B,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,cAAc,oBAAoB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,QAAQ,0BAA0B,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,IAAI,8BAA8B,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,cAAc,oBAAoB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,kBAAkB,gBAAgB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,qBAAqB,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,yBAAyB,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,iBAAiB,iBAAiB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,SAAS,yBAAyB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,UAAU,wBAAwB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,mBAAmB,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,MAAM,4BAA4B,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,aAAa,qBAAqB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,mBAAmB,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,eAAe,mBAAmB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,oBAAoB,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,eAAe,mBAAmB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,2BAA2B,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,UAAU,wBAAwB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,SAAS,yBAAyB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,gCAAgC,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,0BAA0B,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,kBAAkB,gBAAgB,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,mBAAmB,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,sBAAsB,YAAY,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,0BAA0B,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,mBAAmB,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE;;;IAGhD,mBAAmB,YAAY,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,cAAc,iBAAiB,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,UAAU,qBAAqB,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,kBAAkB,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,cAAc,iBAAiB,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,uBAAuB,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,qBAAqB,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,mBAAmB,YAAY,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,YAAY,mBAAmB,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,sBAAsB,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,WAAW,oBAAoB,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,6BAA6B,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,YAAY,mBAAmB,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,eAAe,gBAAgB,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,kBAAkB,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,mBAAmB,YAAY,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,eAAe,gBAAgB,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,kBAAkB,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,qBAAqB,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,YAAY,mBAAmB,EAAE,KAAK,EAAE,GAAG,EAAE;;CAEhD,GAAE;;;;;;;;;;;;;;AAcH,AAAK,MAAC,QAAQ,GAAG,MAAM,EAAE;IACrB,MAAM,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;IACxB,IAAI,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;IACzB,MAAM,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE;IAC1B,MAAM,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE;CAC9B,GAAE;;;;;;AAMH,AAAK,MAAC,IAAI,GAAG,MAAM,EAAE;IACjB,SAAS,aAAa,EAAE,KAAK,EAAE,CAAC,EAAE;IAClC,GAAG,mBAAmB,EAAE,KAAK,EAAE,CAAC,EAAE;IAClC,KAAK,iBAAiB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,KAAK,iBAAiB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,IAAI,kBAAkB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,GAAG,mBAAmB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,KAAK,iBAAiB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,SAAS,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,MAAM,gBAAgB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,KAAK,iBAAiB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,OAAO,eAAe,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,SAAS,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,GAAG,mBAAmB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,IAAI,kBAAkB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,UAAU,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,QAAQ,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,WAAW,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,UAAU,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,MAAM,gBAAgB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,MAAM,gBAAgB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,IAAI,kBAAkB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,GAAG,mBAAmB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,GAAG,mBAAmB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,KAAK,iBAAiB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,IAAI,kBAAkB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,IAAI,kBAAkB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,GAAG,mBAAmB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,KAAK,iBAAiB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,MAAM,gBAAgB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,IAAI,kBAAkB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,eAAe,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,gBAAgB,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,UAAU,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,QAAQ,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,QAAQ,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,QAAQ,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,QAAQ,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE;IACnC,QAAQ,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,QAAQ,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,QAAQ,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,QAAQ,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,QAAQ,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,QAAQ,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,QAAQ,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,GAAG,mBAAmB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,SAAS,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,aAAa,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,MAAM,gBAAgB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,EAAE,oBAAoB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,EAAE,oBAAoB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,EAAE,oBAAoB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,EAAE,oBAAoB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,EAAE,oBAAoB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,EAAE,oBAAoB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,EAAE,oBAAoB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,EAAE,oBAAoB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,EAAE,oBAAoB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,GAAG,mBAAmB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,GAAG,mBAAmB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,GAAG,mBAAmB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,QAAQ,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,WAAW,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,SAAS,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,KAAK,iBAAiB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,KAAK,iBAAiB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,IAAI,kBAAkB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,OAAO,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,KAAK,iBAAiB,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,YAAY,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,mBAAmB,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,SAAS,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,oBAAoB,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,YAAY,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE;CACvC,GAAE;;;AAGH,AAAK,MAAC,QAAQ,GAAG,MAAM,EAAE,EAAE,GAAE;;;;;;;AAO7B,AAAK,MAAC,KAAK,GAAG,MAAM,EAAE;IAClB,KAAK,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;IACrB,IAAI,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE;IACpB,MAAM,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;IACpB,KAAK,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE;CACvB,GAAE;;;;;;;;;;;;;;;;AAgBH,AAAK,MAAC,YAAY,GAAG,MAAM,EAAE;IACzB,WAAW,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE;IACrC,IAAI,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;IAC9B,QAAQ,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE;IAClC,IAAI,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;IAC9B,SAAS,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;IAC9B,OAAO,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE;CAC7B,EAAE;;AChYH;;;;;;;;;;;;AAYA,AAWA;;;;AAIA,MAAM,MAAM,CAAC;;IAET,OAAO,SAAS,CAAC,EAAE,KAAK,EAAE,UAAU,GAAG;;QAEnC,MAAM,IAAI,cAAc,GAAG,CAAC,EAAE,kBAAkB,GAAG,UAAU,CAAC,MAAM,GAAG,cAAc,GAAG,kBAAkB,GAAG,cAAc,EAAE,GAAG;;YAE5H,IAAI,SAAS,GAAG,UAAU,EAAE,cAAc,GAAE;;YAE5C,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG;;gBAEjC,MAAM,KAAK,GAAG,SAAS,CAAC,MAAK;gBAC7B,KAAK,QAAQ,EAAE,KAAK,EAAE,GAAG;oBACrB,MAAM,IAAI,SAAS,EAAE,KAAK,EAAE;iBAC/B,MAAM,KAAK,UAAU,EAAE,KAAK,EAAE,GAAG;oBAC9B,MAAM,IAAI,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE;iBACxC,MAAM;oBACH,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,YAAY,CAAC,EAAE;iBAChD;;aAEJ;;SAEJ;;KAEJ;;;;;IAKD,WAAW,CAAC,EAAE,UAAU,GAAG,EAAE,GAAG;;QAE5B,MAAM,WAAW,GAAG;YAChB,GAAG;gBACC,UAAU,OAAO,EAAE;gBACnB,aAAa,IAAI,KAAK;gBACtB,aAAa,IAAI,EAAE;gBACnB,eAAe,EAAE,EAAE;aACtB,EAAE,GAAG,UAAU;UACnB;;QAED,IAAI,CAAC,UAAU,QAAQ,WAAW,CAAC,WAAU;QAC7C,IAAI,CAAC,aAAa,KAAK,WAAW,CAAC,cAAa;QAChD,IAAI,CAAC,aAAa,KAAK,WAAW,CAAC,cAAa;QAChD,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC,gBAAe;;KAErD;;IAED,IAAI,UAAU,CAAC,GAAG;;QAEd,OAAO,IAAI,CAAC,WAAW;;KAE1B;;IAED,IAAI,UAAU,CAAC,EAAE,KAAK,GAAG;;QAErB,MAAM,UAAU,GAAG,aAAY;QAC/B,MAAM,MAAM,OAAO,oBAAmB;;QAEtC,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QAC5F,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QACtG,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,0BAA0B,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;;QAErI,IAAI,CAAC,WAAW,GAAG,MAAK;;KAE3B;;IAED,IAAI,aAAa,CAAC,GAAG;;QAEjB,OAAO,IAAI,CAAC,cAAc;;KAE7B;;IAED,IAAI,aAAa,CAAC,EAAE,KAAK,GAAG;;QAExB,MAAM,UAAU,GAAG,iBAAgB;QACnC,MAAM,MAAM,OAAO,oBAAmB;;QAEtC,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QAC5F,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QACtG,KAAK,YAAY,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,0BAA0B,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;;QAEtI,IAAI,CAAC,cAAc,GAAG,MAAK;;KAE9B;;IAED,IAAI,aAAa,CAAC,GAAG;;QAEjB,OAAO,IAAI,CAAC,cAAc;;KAE7B;;IAED,IAAI,aAAa,CAAC,EAAE,KAAK,GAAG;;QAExB,MAAM,UAAU,GAAG,kBAAiB;QACpC,MAAM,MAAM,OAAO,mDAAkD;;QAErE,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QAC5F,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QACtG,KAAK,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,0BAA0B,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;;QAEpI,IAAI,CAAC,cAAc,GAAG,MAAK;;KAE9B;;IAED,IAAI,eAAe,CAAC,GAAG;QACnB,OAAO,IAAI,CAAC,gBAAgB;KAC/B;;IAED,IAAI,eAAe,CAAC,EAAE,KAAK,GAAG;;QAE1B,MAAM,UAAU,GAAG,oBAAmB;QACtC,MAAM,MAAM,OAAO,mDAAkD;;QAErE,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QAC5F,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QACtG,KAAK,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,0BAA0B,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;;QAEpI,IAAI,CAAC,gBAAgB,GAAG,MAAK;;KAEhC;;IAED,IAAI,IAAI,CAAC,GAAG;;QAER,OAAO,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE;;KAEzC;;IAED,IAAI,MAAM,CAAC,GAAG;;QAEV,OAAO,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE;;KAE3C;;IAED,aAAa,CAAC,EAAE,KAAK,GAAG;;QAEpB,IAAI,CAAC,UAAU,GAAG,MAAK;QACvB,OAAO,IAAI;;KAEd;;IAED,gBAAgB,CAAC,EAAE,KAAK,GAAG;;QAEvB,IAAI,CAAC,aAAa,GAAG,MAAK;QAC1B,OAAO,IAAI;;KAEd;;IAED,gBAAgB,CAAC,EAAE,KAAK,GAAG;;QAEvB,IAAI,CAAC,aAAa,EAAE,KAAK,GAAE;QAC3B,OAAO,IAAI;;KAEd;;IAED,kBAAkB,CAAC,EAAE,KAAK,GAAG;;QAEzB,IAAI,CAAC,eAAe,EAAE,KAAK,GAAE;QAC7B,OAAO,IAAI;;KAEd;;;;;;;;;;;IAWD,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG;;QAE9B,KAAK,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,KAAK,EAAE,GAAG;YAC7D,MAAM,IAAI,SAAS,EAAE,CAAC,eAAe,EAAE,GAAG,CAAC,+BAA+B,CAAC,EAAE;SAChF;;QAED,MAAM,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,cAAc,GAAE;QAC5C,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,gBAAgB,GAAE;;QAEhD,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,GAAG,MAAK;;QAE/B,OAAO,IAAI;;KAEd;;IAED,OAAO,CAAC,EAAE,GAAG,GAAG;;QAEZ,OAAO,cAAc,EAAE,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,EAAE;;KAEnD;;;;;;;;IAQD,GAAG,CAAC,EAAE,GAAG,GAAG;;QAER,OAAO,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE;;KAEjC;;;;;;;IAOD,MAAM,CAAC,EAAE,GAAG,GAAG;;QAEX,OAAO,IAAI,CAAC,WAAW,EAAE,GAAG,GAAE;;QAE9B,OAAO,IAAI;;KAEd;;;;;IAKD,KAAK,CAAC,GAAG;;QAEL,IAAI,CAAC,WAAW,GAAG,GAAE;;QAErB,OAAO,IAAI;;KAEd;;CAEJ;;AC7PD;;;;;;;;;AASA,AAEA;AACA,MAAM,gBAAgB,SAAS,MAAM,CAAC;;IAElC,WAAW,CAAC,EAAE,UAAU,GAAG,EAAE,GAAG;;QAE5B,MAAM,WAAW,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,UAAU,GAAE;;QAE5C,KAAK,EAAE,WAAW,GAAE;;KAEvB;;;IAGD,MAAM,CAAC,EAAE,GAAG,EAAE,GAAG,UAAU,GAAG;;;;KAI7B;;CAEJ;;AC7BD;;;;;;;;;AASA,AAEA;AACA,MAAM,eAAe,SAAS,gBAAgB,CAAC;;IAE3C,WAAW,CAAC,EAAE,UAAU,GAAG,EAAE,GAAG;;QAE5B,MAAM,WAAW,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,UAAU,GAAE;;QAE5C,KAAK,EAAE,WAAW,GAAE;;KAEvB;;IAED,MAAM,CAAC,EAAE,GAAG,EAAE,GAAG,UAAU,GAAG;QAC1B,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,UAAU,GAAE;;QAElC,OAAO,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,GAAG,UAAU,EAAE;;KAEhD;CACJ;;AC5BD;;;;;;;;;AASA,AAEA;AACA,MAAM,kBAAkB,SAAS,gBAAgB,CAAC;;IAE9C,WAAW,CAAC,EAAE,UAAU,GAAG,EAAE,GAAG;;QAE5B,MAAM,WAAW,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,UAAU,GAAE;;QAE5C,KAAK,EAAE,WAAW,GAAE;;KAEvB;;IAED,MAAM,CAAC,EAAE,GAAG,EAAE,GAAG,UAAU,GAAG;QAC1B,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,UAAU,GAAE;;QAElC,OAAO,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,UAAU,EAAE;;KAE9C;;CAEJ;;AC7BD;;;;;;;;;AASA,AAYA;;;;;AAKA,MAAM,SAAS,GAAG,MAAM,EAAE;IACtB,OAAO,GAAG,CAAC;IACX,IAAI,MAAM,CAAC;IACX,KAAK,KAAK,CAAC;IACX,IAAI,MAAM,CAAC;IACX,QAAQ,EAAE,EAAE;IACZ,GAAG,OAAO,GAAG;CAChB,GAAE;;AAEH,MAAM,OAAO,GAAG,MAAM,EAAE;IACpB,OAAO,GAAG,CAAC;IACX,QAAQ,EAAE,CAAC;IACX,IAAI,MAAM,CAAC;CACd,GAAE;;;;;;AAMH,MAAM,QAAQ,GAAG,MAAM,EAAE;IACrB,IAAI,KAAK,CAAC;IACV,KAAK,IAAI,CAAC;IACV,IAAI,KAAK,CAAC;IACV,OAAO,EAAE,CAAC;IACV,KAAK,IAAI,CAAC;IACV,GAAG,MAAM,GAAG;CACf,GAAE;;;;;;;;;;;;AAYH,MAAM,OAAO,CAAC;;;;;;;;IAQV,OAAO,cAAc,CAAC,EAAE,KAAK,GAAG;;QAE5B,IAAI,WAAW,GAAG,GAAE;;QAEpB,SAAS,KAAK;;YAEV,KAAK,QAAQ,CAAC,IAAI;gBACd,WAAW,GAAG,OAAM;gBACpB,KAAK;;YAET,KAAK,QAAQ,CAAC,OAAO;gBACjB,WAAW,GAAG,UAAS;gBACvB,KAAK;;YAET,KAAK,QAAQ,CAAC,KAAK;gBACf,WAAW,GAAG,QAAO;gBACrB,KAAK;;YAET;gBACI,WAAW,GAAG,kBAAiB;gBAC/B,KAAK;;SAEZ;;QAED,OAAO,WAAW;;KAErB;;IAED,WAAW,CAAC,EAAE,UAAU,GAAG,EAAE,GAAG;;QAE5B,MAAM,WAAW,GAAG;YAChB,GAAG;gBACC,WAAW,EAAE,QAAQ,CAAC,KAAK;gBAC3B,OAAO,MAAM,SAAS,CAAC,OAAO;aACjC,EAAE,GAAG,UAAU;UACnB;;QAED,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,YAAW;QAC1C,IAAI,CAAC,OAAO,OAAO,WAAW,CAAC,QAAO;;QAEtC,IAAI,CAAC,UAAU,MAAM,GAAE;QACvB,IAAI,CAAC,OAAO,SAAS,GAAE;QACvB,IAAI,CAAC,aAAa,GAAG,EAAC;;KAEzB;;IAED,IAAI,WAAW,CAAC,GAAG;QACf,OAAO,IAAI,CAAC,YAAY;KAC3B;;IAED,IAAI,WAAW,CAAC,EAAE,KAAK,GAAG;;QAEtB,MAAM,UAAU,GAAG,cAAa;QAChC,MAAM,MAAM,OAAO,qCAAoC;;QAEvD,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,KAAK,EAAE,CAAC,EAAE,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QACxF,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,KAAK,EAAE,CAAC,EAAE,UAAU,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;;;QAGlG,IAAI,CAAC,YAAY,GAAG,MAAK;;KAE5B;;IAED,IAAI,OAAO,CAAC,GAAG;QACX,OAAO,IAAI,CAAC,QAAQ;KACvB;;IAED,IAAI,OAAO,CAAC,EAAE,KAAK,GAAG;;QAElB,MAAM,UAAU,GAAG,SAAQ;QAC3B,MAAM,MAAM,OAAO,sCAAqC;;QAExD,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,KAAK,EAAE,CAAC,EAAE,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QACxF,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,KAAK,EAAE,CAAC,EAAE,UAAU,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;;;QAGlG,IAAI,CAAC,QAAQ,GAAG,MAAK;;KAExB;;;;;;;;;IASD,YAAY,CAAC,EAAE,KAAK,EAAE,KAAK,GAAG;;QAE1B,MAAM,WAAW,GAAG,OAAO,CAAC,cAAc,EAAE,KAAK,GAAE;QACnD,MAAM,QAAQ,MAAM,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,EAAC;;QAE1D,KAAK,QAAQ,EAAE,KAAK,EAAE,GAAG;;YAErB,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,GAAG,MAAK;;SAEtC,MAAM,KAAK,QAAQ,EAAE,KAAK,EAAE,GAAG;;YAE5B,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC,kBAAkB,EAAE,KAAK,GAAE;;SAEpE,MAAM,KAAK,eAAe,EAAE,KAAK,EAAE,GAAG;;YAEnC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC,QAAQ,GAAE;;SAEjD,MAAM,KAAK,eAAe,EAAE,KAAK,EAAE,GAAG;;YAEnC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,GAAG,GAAE;;YAEhC,MAAM,IAAI,SAAS,GAAG,CAAC,EAAE,aAAa,GAAG,KAAK,CAAC,MAAM,GAAG,SAAS,GAAG,aAAa,GAAG,SAAS,EAAE,GAAG;gBAC9F,IAAI,CAAC,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,GAAE;aACjD;;SAEJ,MAAM;;YAEH,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,KAAK,KAAK,CAAC,QAAQ,EAAE,GAAG,mBAAkB;;SAElF;;QAED,IAAI,CAAC,aAAa,GAAE;QACpB,OAAO,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE;;KAErC;;;;;;;IAOD,QAAQ,CAAC,EAAE,OAAO,GAAG;;QAEjB,MAAM,IAAI,GAAG,OAAO,CAAC,KAAI;QACzB,SAAS,IAAI;;YAET,KAAK,OAAO,CAAC,OAAO;gBAChB,IAAI,CAAC,gBAAgB,EAAE,OAAO,GAAE;gBAChC,KAAK;;YAET,KAAK,OAAO,CAAC,QAAQ;gBACjB,IAAI,CAAC,iBAAiB,EAAE,OAAO,GAAE;gBACjC,KAAK;;YAET,KAAK,OAAO,CAAC,IAAI;gBACb,IAAI,CAAC,aAAa,EAAE,OAAO,GAAE;gBAC7B,KAAK;;YAET;gBACI,MAAM,IAAI,UAAU,EAAE,CAAC,0BAA0B,EAAE,IAAI,CAAC,CAAC,EAAE;;SAElE;;KAEJ;;IAED,gBAAgB,CAAC,EAAE,OAAO,GAAG;;QAEzB,MAAM,KAAK,GAAG,OAAO,CAAC,MAAK;QAC3B,MAAM,IAAI,IAAI,OAAO,CAAC,QAAO;;;QAG7B,SAAS,KAAK;;YAEV,KAAK,QAAQ,CAAC,KAAK;gBACf,KAAK,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,KAAK,GAAG;oBACrC,IAAI,CAAC,qBAAqB,EAAE,IAAI,GAAE;iBACrC;gBACD,KAAK;;YAET,KAAK,QAAQ,CAAC,OAAO;gBACjB,KAAK,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,GAAG;oBACvC,IAAI,CAAC,uBAAuB,EAAE,IAAI,GAAE;iBACvC;gBACD,KAAK;;YAET,KAAK,QAAQ,CAAC,IAAI;gBACd,KAAK,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,GAAG;oBACpC,IAAI,CAAC,oBAAoB,EAAE,IAAI,GAAE;iBACpC;gBACD,KAAK;;YAET,KAAK,QAAQ,CAAC,KAAK;gBACf,KAAK,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,KAAK,GAAG;oBACrC,IAAI,CAAC,qBAAqB,EAAE,IAAI,GAAE;iBACrC;gBACD,KAAK;;;YAGT;gBACI,MAAM,IAAI,UAAU,EAAE,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC,EAAE;;SAEnE;;KAEJ;;IAED,qBAAqB,CAAC,EAAE,YAAY,GAAG;;QAEnC,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,GAAG;;YAEpC,OAAO,CAAC,KAAK,EAAE,YAAY,GAAE;;SAEhC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAI,GAAG;;YAEjC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,EAAE,MAAM,GAAE;YAC7C,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,WAAW,GAAE;YACjC,IAAI,CAAC,SAAS,GAAG,aAAY;YAC7B,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,GAAE;;SAEpC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,KAAK,GAAG,CAIrC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAI,GAAG,CAIpC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,QAAQ,GAAG,CAIxC;;KAEJ;;IAED,uBAAuB,CAAC,EAAE,WAAW,GAAG;;QAEpC,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,GAAG;;YAEpC,OAAO,CAAC,IAAI,EAAE,WAAW,GAAE;;SAE9B;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAI,GAAG;;YAEjC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,EAAE,MAAM,GAAE;YAC7C,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,aAAa,GAAE;YACnC,IAAI,CAAC,SAAS,GAAG,YAAW;YAC5B,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,GAAE;;SAEpC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,KAAK,GAAG,CAIrC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAI,GAAG,CAIpC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,QAAQ,GAAG,CAIxC;;KAEJ;;IAED,oBAAoB,CAAC,EAAE,WAAW,GAAG;;QAEjC,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,GAAG;;YAEpC,OAAO,CAAC,GAAG,EAAE,WAAW,GAAE;;SAE7B;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAI,GAAG;;YAEjC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,EAAE,MAAM,GAAE;YAC7C,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,UAAU,GAAE;YAChC,IAAI,CAAC,SAAS,GAAG,YAAW;YAC5B,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,GAAE;;SAEpC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,KAAK,GAAG,CAIrC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAI,GAAG,CAIpC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,QAAQ,GAAG,CAIxC;;KAEJ;;IAED,qBAAqB,CAAC,EAAE,YAAY,GAAG;;QAEnC,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,GAAG;;YAEpC,OAAO,CAAC,GAAG,EAAE,YAAY,GAAE;;SAE9B;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAI,GAAG;;YAEjC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,EAAE,MAAM,GAAE;YAC7C,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,UAAU,GAAE;YAChC,IAAI,CAAC,SAAS,GAAG,aAAY;YAC7B,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,GAAE;;SAEpC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,KAAK,GAAG,CAIrC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAI,GAAG,CAIpC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,QAAQ,GAAG,CAIxC;;KAEJ;;IAED,iBAAiB,CAAC,EAAE,QAAQ,GAAG;;QAE3B,MAAM,KAAK,YAAY,QAAQ,CAAC,MAAK;QACrC,IAAI,gBAAgB,GAAG,QAAQ,CAAC,QAAO;;;QAGvC,SAAS,KAAK;;YAEV,KAAK,QAAQ,CAAC,IAAI;gBACd,KAAK,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,GAAG;oBACpC,IAAI,CAAC,qBAAqB,EAAE,gBAAgB,GAAE;iBACjD;gBACD,KAAK;;YAET,KAAK,QAAQ,CAAC,KAAK;gBACf,KAAK,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,KAAK,GAAG;oBACrC,IAAI,CAAC,sBAAsB,EAAE,gBAAgB,GAAE;iBAClD;gBACD,KAAK;;;YAGT;gBACI,MAAM,IAAI,UAAU,EAAE,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC,EAAE;;SAEnE;;KAEJ;;IAED,qBAAqB,CAAC,EAAE,YAAY,GAAG;;QAEnC,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,GAAG;;YAEpC,OAAO,CAAC,GAAG,EAAE,YAAY,GAAE;;SAE9B;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAI,GAAG;;YAEjC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,EAAE,MAAM,GAAE;YAC7C,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,UAAU,GAAE;YAChC,IAAI,CAAC,SAAS,GAAG,aAAY;YAC7B,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,GAAE;;SAEpC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,KAAK,GAAG,CAIrC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAI,GAAG,CAIpC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,QAAQ,GAAG,CAIxC;;KAEJ;;IAED,sBAAsB,CAAC,EAAE,aAAa,GAAG;;QAErC,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,GAAG;;YAEpC,OAAO,CAAC,GAAG,EAAE,aAAa,GAAE;;SAE/B;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAI,GAAG;;YAEjC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,EAAE,MAAM,GAAE;YAC7C,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,UAAU,GAAE;YAChC,IAAI,CAAC,SAAS,GAAG,cAAa;YAC9B,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,GAAE;;SAEpC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,KAAK,GAAG,CAIrC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAI,GAAG,CAIpC;;QAED,KAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,QAAQ,GAAG,CAIxC;;KAEJ;;IAED,aAAa,CAAC,EAAE,IAAI,GAAG;;QAEnB,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,GAAE;;KAE9B;;IAED,KAAK,CAAC,EAAE,KAAK,GAAG;;QAEZ,IAAI,CAAC,QAAQ,EAAE;YACX,IAAI,KAAK,OAAO,CAAC,OAAO;YACxB,KAAK,IAAI,QAAQ,CAAC,KAAK;YACvB,OAAO,EAAE,KAAK;SACjB,GAAE;;KAEN;;;;;;IAMD,GAAG,CAAC,EAAE,IAAI,GAAG;;QAET,IAAI,CAAC,QAAQ,EAAE;YACX,IAAI,KAAK,OAAO,CAAC,OAAO;YACxB,KAAK,IAAI,QAAQ,CAAC,IAAI;YACtB,OAAO,EAAE,IAAI;SAChB,GAAE;;KAEN;;;;;;IAMD,IAAI,CAAC,EAAE,OAAO,GAAG;;QAEb,IAAI,CAAC,QAAQ,EAAE;YACX,IAAI,KAAK,OAAO,CAAC,OAAO;YACxB,KAAK,IAAI,QAAQ,CAAC,OAAO;YACzB,OAAO,EAAE,OAAO;SACnB,GAAE;;KAEN;;;;;;IAMD,KAAK,CAAC,EAAE,KAAK,GAAG;;QAEZ,IAAI,CAAC,QAAQ,EAAE;YACX,IAAI,KAAK,OAAO,CAAC,OAAO;YACxB,KAAK,IAAI,QAAQ,CAAC,KAAK;YACvB,OAAO,EAAE,KAAK;SACjB,GAAE;;KAEN;;IAED,QAAQ,CAAC,EAAE,QAAQ,GAAG;;QAElB,QAAQ,CAAC,cAAc,GAAE;QACzB,KAAK,QAAQ,CAAC,UAAU,GAAG;YACvB,QAAQ,CAAC,wBAAwB,GAAE;SACtC;;QAED,KAAK,QAAQ,CAAC,gBAAgB,GAAG;;YAE7B,MAAM,IAAI,UAAU,QAAQ,CAAC,KAAI;YACjC,MAAM,MAAM,QAAQ,QAAQ,CAAC,OAAM;YACnC,MAAM,KAAK,SAAS,QAAQ,CAAC,MAAK;YAClC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,MAAM,GAAG,KAAK,KAAK,KAAK,EAAE,GAAG,IAAG;YAClE,MAAM,OAAO,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAC;;YAEnE,IAAI,CAAC,QAAQ,EAAE;gBACX,IAAI,KAAK,OAAO,CAAC,QAAQ;gBACzB,KAAK,IAAI,QAAQ,CAAC,IAAI;gBACtB,OAAO,EAAE,OAAO;aACnB,GAAE;;SAEN;;KAEJ;;IAED,cAAc,CAAC,EAAE,GAAG,GAAG;;QAEnB,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,GAAE;;KAE7C;;IAED,aAAa,CAAC,EAAE,GAAG,GAAG;;QAElB,MAAM,SAAS,KAAK,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,GAAE;QAChE,MAAM,OAAO,KAAK,CAAC,EAAE,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,EAAC;;QAE/C,IAAI,CAAC,QAAQ,EAAE;YACX,IAAI,KAAK,OAAO,CAAC,IAAI;YACrB,KAAK,IAAI,QAAQ,CAAC,KAAK;YACvB,OAAO,EAAE,OAAO;SACnB,GAAE;;KAEN;;IAED,cAAc,CAAC,EAAE,KAAK,GAAG;;QAErB,IAAI,CAAC,WAAW,GAAG,MAAK;QACxB,OAAO,IAAI;;KAEd;;IAED,SAAS,CAAC,EAAE,KAAK,GAAG;;QAEhB,IAAI,CAAC,OAAO,GAAG,MAAK;QACpB,OAAO,IAAI;;KAEd;;CAEJ;;AAED,AAAK,MAAC,aAAa,GAAG,IAAI,OAAO,EAAE;;ACxnBnC;;;;;;;;;;;;;;;;;;;;;AAqBA,AAKA;AACA,MAAM,mBAAmB,CAAC;;;;;;;IAOtB,OAAO,OAAO,CAAC,EAAE,OAAO,GAAG;QACvB,OAAO,EAAE,mBAAmB,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,IAAI;YAC9C,mBAAmB,CAAC,CAAC,EAAE,OAAO,EAAE;YAChC,MAAM,CAAC,YAAY,EAAE,OAAO,EAAE;KACrC;;;;;;IAMD,OAAO,OAAO,CAAC,EAAE,KAAK,GAAG;QACrB,IAAI,GAAG,GAAG,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,GAAE;QACtD,KAAK,mBAAmB,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG;YACrC,mBAAmB,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,OAAO,GAAG,MAAK;SACpD;KACJ;;;;;;IAMD,OAAO,SAAS,CAAC,EAAE,KAAK,GAAG;QACvB,IAAI,GAAG,GAAG,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,GAAE;QACtD,KAAK,CAAC,mBAAmB,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG;YACtC,mBAAmB,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG;gBAChC,IAAI,eAAe,KAAK;gBACxB,OAAO,YAAY,KAAK;gBACxB,EAAE,iBAAiB,KAAK;gBACxB,iBAAiB,EAAE,KAAK;cAC3B;SACJ;KACJ;;IAED,WAAW,CAAC,wBAAwB;;;;;;;;;QAShC,QAAQ,CAAC,gBAAgB,EAAE,SAAS,EAAE,mBAAmB,CAAC,SAAS,EAAE,KAAK,GAAE;QAC5E,QAAQ,CAAC,gBAAgB,EAAE,OAAO,EAAE,mBAAmB,CAAC,OAAO,EAAE,KAAK,GAAE;;KAE3E;;;;;IAKD,MAAM,CAAC,GAAG;QACN,MAAM,IAAI,GAAG,IAAI,mBAAmB,CAAC,MAAM,GAAG;;YAE1C,KAAK,CAAC,mBAAmB,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,iBAAiB,GAAG;gBACxD,mBAAmB,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,gBAAgB,KAAI;gBAC1D,mBAAmB,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,OAAO,aAAa,KAAI;gBAC1D,mBAAmB,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,iBAAiB,GAAG,KAAI;aAC7D,MAAM;gBACH,mBAAmB,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,GAAG,MAAK;aACjD;;;YAGD,KAAK,mBAAmB,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG;gBACxC,OAAO,mBAAmB,CAAC,MAAM,EAAE,GAAG,GAAE;gBACxC,QAAQ;aACX;;YAED,KAAK,CAAC,mBAAmB,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,OAAO;YAC/C;gBACI,mBAAmB,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,KAAI;aAC9C;SACJ;KACJ;;;;;;;IAOD,IAAI,CAAC,EAAE,OAAO,GAAG;QACb,SAAS,mBAAmB,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,mBAAmB,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,IAAI,EAAE;KACjG;;;;;;;IAOD,OAAO,CAAC,EAAE,OAAO,GAAG;QAChB,SAAS,mBAAmB,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,mBAAmB,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,OAAO,EAAE;KACpG;;;;;;;IAOD,EAAE,CAAC,EAAE,OAAO,GAAG;QACX,SAAS,mBAAmB,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,mBAAmB,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE;KAC/F;;;;;IAKD,KAAK,CAAC,GAAG;QACL,IAAI,IAAI,GAAG,gBAAe;QAC1B,MAAM,IAAI,GAAG,IAAI,mBAAmB,CAAC,MAAM,GAAG;YAC1C,IAAI,IAAI,GAAG,GAAG,IAAG;SACpB;QACDA,aAAO,CAAC,GAAG,EAAE,IAAI,GAAE;KACtB;;CAEJ;;AAED,mBAAmB,CAAC,CAAC,QAAQ,KAAI;AACjC,mBAAmB,CAAC,MAAM,GAAG,EAAE;;ACrJ/B;;;;;;;;;;;;AAYA,MAAM,gBAAgB,CAAC;;IAEnB,WAAW,CAAC,wBAAwB;;KAEnC;;CAEJ;;AClBD;;;;;;;;;AASA,AASA;;;;;;;AAOA,AAAK,MAAC,UAAU,GAAG,MAAM,EAAE;IACvB,MAAM,EAAE,IAAI;IACZ,GAAG,KAAK,KAAK;CAChB,GAAE;;;;;;AAMH,AAAK,MAAC,IAAI,GAAG,MAAM,EAAE;IACjB,GAAG,KAAK,CAAC;IACT,GAAG,KAAK,CAAC;IACT,IAAI,IAAI,CAAC;IACT,MAAM,EAAE,CAAC;CACZ,GAAE;;;;;;;;;;;AAWH,MAAM,aAAa,CAAC;;IAEhB,WAAW,CAAC,EAAE,UAAU,GAAG,EAAE,GAAG;;QAE5B,MAAM,WAAW,GAAG;YAChB,GAAG;gBACC,MAAM,MAAM,IAAI,WAAW,EAAE,CAAC,EAAE;gBAChC,MAAM,MAAM,CAAC;gBACb,MAAM,MAAM,CAAC;gBACb,UAAU,EAAE,UAAU,CAAC,MAAM;aAChC,EAAE,GAAG,UAAU;UACnB;;QAED,IAAI,CAAC,MAAM,OAAO,WAAW,CAAC,OAAM;QACpC,IAAI,CAAC,MAAM,OAAO,WAAW,CAAC,OAAM;QACpC,IAAI,CAAC,MAAM,OAAO,WAAW,CAAC,OAAM;QACpC,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,WAAU;;QAExC,IAAI,CAAC,eAAe,GAAE;;KAEzB;;IAED,IAAI,MAAM,CAAC,GAAG;QACV,OAAO,IAAI,CAAC,OAAO;KACtB;;IAED,IAAI,MAAM,CAAC,EAAE,KAAK,GAAG;;QAEjB,MAAM,UAAU,GAAG,SAAQ;QAC3B,MAAM,MAAM,OAAO,qCAAoC;;QAEvD,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QAC5F,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QACtG,KAAK,gBAAgB,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,0BAA0B,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;;QAEjI,IAAI,CAAC,OAAO,GAAG,MAAK;QACpB,IAAI,CAAC,OAAO,GAAG,EAAC;QAChB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,WAAU;;QAE/B,IAAI,CAAC,eAAe,GAAE;;KAEzB;;IAED,IAAI,MAAM,CAAC,GAAG;QACV,OAAO,IAAI,CAAC,OAAO;KACtB;;IAED,IAAI,MAAM,CAAC,EAAE,KAAK,GAAG;;QAEjB,MAAM,UAAU,GAAG,SAAQ;QAC3B,MAAM,MAAM,OAAO,mBAAkB;;QAErC,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QAC5F,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QACtG,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,0BAA0B,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;;QAErI,IAAI,CAAC,OAAO,GAAG,MAAK;;QAEpB,IAAI,CAAC,eAAe,GAAE;;KAEzB;;IAED,IAAI,MAAM,CAAC,GAAG;QACV,OAAO,IAAI,CAAC,OAAO;KACtB;;IAED,IAAI,MAAM,CAAC,EAAE,KAAK,GAAG;;QAEjB,MAAM,UAAU,GAAG,SAAQ;QAC3B,MAAM,MAAM,OAAO,mBAAkB;;QAErC,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QAC5F,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QACtG,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,0BAA0B,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;;QAErI,IAAI,CAAC,OAAO,GAAG,MAAK;;QAEpB,IAAI,CAAC,eAAe,GAAE;;KAEzB;;IAED,IAAI,UAAU,CAAC,GAAG;QACd,OAAO,IAAI,CAAC,WAAW;KAC1B;;IAED,IAAI,UAAU,CAAC,EAAE,KAAK,GAAG;;QAErB,MAAM,UAAU,GAAG,aAAY;QAC/B,MAAM,MAAM,OAAO,oBAAmB;;QAEtC,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QAC5F,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;QACtG,KAAK,YAAY,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,0BAA0B,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE;;QAEtI,IAAI,CAAC,WAAW,GAAG,MAAK;KAC3B;;;;;;;;;IASD,SAAS,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG;;QAEjC,IAAI,CAAC,MAAM,GAAG,OAAM;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,EAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,MAAM,CAAC,WAAU;;QAEzC,OAAO,IAAI;;KAEd;;IAED,SAAS,CAAC,EAAE,KAAK,GAAG;;QAEhB,IAAI,CAAC,MAAM,GAAG,MAAK;QACnB,OAAO,IAAI;;KAEd;;IAED,SAAS,CAAC,EAAE,KAAK,GAAG;;QAEhB,IAAI,CAAC,MAAM,GAAG,MAAK;QACnB,OAAO,IAAI;;KAEd;;;;;;;IAOD,YAAY,CAAC,EAAE,SAAS,GAAG;;QAEvB,IAAI,CAAC,UAAU,GAAG,UAAS;QAC3B,OAAO,IAAI;;KAEd;;;;;;;;IAQD,qBAAqB,CAAC,EAAE,SAAS,GAAG;;QAEhC,MAAM,aAAa,GAAG,IAAI,CAAC,QAAO;QAClC,IAAI,CAAC,OAAO,IAAI,UAAS;QACzB,OAAO,aAAa;;KAEvB;;;;;;IAMD,eAAe,CAAC,GAAG;;QAEf,IAAI,CAAC,SAAS,GAAG,IAAI,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,GAAE;;KAE5E;;;;;;IAMD,WAAW,CAAC,GAAG;;QAEX,SAAS,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,EAAE;;KAE3C;;;;;;;IAOD,YAAY,CAAC,EAAE,MAAM,GAAG;;QAEpB,IAAI,CAAC,OAAO,GAAG,OAAM;;QAErB,OAAO,IAAI;;KAEd;;;;;;;IAOD,YAAY,CAAC,EAAE,MAAM,GAAG;;QAEpB,IAAI,CAAC,OAAO,IAAI,OAAM;;QAEtB,OAAO,IAAI;;KAEd;;IAED,UAAU,CAAC,GAAG;;QAEV,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,OAAO,CAAC,EAAE;;KAE3C;;IAED,eAAe,CAAC,EAAE,MAAM,GAAG;;QAEvB,MAAM,KAAK,GAAG,GAAE;;QAEhB,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,GAAG;;YAEjC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,GAAE;;SAElC;;QAED,OAAO,KAAK;;KAEf;;;;;;IAMD,OAAO,CAAC,GAAG;;QAEP,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE;;KAE1E;;IAED,YAAY,CAAC,EAAE,MAAM,GAAG;;QAEpB,MAAM,KAAK,GAAG,GAAE;;QAEhB,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,GAAG;;YAEjC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,GAAE;;SAE/B;;QAED,OAAO,KAAK;;KAEf;;;;;;IAMD,QAAQ,CAAC,GAAG;;QAER,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE;;KAE3E;;IAED,aAAa,CAAC,EAAE,MAAM,GAAG;;QAErB,MAAM,KAAK,GAAG,GAAE;;QAEhB,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,GAAG;;YAEjC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAE;;SAEhC;;QAED,OAAO,KAAK;;KAEf;;;;;;IAMD,QAAQ,CAAC,GAAG;;QAER,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE;;KAE7F;;IAED,aAAa,CAAC,EAAE,MAAM,GAAG;;QAErB,MAAM,KAAK,GAAG,GAAE;;QAEhB,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,GAAG;;YAEjC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAE;;SAEhC;;QAED,OAAO,KAAK;;KAEf;;;;;;IAMD,SAAS,CAAC,GAAG;;QAET,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE;;KAE9F;;IAED,cAAc,CAAC,EAAE,MAAM,GAAG;;QAEtB,MAAM,KAAK,GAAG,GAAE;;QAEhB,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,GAAG;;YAEjC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,GAAE;;SAEjC;;QAED,OAAO,KAAK;;KAEf;;;;;;IAMD,QAAQ,CAAC,GAAG;;QAER,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE;;KAE9F;;IAED,aAAa,CAAC,EAAE,MAAM,GAAG;;QAErB,MAAM,KAAK,GAAG,GAAE;;QAEhB,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,GAAG;;YAEjC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAE;;SAEhC;;QAED,OAAO,KAAK;;KAEf;;;;;;IAMD,SAAS,CAAC,GAAG;;QAET,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE;;KAE/F;;IAED,cAAc,CAAC,EAAE,MAAM,GAAG;;QAEtB,MAAM,KAAK,GAAG,GAAE;;QAEhB,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,GAAG;;YAEjC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,GAAE;;SAEjC;;QAED,OAAO,KAAK;;KAEf;;;;;;;;IAQD,QAAQ,CAAC,GAAG;;QAER,IAAI,GAAG,IAAI,KAAI;QACf,IAAI,IAAI,GAAG,KAAI;;QAEf,KAAK,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,MAAM,GAAG;;YAE1C,GAAG,IAAI,IAAI,CAAC,SAAS,GAAE;YACvB,IAAI,GAAG,IAAI,CAAC,SAAS,GAAE;;SAE1B,MAAM;;YAEH,IAAI,GAAG,IAAI,CAAC,SAAS,GAAE;YACvB,GAAG,IAAI,IAAI,CAAC,SAAS,GAAE;;SAE1B;;;QAGD,KAAK,IAAI,GAAG,UAAU,GAAG;;YAErB,IAAI,GAAG,CAAC,IAAI,GAAG,WAAU;YACzB,GAAG,IAAI,CAAC,GAAG,GAAG,WAAU;;YAExB,KAAK,GAAG,KAAK,UAAU,GAAG;gBACtB,IAAI,GAAG,EAAE,IAAI,GAAG,CAAC,KAAK,WAAU;aACnC;;YAED,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,KAAK,WAAU;;YAE9B,OAAO,GAAG,IAAI,GAAG,WAAW,GAAG,GAAG,EAAE;;SAEvC;;QAED,OAAO,IAAI,GAAG,WAAW,GAAG,GAAG;;KAElC;;IAED,aAAa,CAAC,EAAE,MAAM,GAAG;;QAErB,MAAM,KAAK,GAAG,GAAE;;QAEhB,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,GAAG;;YAEjC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAE;;SAEhC;;QAED,OAAO,KAAK;;KAEf;;;IAGD,SAAS,CAAC,GAAG;;QAET,IAAI,GAAG,IAAI,KAAI;QACf,IAAI,IAAI,GAAG,KAAI;;QAEf,KAAK,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,MAAM,GAAG;;YAE1C,GAAG,IAAI,IAAI,CAAC,SAAS,GAAE;YACvB,IAAI,GAAG,IAAI,CAAC,SAAS,GAAE;;SAE1B,MAAM;;YAEH,IAAI,GAAG,IAAI,CAAC,SAAS,GAAE;YACvB,GAAG,IAAI,IAAI,CAAC,SAAS,GAAE;;SAE1B;;QAED,OAAO,IAAI,GAAG,WAAW,GAAG,GAAG;;KAElC;;IAED,cAAc,CAAC,EAAE,MAAM,GAAG;;QAEtB,MAAM,KAAK,GAAG,GAAE;;QAEhB,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,GAAG;;YAEjC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,GAAE;;SAEjC;;QAED,OAAO,KAAK;;KAEf;;;;;;IAMD,UAAU,CAAC,GAAG;;QAEV,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE;;KAEhG;;IAED,eAAe,CAAC,EAAE,MAAM,GAAG;;QAEvB,MAAM,KAAK,GAAG,GAAE;;QAEhB,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,GAAG;;YAEjC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,GAAE;;SAElC;;QAED,OAAO,KAAK;;KAEf;;;;;;IAMD,UAAU,CAAC,GAAG;;QAEV,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE;;KAElG;;IAED,eAAe,CAAC,EAAE,MAAM,GAAG;;QAEvB,MAAM,KAAK,GAAG,GAAE;;QAEhB,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,GAAG;;YAEjC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,GAAE;;SAElC;;QAED,OAAO,KAAK;;KAEf;;;;;;IAMD,OAAO,CAAC,GAAG;;QAEP,OAAO,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE;;KAEhD;;;;;;;;IAQD,SAAS,CAAC,EAAE,MAAM,EAAE,IAAI,GAAG,IAAI,GAAG;;QAE9B,IAAI,MAAM,KAAK,GAAE;QACjB,IAAI,QAAQ,GAAG,KAAI;;QAEnB,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,GAAG;YACjC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAE;;YAE1B,KAAK,QAAQ,KAAK,CAAC,GAAG;gBAClB,QAAQ;aACX;;YAED,MAAM,IAAI,MAAM,CAAC,YAAY,EAAE,QAAQ,GAAE;SAC5C;;QAED,KAAK,IAAI,GAAG;YACR,MAAM,GAAG,MAAM,CAAC,IAAI,GAAE;SACzB;;QAED,OAAO,MAAM;;KAEhB;;IAED,cAAc,CAAC,EAAE,IAAI,GAAG;;QAEpB,MAAM,MAAM,GAAG,IAAI,CAAC,qBAAqB,EAAE,IAAI,GAAE;QACjD,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,GAAG,IAAI,EAAE;;KAE9D;;CAEJ;;ACzlBD;;;;;;;;;;;;;;;;AAgBA,AAqCA;AACA,MAAM,WAAW,CAAC;;IAEd,WAAW,CAAC,GAAG;QACX,IAAI,CAAC,GAAG,GAAG,EAAC;KACf;;IAED,IAAI,EAAE,CAAC,GAAG;QACN,IAAI,CAAC,GAAG,IAAI,EAAC;QACb,OAAO,IAAI,CAAC,GAAG;KAClB;;CAEJ;;AAED,MAAM,QAAQ,GAAG,IAAI,WAAW,GAAE;;AAElC,MAAM,WAAW,GAAG,MAAM,EAAE;IACxB,SAAS,IAAI,CAAC;IACd,UAAU,GAAG,CAAC;IACd,OAAO,MAAM,CAAC;IACd,QAAQ,KAAK,CAAC;IACd,SAAS,IAAI,CAAC;IACd,OAAO,MAAM,CAAC;IACd,SAAS,IAAI,CAAC;IACd,UAAU,GAAG,CAAC;IACd,WAAW,EAAE,CAAC;IACd,SAAS,IAAI,CAAC;IACd,SAAS,IAAI,EAAE;IACf,UAAU,GAAG,EAAE;IACf,WAAW,EAAE,EAAE;IACf,SAAS,IAAI,EAAE;CAClB,GAAE;;AAEH,MAAM,gBAAgB,CAAC;;IAEnB,WAAW,SAAS,CAAC,GAAG;QACpB,gBAAgB,CAAC,UAAU,GAAE;QAC7B,OAAO,gBAAgB,CAAC,UAAU;KACrC;;;;;;IAMD,WAAW,CAAC,EAAE,UAAU,GAAG,EAAE,GAAG;;QAE5B,MAAM,WAAW,GAAG;YAChB,GAAG;gBACC,QAAQ,gBAAgB,GAAG;gBAC3B,YAAY,YAAY,YAAY,CAAC,IAAI;gBACzC,SAAS,eAAe,GAAG;gBAC3B,sBAAsB,EAAE,GAAG;gBAC3B,mBAAmB,KAAK,CAAC;gBACzB,MAAM,kBAAkB,aAAa;aACxC,EAAE,GAAG,UAAU;UACnB;;QAED,IAAI,CAAC,QAAQ,iBAAiB,WAAW,CAAC,SAAQ;QAClD,IAAI,CAAC,YAAY,aAAa,WAAW,CAAC,aAAY;QACtD,IAAI,CAAC,SAAS,gBAAgB,WAAW,CAAC,UAAS;QACnD,IAAI,CAAC,sBAAsB,GAAG,WAAW,CAAC,uBAAsB;QAChE,IAAI,CAAC,mBAAmB,MAAM,WAAW,CAAC,oBAAmB;QAC7D,IAAI,CAAC,MAAM,mBAAmB,WAAW,CAAC,OAAM;;QAEhD,IAAI,CAAC,MAAM,kBAAkB,IAAI,MAAM,GAAE;QACzC,IAAI,CAAC,aAAa,WAAW,GAAE;QAC/B,IAAI,CAAC,eAAe,SAAS,GAAE;QAC/B,IAAI,CAAC,aAAa,WAAW,GAAE;QAC/B,IAAI,CAAC,aAAa,WAAW,GAAE;QAC/B,IAAI,CAAC,qBAAqB,GAAG,KAAI;;QAEjC,IAAI,CAAC,YAAY,GAAG,GAAE;;KAEzB;;IAED,IAAI,QAAQ,CAAC,GAAG;QACZ,OAAO,IAAI,CAAC,SAAS;KACxB;;IAED,IAAI,QAAQ,CAAC,EAAE,KAAK,GAAG;;QAEnB,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,uDAAuD,EAAE,EAAE;QACzG,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,4DAA4D,EAAE,EAAE;QACnH,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,mCAAmC,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,6BAA6B,CAAC,EAAE,EAAE;QAClJ,KAAK,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,wDAAwD,EAAE,EAAE;QACjH,KAAK,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,uEAAuE,EAAE,EAAE;;QAEhI,IAAI,CAAC,SAAS,GAAG,MAAK;;KAEzB;;IAED,IAAI,YAAY,CAAC,GAAG;QAChB,OAAO,IAAI,CAAC,aAAa;KAC5B;;IAED,IAAI,YAAY,CAAC,EAAE,KAAK,GAAG;;QAEvB,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,KAAK,EAAE,iDAAiD,EAAE,EAAE;QAC/F,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,2DAA2D,EAAE,EAAE;QAC7G,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,gEAAgE,EAAE,EAAE;QACvH,KAAK,GAAG,KAAK,YAAY,YAAY,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,uCAAuC,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,yCAAyC,CAAC,EAAE,EAAE;;QAEhL,IAAI,CAAC,aAAa,GAAG,MAAK;;KAE7B;;IAED,IAAI,SAAS,CAAC,GAAG;QACb,OAAO,IAAI,CAAC,UAAU;KACzB;;IAED,IAAI,SAAS,CAAC,EAAE,KAAK,GAAG;;QAEpB,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,uDAAuD,EAAE,EAAE;QACzG,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,4DAA4D,EAAE,EAAE;QACnH,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,oCAAoC,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,4BAA4B,CAAC,EAAE,EAAE;QAClJ,KAAK,CAAC,gBAAgB,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,uEAAuE,CAAC,EAAE,EAAE;;QAEtI,IAAI,CAAC,UAAU,GAAG,MAAK;;KAE1B;;IAED,IAAI,sBAAsB,CAAC,GAAG;QAC1B,OAAO,IAAI,CAAC,uBAAuB;KACtC;;IAED,IAAI,sBAAsB,CAAC,EAAE,KAAK,GAAG;;QAEjC,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG;YACnB,MAAM,IAAI,SAAS,EAAE,sEAAsE,EAAE;SAChG;;QAED,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG;YACxB,MAAM,IAAI,SAAS,EAAE,2EAA2E,EAAE;SACrG;;QAED,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG;YACxB,MAAM,IAAI,SAAS,EAAE,CAAC,mDAAmD,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,4BAA4B,CAAC,EAAE;SACpI;;QAED,KAAK,gBAAgB,EAAE,KAAK,EAAE,GAAG;YAC7B,MAAM,IAAI,SAAS,EAAE,wFAAwF,EAAE;SAClH;;QAED,IAAI,CAAC,uBAAuB,GAAG,MAAK;;KAEvC;;IAED,IAAI,mBAAmB,CAAC,GAAG;QACvB,OAAO,IAAI,CAAC,oBAAoB;KACnC;;IAED,IAAI,mBAAmB,CAAC,EAAE,KAAK,GAAG;;QAE9B,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG;YACnB,MAAM,IAAI,SAAS,EAAE,4EAA4E,EAAE;SACtG;;QAED,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG;YACxB,MAAM,IAAI,SAAS,EAAE,iFAAiF,EAAE;SAC3G;;QAED,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG;YACxB,MAAM,IAAI,SAAS,EAAE,CAAC,yDAAyD,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,4BAA4B,CAAC,EAAE;SAC1I;;QAED,KAAK,MAAM,EAAE,KAAK,EAAE,IAAI,gBAAgB,EAAE,KAAK,EAAE,GAAG;YAChD,MAAM,IAAI,SAAS,EAAE,8FAA8F,EAAE;SACxH;;QAED,IAAI,CAAC,oBAAoB,GAAG,MAAK;;KAEpC;;IAED,IAAI,MAAM,CAAC,GAAG;QACV,OAAO,IAAI,CAAC,OAAO;KACtB;;IAED,IAAI,MAAM,CAAC,EAAE,KAAK,GAAG;;QAEjB,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,2EAA2E,EAAE,EAAE;QAC7H,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,gFAAgF,EAAE,EAAE;QACvI,KAAK,GAAG,KAAK,YAAY,OAAO,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC,0CAA0C,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,0CAA0C,CAAC,EAAE,EAAE;;QAE/K,IAAI,CAAC,OAAO,GAAG,MAAK;;KAEvB;;IAED,WAAW,CAAC,EAAE,KAAK,GAAG;;QAElB,IAAI,CAAC,QAAQ,GAAG,MAAK;QACrB,OAAO,IAAI;;KAEd;;IAED,eAAe,CAAC,EAAE,KAAK,GAAG;;QAEtB,IAAI,CAAC,YAAY,GAAG,MAAK;QACzB,OAAO,IAAI;;KAEd;;IAED,YAAY,CAAC,EAAE,KAAK,GAAG;;QAEnB,IAAI,CAAC,SAAS,GAAG,MAAK;QACtB,OAAO,IAAI;;KAEd;;IAED,yBAAyB,CAAC,EAAE,KAAK,GAAG;;QAEhC,IAAI,CAAC,sBAAsB,GAAG,MAAK;QACnC,OAAO,IAAI;;KAEd;;IAED,sBAAsB,CAAC,EAAE,KAAK,GAAG;;QAE7B,IAAI,CAAC,mBAAmB,GAAG,MAAK;QAChC,OAAO,IAAI;;KAEd;;IAED,SAAS,CAAC,EAAE,KAAK,GAAG;;QAEhB,IAAI,CAAC,MAAM,GAAG,MAAK;QACnB,OAAO,IAAI;;KAEd;;IAED,cAAc,CAAC,GAAG;;QAEd,YAAY,EAAE,IAAI,CAAC,qBAAqB,GAAE;;QAE1C,IAAI,CAAC,qBAAqB,GAAG,UAAU,EAAE,MAAM;;YAE3C,MAAM,cAAc,GAAG,IAAI,CAAC,aAAY;YACxC,IAAI,OAAO,YAAY,GAAE;YACzB,MAAM,IAAI,OAAO,GAAG,cAAc,CAAC,MAAM,GAAG,CAAC,GAAG,OAAO,IAAI,CAAC,GAAG,OAAO,EAAE,GAAG;;gBAEvE,OAAO,CAAC,IAAI,EAAE,cAAc,CAAC,GAAG,EAAE,GAAE;;gBAEpC,KAAK,OAAO,CAAC,MAAM,KAAK,IAAI,CAAC,UAAU,IAAI,OAAO,KAAK,CAAC,GAAG;;oBAEvD,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;wBACrB,GAAG,SAAS,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;wBACrC,UAAU,EAAE,IAAI,IAAI,EAAE;wBACtB,KAAK,OAAO,WAAW,CAAC,QAAQ;wBAChC,MAAM,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK;wBAC/B,GAAG,SAAS,IAAI,CAAC,SAAS;wBAC1B,IAAI,QAAQ;4BACR,GAAG,EAAE,OAAO;yBACf;wBACD,YAAY,EAAE,IAAI,CAAC,aAAa;qBACnC,GAAE;;oBAEH,OAAO,GAAG,GAAE;iBACf;;aAEJ;;YAED,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,GAAE;;SAEjC,EAAE,IAAI,CAAC,uBAAuB,GAAE;;KAEpC;;IAED,YAAY,CAAC,GAAG;;QAEZ,QAAQ,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,GAAG;;YAE7F,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,GAAE;YAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,YAAY,GAAE;;YAEvC,MAAM,OAAO,gBAAgB,IAAI,cAAc,GAAE;YACjD,OAAO,CAAC,WAAW,UAAU,YAAY,CAAC,IAAI,EAAE,IAAI,GAAE;YACtD,OAAO,CAAC,MAAM,eAAe,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI;gBAChD,YAAY;gBACZ,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,YAAY,CAAC,MAAM,EAAE;gBAC3D,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,YAAY,CAAC,UAAU,EAAE;gBACtD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,YAAY,CAAC,OAAO,EAAE;cACjE;YACD,OAAO,CAAC,SAAS,YAAY,UAAU,CAAC,IAAI,EAAE,IAAI,GAAE;YACpD,OAAO,CAAC,UAAU,WAAW,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,YAAY,CAAC,UAAU,GAAE;YACnF,OAAO,CAAC,kBAAkB,GAAG,mBAAmB,CAAC,IAAI,EAAE,IAAI,GAAE;YAC7D,OAAO,CAAC,OAAO,cAAc,QAAQ,CAAC,IAAI,EAAE,IAAI,GAAE;YAClD,OAAO,CAAC,OAAO,cAAc,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,YAAY,CAAC,OAAO,GAAE;YAC3F,OAAO,CAAC,SAAS,YAAY,UAAU,CAAC,IAAI,EAAE,IAAI,GAAE;YACpD,OAAO,CAAC,IAAI,EAAE,YAAY,CAAC,MAAM,EAAE,YAAY,CAAC,GAAG,EAAE,IAAI,GAAE;YAC3D,OAAO,CAAC,gBAAgB,EAAE,cAAc,EAAE,kBAAkB,GAAE;YAC9D,OAAO,CAAC,gBAAgB,EAAE,QAAQ,EAAE,kBAAkB,GAAE;YACxD,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC,MAAK;;YAEtD,MAAM,UAAU,GAAG,EAAE,YAAY,CAAC,IAAI,IAAI,YAAY,CAAC,YAAY,KAAK,YAAY,CAAC,IAAI,KAAK,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC,IAAI,EAAE,GAAG,YAAY,CAAC,KAAI;YACrJ,OAAO,CAAC,IAAI,EAAE,UAAU,GAAE;;SAE7B;;QAED,SAAS,YAAY,GAAG,cAAc,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,cAAc,GAAE,EAAE;;QAEnF,SAAS,UAAU,GAAG,YAAY,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,YAAY,GAAE,EAAE;;QAE7E,SAAS,mBAAmB,GAAG,eAAe,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,eAAe,GAAE,EAAE;;QAEzF,SAAS,QAAQ,GAAG,UAAU,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,GAAE,EAAE;;QAEpE,SAAS,UAAU,GAAG,YAAY,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,GAAE,EAAE;;KAE7E;;;;;;;;;;;;;IAaD,MAAM,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;QAEjE,KAAK,OAAO,EAAE,IAAI,EAAE,IAAI,eAAe,EAAE,IAAI,EAAE,GAAG;;YAE9C,KAAK,sBAAsB,EAAE,IAAI,EAAE,GAAG;;gBAElC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;aAEpF,MAAM;;gBAEH,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;aAEhF;;SAEJ,MAAM,KAAK,QAAQ,EAAE,IAAI,EAAE,IAAI,gBAAgB,EAAE,IAAI,EAAE,GAAG;;YAEvD,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;SAE/E,MAAM;;YAEH,eAAe,EAAE,gFAAgF,GAAE;;SAEtG;;KAEJ;;;;;;;;;;;;IAYD,IAAI,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;QAEhF,KAAK,QAAQ,EAAE,SAAS,EAAE,IAAI,gBAAgB,EAAE,SAAS,EAAE,IAAI,gBAAgB,EAAE,SAAS,EAAE,GAAG;;YAE3F,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;SAE9F,MAAM,KAAK,OAAO,EAAE,SAAS,EAAE,IAAI,eAAe,EAAE,SAAS,EAAE,GAAG;;YAE/D,KAAK,sBAAsB,EAAE,SAAS,EAAE,GAAG;;gBAEvC,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,UAAU,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;aAEnG,MAAM;;gBAEH,IAAI,CAAC,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;aAE/F;;SAEJ,MAAM,KAAK,QAAQ,EAAE,SAAS,EAAE,GAAG;;YAEhC,KAAK,aAAa,EAAE,SAAS,EAAE,GAAG;;gBAE9B,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;aAEnF,MAAM;;gBAEH,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;aAEhG;;SAEJ,MAAM;;YAEH,eAAe,EAAE,sFAAsF,GAAE;;SAE5G;;KAEJ;;;;;;;;;;;;;IAaD,MAAM,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;QAE9E,KAAK,YAAY,EAAE,MAAM,EAAE,GAAG;YAC1B,eAAe,EAAE,oEAAoE,GAAE;YACvF,MAAM;SACT;;QAED,KAAK,WAAW,EAAE,MAAM,EAAE,GAAG;YACzB,eAAe,EAAE,sEAAsE,GAAE;YACzF,MAAM;SACT;;QAED,KAAK,QAAQ,EAAE,SAAS,EAAE,IAAI,gBAAgB,EAAE,SAAS,EAAE,IAAI,gBAAgB,EAAE,SAAS,EAAE,GAAG;;YAE3F,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;SAE5F,MAAM,KAAK,OAAO,EAAE,SAAS,EAAE,IAAI,eAAe,EAAE,SAAS,EAAE,GAAG;;YAE/D,KAAK,sBAAsB,EAAE,SAAS,EAAE,GAAG;;gBAEvC,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;aAEjG,MAAM;;gBAEH,IAAI,CAAC,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;aAE7F;;SAEJ,MAAM,KAAK,QAAQ,EAAE,SAAS,EAAE,GAAG;;YAEhC,KAAK,aAAa,EAAE,SAAS,EAAE,GAAG;;gBAE9B,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;aAEjF,MAAM;;gBAEH,IAAI,CAAC,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;aAE9F;;SAEJ,MAAM;;YAEH,eAAe,EAAE,wFAAwF,GAAE;;SAE9G;;KAEJ;;;;;;;;;;;;IAYD,MAAM,CAAC,EAAE,SAAS,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;QAEtE,KAAK,QAAQ,EAAE,SAAS,EAAE,IAAI,gBAAgB,EAAE,SAAS,EAAE,IAAI,gBAAgB,EAAE,SAAS,EAAE,GAAG;;YAE3F,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;SAEpF,MAAM,KAAK,OAAO,EAAE,SAAS,EAAE,IAAI,eAAe,EAAE,SAAS,EAAE,GAAG;;YAE/D,KAAK,sBAAsB,EAAE,SAAS,EAAE,GAAG;;gBAEvC,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;aAEzF,MAAM;;gBAEH,IAAI,CAAC,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;aAErF;;SAEJ,MAAM,KAAK,QAAQ,EAAE,SAAS,EAAE,GAAG;;YAEhC,KAAK,aAAa,EAAE,SAAS,EAAE,GAAG;;gBAE9B,IAAI,CAAC,UAAU,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;aAEzE,MAAM;;gBAEH,IAAI,CAAC,YAAY,EAAE,SAAS,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;;aAEtF;;SAEJ,MAAM;;YAEH,eAAe,EAAE,8FAA8F,GAAE;;SAEpH;;KAEJ;;;;;;;;;;;;;;;;;;IAkBD,OAAO,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,EAAE,SAAS,GAAG;;QAEhF,MAAM,MAAM,SAAS,SAAS,CAAC,OAAM;QACrC,MAAM,MAAM,SAAS,MAAM,CAAC,OAAM;QAClC,MAAM,QAAQ,OAAO,MAAM,CAAC,SAAQ;QACpC,MAAM,YAAY,GAAG,MAAM,CAAC,aAAY;;QAExC,SAAS,MAAM;;;;;;;;YAQX,KAAK,cAAc,CAAC,EAAE,CAAC,KAAK;gBACxB,IAAI,CAAC,iBAAiB,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAE;gBACrG,KAAK;;;;YAIT,KAAK,cAAc,CAAC,2BAA2B,CAAC,KAAK,CAAC;YACtD,KAAK,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC;YACpC,KAAK,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC;YACvC,KAAK,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC;YACzC,KAAK,cAAc,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,cAAc,CAAC,eAAe,CAAC,KAAK,CAAC;YAC1C,KAAK,cAAc,CAAC,gBAAgB,CAAC,KAAK,CAAC;YAC3C,KAAK,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC;YACjC,KAAK,cAAc,CAAC,eAAe,CAAC,KAAK,CAAC;YAC1C,KAAK,cAAc,CAAC,gBAAgB,CAAC,KAAK,CAAC;YAC3C,KAAK,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC;YAChC,KAAK,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC;YACnC,KAAK,cAAc,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC;YACnC,KAAK,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC;YACjC,KAAK,cAAc,CAAC,iBAAiB,CAAC,KAAK,CAAC;YAC5C,KAAK,cAAc,CAAC,iBAAiB,CAAC,KAAK,CAAC;YAC5C,KAAK,cAAc,CAAC,gBAAgB,CAAC,KAAK,CAAC;YAC3C,KAAK,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC;YACrC,KAAK,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC;YACvC,KAAK,cAAc,CAAC,eAAe,CAAC,KAAK,CAAC;YAC1C,KAAK,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC;YACpC,KAAK,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC;YACnC,KAAK,cAAc,CAAC,gBAAgB,CAAC,KAAK,CAAC;YAC3C,KAAK,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC;YACxC,KAAK,cAAc,CAAC,2BAA2B,CAAC,KAAK,CAAC;YACtD,KAAK,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC;YACzC,KAAK,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC;YACnC,KAAK,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC;YAC/B,KAAK,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC;YACzC,KAAK,cAAc,CAAC,kBAAkB,CAAC,KAAK,CAAC;YAC7C,KAAK,cAAc,CAAC,qBAAqB,CAAC,KAAK,CAAC;YAChD,KAAK,cAAc,CAAC,yBAAyB,CAAC,KAAK,CAAC;YACpD,KAAK,cAAc,CAAC,iBAAiB,CAAC,KAAK,CAAC;YAC5C,KAAK,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC;YACpC,KAAK,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC;YACrC,KAAK,cAAc,CAAC,mBAAmB,CAAC,KAAK,CAAC;YAC9C,KAAK,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC;YACjC,KAAK,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC;YACxC,KAAK,cAAc,CAAC,mBAAmB,CAAC,KAAK,CAAC;YAC9C,KAAK,cAAc,CAAC,eAAe,CAAC,KAAK,CAAC;YAC1C,KAAK,cAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC;YAC/C,KAAK,cAAc,CAAC,eAAe,CAAC,KAAK,CAAC;YAC1C,KAAK,cAAc,CAAC,2BAA2B,CAAC,KAAK,CAAC;YACtD,KAAK,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC;YACrC,KAAK,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC;YACpC,KAAK,cAAc,CAAC,gCAAgC,CAAC,KAAK,CAAC;YAC3D,KAAK,cAAc,CAAC,0BAA0B,CAAC,KAAK,CAAC;YACrD,KAAK,cAAc,CAAC,kBAAkB,CAAC,KAAK,CAAC;YAC7C,KAAK,cAAc,CAAC,mBAAmB,CAAC,KAAK,CAAC;YAC9C,KAAK,cAAc,CAAC,sBAAsB,CAAC,KAAK,CAAC;YACjD,KAAK,cAAc,CAAC,0BAA0B,CAAC,KAAK,CAAC;YACrD,KAAK,cAAc,CAAC,mBAAmB,CAAC,KAAK,CAAC;YAC9C,KAAK,cAAc,CAAC,mBAAmB,CAAC,KAAK,CAAC;YAC9C,KAAK,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC;YACzC,KAAK,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC;YACrC,KAAK,cAAc,CAAC,kBAAkB,CAAC,KAAK,CAAC;YAC7C,KAAK,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC;YACzC,KAAK,cAAc,CAAC,uBAAuB,CAAC,KAAK,CAAC;YAClD,KAAK,cAAc,CAAC,qBAAqB,CAAC,KAAK,CAAC;YAChD,KAAK,cAAc,CAAC,mBAAmB,CAAC,KAAK,CAAC;YAC9C,KAAK,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC;YACvC,KAAK,cAAc,CAAC,sBAAsB,CAAC,KAAK,CAAC;YACjD,KAAK,cAAc,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,cAAc,CAAC,6BAA6B,CAAC,KAAK,CAAC;YACxD,KAAK,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC;YACvC,KAAK,cAAc,CAAC,eAAe,CAAC,KAAK,CAAC;YAC1C,KAAK,cAAc,CAAC,kBAAkB,CAAC,KAAK,CAAC;YAC7C,KAAK,cAAc,CAAC,mBAAmB,CAAC,KAAK,CAAC;YAC9C,KAAK,cAAc,CAAC,eAAe,CAAC,KAAK,CAAC;YAC1C,KAAK,cAAc,CAAC,kBAAkB,CAAC,KAAK,CAAC;YAC7C,KAAK,cAAc,CAAC,qBAAqB,CAAC,KAAK,CAAC;YAChD,KAAK,cAAc,CAAC,YAAY,CAAC,KAAK;gBAClC,eAAe,EAAE,QAAQ,GAAE;gBAC3B,KAAK;;YAET;gBACI,MAAM,IAAI,UAAU,EAAE,CAAC,0BAA0B,EAAE,MAAM,CAAC,CAAC,EAAE;;SAEpE;;KAEJ;;;;;;;;;;;IAWD,WAAW,CAAC,EAAE,kBAAkB,EAAE,aAAa,GAAG;;QAE9C,KAAK,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG;;YAE5B,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,aAAa,EAAE,kBAAkB,GAAE;;SAE5D,MAAM,KAAK,SAAS,EAAE,kBAAkB,EAAE,GAAG;;YAE1C,kBAAkB,EAAE,aAAa,GAAE;;SAEtC;;KAEJ;;;;;;;;;;;IAWD,QAAQ,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,UAAU,GAAG;;QAE9C,IAAI,CAAC,aAAa,EAAE,OAAO,GAAE;;QAE7B,KAAK,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG;;YAE5B,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,EAAE,eAAe,GAAE;;SAEnD,MAAM,KAAK,SAAS,EAAE,eAAe,EAAE,GAAG;;YAEvC,eAAe,EAAE,UAAU,GAAE;;SAEhC;;KAEJ;;IAED,MAAM,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,GAAG;;QAEzC,MAAM,IAAI,GAAG,OAAO,CAAC,MAAK;;QAE1B,SAAS,IAAI;;YAET,KAAK,WAAW,CAAC,OAAO,CAAC;YACzB,KAAK,WAAW,CAAC,QAAQ;gBACrB,IAAI,CAAC,YAAY,EAAE,QAAQ,GAAE;gBAC7B,IAAI,CAAC,mBAAmB,GAAE;gBAC1B,KAAK;;YAET,KAAK,WAAW,CAAC,SAAS,CAAC;YAC3B,KAAK,WAAW,CAAC,OAAO;gBACpB,IAAI,CAAC,YAAY,EAAE,QAAQ,GAAE;gBAC7B,IAAI,CAAC,mBAAmB,GAAE;gBAC1B,cAAc,EAAE,QAAQ,GAAE;gBAC1B,KAAK;;YAET,KAAK,WAAW,CAAC,SAAS,CAAC;YAC3B,KAAK,WAAW,CAAC,UAAU,CAAC;YAC5B,KAAK,WAAW,CAAC,SAAS,CAAC;YAC3B,KAAK,WAAW,CAAC,UAAU,CAAC;YAC5B,KAAK,WAAW,CAAC,WAAW,CAAC;YAC7B,KAAK,WAAW,CAAC,SAAS,CAAC;YAC3B,KAAK,WAAW,CAAC,SAAS,CAAC;YAC3B,KAAK,WAAW,CAAC,UAAU,CAAC;YAC5B,KAAK,WAAW,CAAC,WAAW,CAAC;YAC7B,KAAK,WAAW,CAAC,SAAS;gBACtB,cAAc,EAAE,QAAQ,GAAE;gBAC1B,KAAK;;YAET;gBACI,MAAM,IAAI,UAAU,EAAE,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC,EAAE;;SAE9D;;QAED,IAAI,CAAC,aAAa,EAAE,OAAO,GAAE;;KAEhC;;;;;;IAMD,iBAAiB,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;QAE9F,SAAS,YAAY;;YAEjB,KAAK,YAAY,CAAC,WAAW,CAAC,KAAK;gBAC/B,IAAI,CAAC,cAAc;oBACf,QAAQ;oBACR,cAAc;oBACd,kBAAkB;oBAClB,eAAe;kBAClB;gBACD,KAAK;;YAET,KAAK,YAAY,CAAC,IAAI,CAAC,KAAK;gBACxB,IAAI,CAAC,OAAO;oBACR,QAAQ;oBACR,cAAc;oBACd,kBAAkB;oBAClB,eAAe;kBAClB;gBACD,KAAK;;YAET,KAAK,YAAY,CAAC,IAAI,CAAC,KAAK;gBACxB,IAAI,CAAC,OAAO;oBACR,QAAQ;oBACR,cAAc;oBACd,kBAAkB;oBAClB,eAAe;kBAClB;gBACD,KAAK;;YAET,KAAK,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC;YAClC,KAAK,YAAY,CAAC,OAAO,CAAC,KAAK;gBAC3B,IAAI,CAAC,OAAO;oBACR,QAAQ;oBACR,cAAc;oBACd,kBAAkB;oBAClB,eAAe;kBAClB;gBACD,KAAK;;YAET;gBACI,MAAM,IAAI,KAAK,EAAE,CAAC,uBAAuB,EAAE,YAAY,CAAC,CAAC,EAAE;;SAElE;;KAEJ;;;;;;;IAOD,aAAa,CAAC,EAAE,OAAO,GAAG;;QAEtB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC,GAAE;;QAErE,KAAK,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG;;YAEpC,MAAM,IAAI,MAAM,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,OAAO,GAAE;YACnE,MAAM,OAAO,GAAG,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;gBACnF,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBAC7C,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBAC7C,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBAC7C,CAAC,0BAA0B,EAAC;YAChC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,GAAE;;SAE/B;;QAED,IAAI,CAAC,YAAY,GAAE;;KAEtB;;IAED,qBAAqB,CAAC,EAAE,GAAG,GAAG;;QAE1B,IAAI,OAAO,QAAQ,GAAE;QACrB,IAAI,YAAY,GAAG,GAAE;QACrB,IAAI,SAAS,MAAM,GAAE;;QAErB,MAAM,IAAI,OAAO,GAAG,CAAC,EAAE,WAAW,GAAG,GAAG,CAAC,MAAM,GAAG,OAAO,GAAG,WAAW,GAAG,OAAO,EAAE,GAAG;;YAElF,MAAM,EAAE,YAAY,GAAG,EAAE,OAAO,GAAE;YAClC,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,GAAE;;YAEzC,KAAK,SAAS,EAAE,WAAW,EAAE,GAAG;gBAC5B,OAAO,EAAE,EAAE,EAAE,GAAG,YAAW;aAC9B,MAAM,KAAK,MAAM,EAAE,WAAW,EAAE,GAAG;gBAChC,YAAY,CAAC,IAAI,EAAE,EAAE,GAAE;aAC1B,MAAM;gBACH,SAAS,CAAC,IAAI,EAAE,EAAE,GAAE;aACvB;;SAEJ;;QAED,OAAO;YACH,OAAO;YACP,YAAY;YACZ,SAAS;SACZ;;KAEJ;;IAED,YAAY,CAAC,EAAE,KAAK,GAAG;;QAEnB,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,kDAAkD,EAAE,EAAE;QACpG,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,SAAS,EAAE,uDAAuD,EAAE,EAAE;;QAE9G,IAAI,MAAM,GAAG,GAAE;QACf,KAAK,OAAO,EAAE,KAAK,EAAE,GAAG;;YAEpB,MAAM,IAAI,GAAG,IAAI,KAAK,GAAG;gBACrB,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,EAAE,GAAG,GAAE;aAC5C;;SAEJ,MAAM;;YAEH,MAAM,GAAG,MAAK;;SAEjB;;QAED,MAAM,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,GAAG;;YAEjD,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,GAAE;;YAE1C,KAAK,MAAM,EAAE,YAAY,EAAE,GAAG;gBAC1B,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,GAAE;aACpC,MAAM,KAAK,WAAW,EAAE,YAAY,EAAE,GAAG;gBACtC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,8CAA8C,GAAE;gBAClE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,GAAE;aAC9B,MAAM;gBACH,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,8BAA8B,GAAE;aACtD;;SAEJ;;KAEJ;;IAED,mBAAmB,CAAC,GAAG;;QAEnB,MAAM,sBAAsB,KAAK,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,GAAE;;QAErG,MAAM,IAAI,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,GAAG,YAAY,IAAI,CAAC,GAAG,YAAY,EAAE,GAAG;;YAE1F,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,EAAE,YAAY,GAAE;;;YAGjD,MAAM,IAAI,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,GAAG,SAAS,IAAI,CAAC,GAAG,SAAS,EAAE,GAAG;;gBAElF,MAAM,EAAE,aAAa,MAAM,CAAC,YAAY,EAAE,SAAS,GAAE;gBACrD,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,GAAE;;gBAE1C,KAAK,YAAY,EAAE,YAAY,EAAE,GAAG,EAAE,QAAQ,EAAE;;;gBAGhD,MAAM,CAAC,OAAO,EAAE,EAAE,EAAE,GAAG,aAAY;;;gBAGnC,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,GAAE;;aAErE;;;YAGD,MAAM,eAAe,KAAK,MAAM,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,GAAE;YAC5D,KAAK,eAAe,GAAG;;gBAEnB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,YAAY,EAAE,CAAC,GAAE;gBAC5C,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,OAAO,GAAE;;aAE1C,MAAM,KAAK,CAAC,eAAe,IAAI,sBAAsB,yCAAyC;;gBAE3F,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,kDAAkD,GAAE;gBACtE,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,YAAY,EAAE,CAAC,GAAE;gBAC5C,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,OAAO,GAAE;;aAE1C,AAIA;;SAEJ;;KAEJ;;;;;;;;;;;;;;;IAeD,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,GAAG,EAAE;;;;;;;;;;;;;;;IAe1D,OAAO,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,GAAG,EAAE;;;;;;;;;;;;;;;IAenD,OAAO,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,GAAG,EAAE;;;;;;;;;;;;;;;IAenD,OAAO,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,GAAG,EAAE;;;;;;;;;;;;;;IAcnD,UAAU,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;QAErE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YACrB,GAAG,WAAW,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;YACxC,UAAU,IAAI,IAAI,IAAI,EAAE;YACxB,KAAK,SAAS,WAAW,CAAC,SAAS;YACnC,MAAM,QAAQ,QAAQ,CAAC,MAAM,CAAC,KAAK;YACnC,GAAG,WAAW,IAAI,CAAC,SAAS;YAC5B,IAAI,UAAU,IAAI;YAClB,MAAM,QAAQ,cAAc;YAC5B,UAAU,IAAI,kBAAkB;YAChC,OAAO,OAAO,eAAe;YAC7B,YAAY,EAAE,IAAI,CAAC,aAAa;SACnC,GAAE;;QAEH,IAAI,CAAC,YAAY,GAAE;;KAEtB;;IAED,WAAW,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;QAEvE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YACrB,GAAG,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;YACzC,UAAU,IAAI,IAAI,IAAI,EAAE;YACxB,KAAK,SAAS,WAAW,CAAC,UAAU;YACpC,MAAM,QAAQ,QAAQ,CAAC,MAAM,CAAC,KAAK;YACnC,GAAG,WAAW,IAAI,CAAC,SAAS;YAC5B,IAAI,UAAU,KAAK;YACnB,MAAM,QAAQ,cAAc;YAC5B,UAAU,IAAI,kBAAkB;YAChC,OAAO,OAAO,eAAe;YAC7B,YAAY,EAAE,IAAI,CAAC,aAAa;SACnC,GAAE;;QAEH,IAAI,CAAC,YAAY,GAAE;;KAEtB;;;;;;;;;;;;;IAaD,QAAQ,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;;QAG7E,MAAM,KAAK,GAAG,IAAI,CAAC,qBAAqB,EAAE,EAAE,EAAE,EAAE,GAAE;;;;;;QAMlD,KAAK,KAAK,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,GAAG;;YAEhC,KAAK,KAAK,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,GAAG;;gBAEnC,cAAc,EAAE,KAAK,CAAC,OAAO,GAAE;;aAElC,MAAM;;gBAEH,KAAK,EAAE,gBAAgB,EAAE,GAAG,eAAc;gBAC1C,KAAK,EAAE,oBAAoB,EAAE,GAAG,mBAAkB;gBAClD,KAAK,EAAE,iBAAiB,EAAE,GAAG,gBAAe;gBAC5C,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,GAAE;;aAEnC;;SAEJ,MAAM;;YAEH,KAAK,EAAE,gBAAgB,EAAE,GAAG,eAAc;YAC1C,KAAK,EAAE,oBAAoB,EAAE,GAAG,mBAAkB;YAClD,KAAK,EAAE,iBAAiB,EAAE,GAAG,gBAAe;YAC5C,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,GAAE;;YAEhC,IAAI;gBACA,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,GAAE;gBAC3B,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,GAAE;gBAC7B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,GAAE;aAC7D,CAAC,QAAQ,KAAK,GAAG;gBACd,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,GAAE;aAC7B;;YAED,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,GAAE;YAC5B,IAAI,CAAC,cAAc,GAAE;;SAExB;;KAEJ;;;;;;;;;;;;;IAaD,SAAS,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;;QAG/E,MAAM,KAAK,GAAG,IAAI,CAAC,qBAAqB,EAAE,GAAG,GAAE;;;;;;QAM/C,KAAK,KAAK,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,GAAG;;YAEhC,KAAK,KAAK,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,GAAG;;gBAEnC,cAAc,EAAE,KAAK,CAAC,OAAO,GAAE;;aAElC,MAAM;;gBAEH,KAAK,EAAE,gBAAgB,EAAE,GAAG,eAAc;gBAC1C,KAAK,EAAE,oBAAoB,EAAE,GAAG,mBAAkB;gBAClD,KAAK,EAAE,iBAAiB,EAAE,GAAG,gBAAe;gBAC5C,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,GAAE;;aAEnC;;SAEJ,MAAM;;YAEH,KAAK,EAAE,gBAAgB,EAAE,GAAG,eAAc;YAC1C,KAAK,EAAE,oBAAoB,EAAE,GAAG,mBAAkB;YAClD,KAAK,EAAE,iBAAiB,EAAE,GAAG,gBAAe;YAC5C,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,GAAE;;YAEhC,MAAM,cAAc,GAAG,KAAK,CAAC,UAAS;YACtC,IAAI,EAAE,iBAAiB,UAAS;YAChC,MAAM,IAAI,OAAO,GAAG,cAAc,CAAC,MAAM,GAAG,CAAC,GAAG,OAAO,IAAI,CAAC,GAAG,OAAO,EAAE,GAAG;;gBAEvE,EAAE,GAAG,cAAc,EAAE,OAAO,GAAE;;;gBAG9B,IAAI;oBACA,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,GAAE;oBAC3B,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,GAAE;oBAC7B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,GAAE;iBAC7D,CAAC,QAAQ,KAAK,GAAG;oBACd,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,GAAE;iBAC7B;;gBAED,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,GAAE;;aAE/B;;YAED,IAAI,CAAC,cAAc,GAAE;;SAExB;;KAEJ;;IAED,UAAU,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;;;;;;;;;;;QAYlF,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YACrB,GAAG,SAAS,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;YACtC,UAAU,EAAE,IAAI,IAAI,EAAE;YACtB,KAAK,OAAO,WAAW,CAAC,SAAS;YACjC,MAAM,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK;YAC/B,GAAG,SAAS,IAAI,CAAC,SAAS;YAC1B,IAAI,QAAQ;gBACR,KAAK;gBACL,UAAU;aACb;YACD,MAAM,QAAQ,cAAc;YAC5B,UAAU,IAAI,kBAAkB;YAChC,OAAO,OAAO,eAAe;YAC7B,YAAY,EAAE,IAAI,CAAC,aAAa;SACnC,GAAE;;QAEH,IAAI,CAAC,YAAY,GAAE;;KAEtB;;IAED,QAAQ,CAAC,EAAE,UAAU,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;;;;;;;;;;QAWzE,MAAM,KAAK,GAAG,GAAE;;QAEhB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YACrB,GAAG,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;YACpC,UAAU,EAAE,IAAI,IAAI,EAAE;YACtB,KAAK,OAAO,WAAW,CAAC,OAAO;YAC/B,MAAM,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK;YAC/B,GAAG,SAAS,IAAI,CAAC,SAAS;YAC1B,IAAI,QAAQ;gBACR,KAAK;gBACL,UAAU;aACb;YACD,MAAM,QAAQ,cAAc;YAC5B,UAAU,IAAI,kBAAkB;YAChC,OAAO,OAAO,eAAe;YAC7B,YAAY,EAAE,IAAI,CAAC,aAAa;SACnC,GAAE;;QAEH,IAAI,CAAC,YAAY,GAAE;;KAEtB;;;;;;;;;;;;;IAaD,UAAU,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;QAE3E,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YACrB,GAAG,SAAS,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;YACtC,UAAU,EAAE,IAAI,IAAI,EAAE;YACtB,KAAK,OAAO,WAAW,CAAC,SAAS;YACjC,MAAM,MAAM,QAAQ,CAAC,MAAM,CAAC,KAAK;YACjC,GAAG,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACrC,IAAI,QAAQ;gBACR,MAAM;aACT;YACD,MAAM,QAAQ,cAAc;YAC5B,UAAU,IAAI,kBAAkB;YAChC,OAAO,OAAO,eAAe;YAC7B,YAAY,EAAE,IAAI,CAAC,aAAa;SACnC,GAAE;;QAEH,IAAI,CAAC,YAAY,GAAE;;KAEtB;;;;;;;;;;;;;IAaD,WAAW,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;QAE7E,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YACrB,GAAG,SAAS,CAAC,WAAW,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;YACvC,UAAU,EAAE,IAAI,IAAI,EAAE;YACtB,KAAK,OAAO,WAAW,CAAC,UAAU;YAClC,MAAM,MAAM,QAAQ,CAAC,MAAM,CAAC,KAAK;YACjC,GAAG,SAAS,IAAI,CAAC,SAAS;YAC1B,IAAI,QAAQ;gBACR,GAAG;gBACH,MAAM;aACT;YACD,MAAM,QAAQ,cAAc;YAC5B,UAAU,IAAI,kBAAkB;YAChC,OAAO,OAAO,eAAe;YAC7B,YAAY,EAAE,IAAI,CAAC,aAAa;SACnC,GAAE;;QAEH,IAAI,CAAC,YAAY,GAAE;;KAEtB;;IAED,YAAY,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;QAEhF,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YACrB,GAAG,SAAS,CAAC,YAAY,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;YACxC,UAAU,EAAE,IAAI,IAAI,EAAE;YACtB,KAAK,OAAO,WAAW,CAAC,WAAW;YACnC,MAAM,MAAM,QAAQ,CAAC,MAAM,CAAC,KAAK;YACjC,GAAG,SAAS,IAAI,CAAC,SAAS;YAC1B,IAAI,QAAQ;gBACR,KAAK;gBACL,MAAM;aACT;YACD,MAAM,QAAQ,cAAc;YAC5B,UAAU,IAAI,kBAAkB;YAChC,OAAO,OAAO,eAAe;YAC7B,YAAY,EAAE,IAAI,CAAC,aAAa;SACnC,GAAE;;QAEH,IAAI,CAAC,YAAY,GAAE;;KAEtB;;IAED,UAAU,CAAC,EAAE,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;QAEvE,MAAM,KAAK,GAAG,GAAE;;QAEhB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YACrB,GAAG,SAAS,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;YACtC,UAAU,EAAE,IAAI,IAAI,EAAE;YACtB,KAAK,OAAO,WAAW,CAAC,SAAS;YACjC,MAAM,MAAM,QAAQ,CAAC,MAAM,CAAC,KAAK;YACjC,GAAG,SAAS,IAAI,CAAC,SAAS;YAC1B,IAAI,QAAQ;gBACR,KAAK;gBACL,MAAM;aACT;YACD,MAAM,QAAQ,cAAc;YAC5B,UAAU,IAAI,kBAAkB;YAChC,OAAO,OAAO,eAAe;YAC7B,YAAY,EAAE,IAAI,CAAC,aAAa;SACnC,GAAE;;QAEH,IAAI,CAAC,YAAY,GAAE;;KAEtB;;;;;;;;;;;;;IAaD,UAAU,CAAC,EAAE,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;QAEnE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YACrB,GAAG,WAAW,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;YACxC,UAAU,IAAI,IAAI,IAAI,EAAE;YACxB,KAAK,SAAS,WAAW,CAAC,SAAS;YACnC,MAAM,QAAQ,QAAQ,CAAC,MAAM,CAAC,KAAK;YACnC,GAAG,WAAW,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACvC,IAAI,UAAU,IAAI;YAClB,MAAM,QAAQ,cAAc;YAC5B,UAAU,IAAI,kBAAkB;YAChC,OAAO,OAAO,eAAe;YAC7B,YAAY,EAAE,IAAI,CAAC,aAAa;SACnC,GAAE;;QAEH,IAAI,CAAC,YAAY,GAAE;;KAEtB;;;;;;;;;;;;;IAaD,WAAW,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;QAErE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YACrB,GAAG,SAAS,CAAC,WAAW,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;YACvC,UAAU,EAAE,IAAI,IAAI,EAAE;YACtB,KAAK,OAAO,WAAW,CAAC,UAAU;YAClC,MAAM,MAAM,QAAQ,CAAC,MAAM,CAAC,KAAK;YACjC,GAAG,SAAS,IAAI,CAAC,SAAS;YAC1B,IAAI,QAAQ;gBACR,GAAG;aACN;YACD,MAAM,QAAQ,cAAc;YAC5B,UAAU,IAAI,kBAAkB;YAChC,OAAO,OAAO,eAAe;YAC7B,YAAY,EAAE,IAAI,CAAC,aAAa;SACnC,GAAE;;QAEH,IAAI,CAAC,YAAY,GAAE;;KAEtB;;IAED,YAAY,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;QAExE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YACrB,GAAG,SAAS,CAAC,YAAY,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;YACxC,UAAU,EAAE,IAAI,IAAI,EAAE;YACtB,KAAK,OAAO,WAAW,CAAC,WAAW;YACnC,MAAM,MAAM,QAAQ,CAAC,MAAM,CAAC,KAAK;YACjC,GAAG,SAAS,IAAI,CAAC,SAAS;YAC1B,IAAI,QAAQ;gBACR,KAAK;aACR;YACD,MAAM,QAAQ,cAAc;YAC5B,UAAU,IAAI,kBAAkB;YAChC,OAAO,OAAO,eAAe;YAC7B,YAAY,EAAE,IAAI,CAAC,aAAa;SACnC,GAAE;;QAEH,IAAI,CAAC,YAAY,GAAE;;KAEtB;;IAED,UAAU,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,GAAG;;QAE/D,MAAM,KAAK,GAAG,GAAE;;QAEhB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YACrB,GAAG,SAAS,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;YACtC,UAAU,EAAE,IAAI,IAAI,EAAE;YACtB,KAAK,OAAO,WAAW,CAAC,SAAS;YACjC,MAAM,MAAM,QAAQ,CAAC,MAAM,CAAC,KAAK;YACjC,GAAG,SAAS,IAAI,CAAC,SAAS;YAC1B,IAAI,QAAQ;gBACR,KAAK;aACR;YACD,MAAM,QAAQ,cAAc;YAC5B,UAAU,IAAI,kBAAkB;YAChC,OAAO,OAAO,eAAe;YAC7B,YAAY,EAAE,IAAI,CAAC,aAAa;SACnC,GAAE;;QAEH,IAAI,CAAC,YAAY,GAAE;;KAEtB;;CAEJ;;;;AAID,gBAAgB,CAAC,UAAU,GAAG,EAAC;;AAE/B,gBAAgB,CAAC,SAAS,GAAG;IACzB,YAAY,EAAE,EAAE;IAChB,SAAS,KAAK;QACV,MAAM,EAAE,EAAE;QACV,IAAI,IAAI,EAAE;QACV,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,EAAE;KACb;IACD,YAAY,EAAE;QACV,MAAM,EAAE,EAAE;QACV,IAAI,IAAI,EAAE;QACV,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,EAAE;KACb;IACD,SAAS,EAAE;QACP,MAAM,EAAE,EAAE;QACV,IAAI,IAAI,EAAE;QACV,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,EAAE;KACb;CACJ;;ACr9CD;;;;;;;;;AASA,AAOA;;;;;;;;;;;;;;AAcA,AAAK,MAAC,cAAc,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,gBAAgB,EAAE,EAAE,EAAE;IAC/D,MAAM,EAAE;QACJ,KAAK,OAAO,CAAC;QACb,UAAU,EAAE,IAAI;KACnB;IACD,MAAM,EAAE;QACJ,KAAK,OAAO,CAAC;QACb,UAAU,EAAE,IAAI;KACnB;IACD,IAAI,EAAE;QACF,KAAK,OAAO,CAAC;QACb,UAAU,EAAE,IAAI;KACnB;IACD,QAAQ,EAAE;QACN,KAAK,EAAE,SAAS,QAAQ,GAAG,GAAG,GAAG;YAC7B,OAAO,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;SAC/C;KACJ;IACD,KAAK,EAAE;QACH,KAAK,EAAE,SAAS,KAAK,IAAI;YACrB,OAAO,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE;SAC7B;KACJ;;CAEJ,EAAE,GAAE;;AAEL,MAAM,UAAU,CAAC;;IAEb,WAAW,CAAC,EAAE,IAAI,GAAG,cAAc,CAAC,MAAM,EAAE,IAAI,GAAG,IAAI,GAAG;;QAEtD,IAAI,CAAC,IAAI,GAAG,KAAI;QAChB,IAAI,CAAC,IAAI,GAAG,KAAI;;QAEhB,IAAI,CAAC,QAAQ,GAAG,EAAC;;KAEpB;;IAED,IAAI,IAAI,CAAC,GAAG;QACR,OAAO,IAAI,CAAC,KAAK;KACpB;;IAED,IAAI,IAAI,CAAC,EAAE,KAAK,GAAG;;QAEf,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,KAAK,EAAE,CAAC,gEAAgE,EAAE,cAAc,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE;QACzI,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,KAAK,EAAE,CAAC,qEAAqE,EAAE,cAAc,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE;QACnJ,KAAK,CAAC,cAAc,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,KAAK,EAAE,CAAC,0DAA0D,EAAE,cAAc,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE;;QAErJ,IAAI,CAAC,KAAK,GAAG,MAAK;KACrB;;IAED,IAAI,IAAI,CAAC,GAAG;QACR,OAAO,IAAI,CAAC,KAAK;KACpB;;IAED,IAAI,IAAI,CAAC,EAAE,KAAK,GAAG;;QAEf,KAAK,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,KAAK,EAAE,4DAA4D,EAAE,EAAE;;QAE/G,KAAK,EAAE,IAAI,CAAC,KAAK,KAAK,cAAc,CAAC,MAAM,MAAM,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,KAAK,EAAE,6CAA6C,EAAE,EAAE;QAC5I,KAAK,EAAE,IAAI,CAAC,KAAK,KAAK,cAAc,CAAC,MAAM,MAAM,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,IAAI,KAAK,EAAE,6CAA6C,EAAE,EAAE;;;QAG5I,IAAI,CAAC,KAAK,GAAG,MAAK;KACrB;;IAED,OAAO,CAAC,EAAE,KAAK,GAAG;;QAEd,IAAI,CAAC,IAAI,GAAG,MAAK;QACjB,OAAO,IAAI;;KAEd;;IAED,OAAO,CAAC,EAAE,KAAK,GAAG;;QAEd,IAAI,CAAC,IAAI,GAAG,MAAK;QACjB,OAAO,IAAI;;KAEd;;IAED,QAAQ,CAAC,GAAG;QACR,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE;KACtC;;CAEJ;;;;"}