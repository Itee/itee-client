"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var iteeUtils=require("itee-utils"),iteeValidators=require("itee-validators");const FileFormat=iteeUtils.toEnum({Asc:{value:"asc"},Dae:{value:"dae"},Dbf:{value:"dbf"},Fbx:{value:"fbx"},Mtl:{value:"mtl"},Json:{value:"json"},Obj:{value:"obj"},Shp:{value:"shp"},Stl:{value:"stl"}}),HttpStatusCode=iteeUtils.toEnum({Continue:{value:100},SwitchingProtocols:{value:101},Processing:{value:102},Ok:{value:200},Created:{value:201},Accepted:{value:202},NonAuthoritativeInformation:{value:203},NoContent:{value:204},ResetContent:{value:205},PartialContent:{value:206},MultiStatus:{value:207},AlreadyReported:{value:208},ContentDifferent:{value:210},IMUsed:{value:226},MultipleChoices:{value:300},MovedPermanently:{value:301},Found:{value:302},SeeOther:{value:303},NotModified:{value:304},UseProxy:{value:305},Unused:{value:306},TemporaryRedirect:{value:307},PermanentRedirect:{value:308},TooManyRedirects:{value:310},BadRequest:{value:400},Unauthorized:{value:401},PaymentRequired:{value:402},Forbidden:{value:403},NotFound:{value:404},MethodNotAllowed:{value:405},NotAcceptable:{value:406},ProxyAuthenticationRequired:{value:407},RequestTimeOut:{value:408},Conflict:{value:409},Gone:{value:410},LengthRequired:{value:411},PreconditionFailed:{value:412},RequestEntityTooLarge:{value:413},RequestRangeUnsatisfiable:{value:416},ExpectationFailed:{value:417},ImATeapot:{value:418},BadMapping:{value:421},UnprocessableEntity:{value:422},Locked:{value:423},MethodFailure:{value:424},UnorderedCollection:{value:425},UpgradeRequired:{value:426},PreconditionRequired:{value:428},TooManyRequests:{value:429},RequestHeaderFieldsTooLarge:{value:431},NoResponse:{value:444},RetryWith:{value:449},BlockedByWindowsParentalControls:{value:450},UnavailableForLegalReasons:{value:451},UnrecoverableError:{value:456},SSLCertificateError:{value:495},SSLCertificateRequired:{value:496},HTTPRequestSentToHTTPSPort:{value:497},ClientClosedRequest:{value:499},InternalServerError:{value:500},NotImplemented:{value:501},BadGateway:{value:502},ServiceUnavailable:{value:503},GatewayTimeOut:{value:504},HTTPVersionNotSupported:{value:505},VariantAlsoNegotiates:{value:506},InsufficientStorage:{value:507},LoopDetected:{value:508},BandwidthLimitExceeded:{value:509},NotExtended:{value:510},NetworkAuthenticationRequired:{value:511},UnknownError:{value:520},WebServerIsDown:{value:521},ConnectionTimedOut:{value:522},OriginIsUnreachable:{value:523},ATimeoutOccured:{value:524},SSLHandshakeFailed:{value:525},InvalidSSLCertificate:{value:526},RailgunError:{value:527}}),HttpVerb=iteeUtils.toEnum({Create:{value:"PUT"},Read:{value:"POST"},Update:{value:"PATCH"},Delete:{value:"DELETE"}}),Keys=iteeUtils.toEnum({BACKSPACE:{value:8},TAB:{value:9},ENTER:{value:13},SHIFT:{value:16},CTRL:{value:17},ALT:{value:18},PAUSE:{value:19},CAPS_LOCK:{value:20},ESCAPE:{value:27},SPACE:{value:32},PAGE_UP:{value:33},PAGE_DOWN:{value:34},END:{value:35},HOME:{value:36},LEFT_ARROW:{value:37},UP_ARROW:{value:38},RIGHT_ARROW:{value:39},DOWN_ARROW:{value:40},INSERT:{value:45},DELETE:{value:46},ZERO:{value:48},ONE:{value:49},TWO:{value:50},THREE:{value:51},FOUR:{value:52},FIVE:{value:53},SIX:{value:54},SEVEN:{value:55},HEIGHT:{value:56},NINE:{value:57},A:{value:65},B:{value:66},C:{value:67},D:{value:68},E:{value:69},F:{value:70},G:{value:71},H:{value:72},I:{value:73},J:{value:74},K:{value:75},L:{value:76},M:{value:77},N:{value:78},O:{value:79},P:{value:80},Q:{value:81},R:{value:82},S:{value:83},T:{value:84},U:{value:85},V:{value:86},W:{value:87},X:{value:88},Y:{value:89},Z:{value:90},LEFT_WINDOW_KEY:{value:91},RIGHT_WINDOW_KEY:{value:92},SELECT_KEY:{value:93},NUMPAD_0:{value:96},NUMPAD_1:{value:97},NUMPAD_2:{value:98},NUMPAD_3:{value:99},NUMPAD_4:{value:100},NUMPAD_5:{value:101},NUMPAD_6:{value:102},NUMPAD_7:{value:103},NUMPAD_8:{value:104},NUMPAD_9:{value:105},MULTIPLY:{value:106},ADD:{value:107},SUBSTRACT:{value:109},DECIMAL_POINT:{value:110},DIVIDE:{value:111},F1:{value:112},F2:{value:113},F3:{value:114},F4:{value:115},F5:{value:116},F6:{value:117},F7:{value:118},F8:{value:119},F9:{value:120},F10:{value:121},F11:{value:122},F12:{value:123},NUM_LOCK:{value:144},SCROLL_LOCK:{value:145},SEMICOLON:{value:186},EQUAL:{value:187},COMMA:{value:188},DASH:{value:189},PERIODE:{value:190},SLASH:{value:191},GRAVE_ACCENT:{value:192},OPEN_SQUARE_BRACKET:{value:219},BACKSLASH:{value:220},CLOSE_SQUARE_BRACKET:{value:221},SINGLE_QUOTE:{value:222}}),MimeType=iteeUtils.toEnum({}),Mouse=iteeUtils.toEnum({WHEEL:{value:-1},LEFT:{value:0},MIDDLE:{value:1},RIGHT:{value:2}}),ResponseType=iteeUtils.toEnum({ArrayBuffer:{value:"arraybuffer"},Blob:{value:"blob"},Document:{value:"document"},Json:{value:"json"},DOMString:{value:"text"},Default:{value:""}});class TStore{static _validate(e,t){for(let a=0,s=t.length;a<s;a++){let s=t[a];if(!s.validator(e)){const t=s.error;throw iteeValidators.isString(t)?new TypeError(t):iteeValidators.isFunction(t)?new TypeError(t(e)):new TypeError(`${e} is invalid.`)}}}constructor(e={}){const t={collection:{},allowOverride:!1,keyValidators:[],valueValidators:[],...e};this.collection=t.collection,this.allowOverride=t.allowOverride,this.keyValidators=t.keyValidators,this.valueValidators=t.valueValidators}get collection(){return this._collection}set collection(e){const t="Expect an object.";if(iteeValidators.isNull(e))throw new TypeError(`Collection cannot be null ! ${t}`);if(iteeValidators.isUndefined(e))throw new TypeError(`Collection cannot be undefined ! ${t}`);if(iteeValidators.isNotObject(e))throw new TypeError(`Collection cannot be an instance of ${e.constructor.name} ! ${t}`);this._collection=e}get allowOverride(){return this._allowOverride}set allowOverride(e){const t="Expect a boolean.";if(iteeValidators.isNull(e))throw new TypeError(`Allow override cannot be null ! ${t}`);if(iteeValidators.isUndefined(e))throw new TypeError(`Allow override cannot be undefined ! ${t}`);if(iteeValidators.isNotBoolean(e))throw new TypeError(`Allow override cannot be an instance of ${e.constructor.name} ! ${t}`);this._allowOverride=e}get keyValidators(){return this._keyValidators}set keyValidators(e){const t="Expect an array of TValidator or an empty array.";if(iteeValidators.isNull(e))throw new TypeError(`Keys validators cannot be null ! ${t}`);if(iteeValidators.isUndefined(e))throw new TypeError(`Keys validators cannot be undefined ! ${t}`);if(iteeValidators.isNotArray(e))throw new TypeError(`Keys validators cannot be an instance of ${e.constructor.name} ! ${t}`);this._keyValidators=e}get valueValidators(){return this._valueValidators}set valueValidators(e){const t="Expect an array of TValidator or an empty array.";if(iteeValidators.isNull(e))throw new TypeError(`Values validators cannot be null ! ${t}`);if(iteeValidators.isUndefined(e))throw new TypeError(`Values validators cannot be undefined ! ${t}`);if(iteeValidators.isNotArray(e))throw new TypeError(`Values validators cannot be an instance of ${e.constructor.name} ! ${t}`);this._valueValidators=e}get keys(){return Object.keys(this._collection)}get values(){return Object.values(this._collection)}setCollection(e){return this.collection=e,this}setAllowOverride(e){return this.allowOverride=e,this}setKeyValidators(e){return this.keyValidators(e),this}setValueValidators(e){return this.valueValidators(e),this}add(e,t,a=!1){if(this.contain(e)&&!this._allowOverride&&!a)throw new TypeError(`Item with key (${e}) already exist in collection !`);return TStore._validate(e,this._keyValidators),TStore._validate(t,this._valueValidators),this._collection[e]=t,this}contain(e){return iteeValidators.isNotUndefined(this._collection[e])}get(e){return this._collection[e]}remove(e){return delete this._collection[e],this}clear(){return this._collection={},this}}class TAbstractFactory extends TStore{constructor(e={}){super({...e})}create(e,...t){}}class TCloningFactory extends TAbstractFactory{constructor(e={}){super({...e})}create(e,...t){return super.create(e,...t),this.get(e).clone(...t)}}class TInstancingFactory extends TAbstractFactory{constructor(e={}){super({...e})}create(e,...t){return super.create(e,...t),new this.get(e)(...t)}}const LogOutput=iteeUtils.toEnum({Console:1,Html:2,Toast:4,File:8,Database:16,All:255}),LogType=iteeUtils.toEnum({Message:0,Progress:1,Time:2}),LogLevel=iteeUtils.toEnum({None:0,Debug:1,Info:2,Warning:4,Error:8,All:255});class TLogger{static _levelToString(e){let t="";switch(e){case LogLevel.Info:t="info";break;case LogLevel.Warning:t="warning";break;case LogLevel.Error:t="error";break;default:t="unknownLogLevel"}return t}constructor(e={}){const t={outputLevel:LogLevel.Error,outputs:LogOutput.Console,...e};this.outputLevel=t.outputLevel,this.outputs=t.outputs,this._logsArray=[],this._timers={},this._counterTrace=0}get outputLevel(){return this._outputLevel}set outputLevel(e){const t="Expect a value from LogLevel enum.";if(iteeValidators.isNull(e))throw new Error(`OutputLevel cannot be null ! ${t}`);if(iteeValidators.isUndefined(e))throw new Error(`OutputLevel cannot be undefined ! ${t}`);this._outputLevel=e}get outputs(){return this._outputs}set outputs(e){const t="Expect a value from LogOutput enum.";if(iteeValidators.isNull(e))throw new Error(`Output cannot be null ! ${t}`);if(iteeValidators.isUndefined(e))throw new Error(`Output cannot be undefined ! ${t}`);this._outputs=e}_formatTrace(e,t){const a=`${TLogger._levelToString(e)}_${this._counterTrace}`;if(iteeValidators.isString(t))this._logsArray[a]=t;else if(iteeValidators.isObject(t))this._logsArray[a]=TLogger._formatObjectError(t);else if(iteeValidators.isArrayOfString(t))this._logsArray[a]=t.toString();else if(iteeValidators.isArrayOfObject(t)){this._logsArray[a]="";for(let a=0,s=t.length;a<s;a++)this._formatTrace(e,t[a])}else this._logsArray[a]=t?t.toString():"Empty log data !";return this._counterTrace++,this._logsArray[a]}dispatch(e){const t=e.type;switch(t){case LogType.Message:this._dispatchMessage(e);break;case LogType.Progress:this._dispatchProgress(e);break;case LogType.Time:this._dispatchTime(e);break;default:throw new RangeError(`Invalid switch parameter: ${t}`)}}_dispatchMessage(e){const t=e.level,a=e.message;switch(t){case LogLevel.Error:this.outputLevel&LogLevel.Error&&this._dispatchErrorMessage(a);break;case LogLevel.Warning:this.outputLevel&LogLevel.Warning&&this._dispatchWarningMessage(a);break;case LogLevel.Info:this.outputLevel&LogLevel.Info&&this._dispatchInfoMessage(a);break;case LogLevel.Debug:this.outputLevel&LogLevel.Debug&&this._dispatchDebugMessage(a);break;default:throw new RangeError(`Invalid switch parameter: ${t}`)}}_dispatchErrorMessage(e){if(this.outputs&LogOutput.Console&&console.error(e),this.outputs&LogOutput.Html){const t=document.createElement("span");t.classList.add("log-error"),t.innerText=e,document.body.appendChild(t)}this.outputs,LogOutput.Toast,this.outputs,LogOutput.File,this.outputs,LogOutput.Database}_dispatchWarningMessage(e){if(this.outputs&LogOutput.Console&&console.warn(e),this.outputs&LogOutput.Html){const t=document.createElement("span");t.classList.add("log-warning"),t.innerText=e,document.body.appendChild(t)}this.outputs,LogOutput.Toast,this.outputs,LogOutput.File,this.outputs,LogOutput.Database}_dispatchInfoMessage(e){if(this.outputs&LogOutput.Console&&console.log(e),this.outputs&LogOutput.Html){const t=document.createElement("span");t.classList.add("log-info"),t.innerText=e,document.body.appendChild(t)}this.outputs,LogOutput.Toast,this.outputs,LogOutput.File,this.outputs,LogOutput.Database}_dispatchDebugMessage(e){if(this.outputs&LogOutput.Console&&console.log(e),this.outputs&LogOutput.Html){const t=document.createElement("span");t.classList.add("log-info"),t.innerText=e,document.body.appendChild(t)}this.outputs,LogOutput.Toast,this.outputs,LogOutput.File,this.outputs,LogOutput.Database}_dispatchProgress(e){const t=e.level;let a=e.message;switch(t){case LogLevel.Info:this.outputLevel&LogLevel.Info&&this._dispatchInfoProgress(a);break;case LogLevel.Debug:this.outputLevel&LogLevel.Debug&&this._dispatchDebugProgress(a);break;default:throw new RangeError(`Invalid switch parameter: ${t}`)}}_dispatchInfoProgress(e){if(this.outputs&LogOutput.Console&&console.log(e),this.outputs&LogOutput.Html){const t=document.createElement("span");t.classList.add("log-info"),t.innerText=e,document.body.appendChild(t)}this.outputs,LogOutput.Toast,this.outputs,LogOutput.File,this.outputs,LogOutput.Database}_dispatchDebugProgress(e){if(this.outputs&LogOutput.Console&&console.log(e),this.outputs&LogOutput.Html){const t=document.createElement("span");t.classList.add("log-info"),t.innerText=e,document.body.appendChild(t)}this.outputs,LogOutput.Toast,this.outputs,LogOutput.File,this.outputs,LogOutput.Database}_dispatchTime(e){console.log(e.message)}debug(e){this.dispatch({type:LogType.Message,level:LogLevel.Debug,message:e})}log(e){this.dispatch({type:LogType.Message,level:LogLevel.Info,message:e})}warn(e){this.dispatch({type:LogType.Message,level:LogLevel.Warning,message:e})}error(e){this.dispatch({type:LogType.Message,level:LogLevel.Error,message:e})}progress(e){if(e.preventDefault(),e.cancelable&&e.stopImmediatePropagation(),e.lengthComputable){const t=e.type,a=e.loaded,s=e.total,r=`${t}: ${Math.round(a/s*1e4)/100}% [${a}/${s}]`;this.dispatch({type:LogType.Progress,level:LogLevel.Info,message:r})}}startChronoFor(e){this._timers[e]=(new Date).getTime()}stopChronoFor(e){const t=`${e} take ${(new Date).getTime()-this._timers[e]}ms.`;this.dispatch({type:LogType.Time,level:LogLevel.Debug,message:t})}setOutputLevel(e){return this.outputLevel=e,this}setOutput(e){return this.outputs=e,this}}const DefaultLogger=new TLogger;class TKeyboardController{static keyName(e){return null!==TKeyboardController.k[e]?TKeyboardController.k[e]:String.fromCharCode(e)}static onKeyUp(e){var t=TKeyboardController.keyName(e.keyCode);TKeyboardController.status[t]&&(TKeyboardController.status[t].pressed=!1)}static onKeyDown(e){var t=TKeyboardController.keyName(e.keyCode);TKeyboardController.status[t]||(TKeyboardController.status[t]={down:!1,pressed:!1,up:!1,updatedPreviously:!1})}constructor(){document.addEventListener("keydown",TKeyboardController.onKeyDown,!1),document.addEventListener("keyup",TKeyboardController.onKeyUp,!1)}update(){for(var e in TKeyboardController.status)TKeyboardController.status[e].updatedPreviously?TKeyboardController.status[e].down=!1:(TKeyboardController.status[e].down=!0,TKeyboardController.status[e].pressed=!0,TKeyboardController.status[e].updatedPreviously=!0),TKeyboardController.status[e].up?delete TKeyboardController.status[e]:TKeyboardController.status[e].pressed||(TKeyboardController.status[e].up=!0)}down(e){return TKeyboardController.status[e]&&TKeyboardController.status[e].down}pressed(e){return TKeyboardController.status[e]&&TKeyboardController.status[e].pressed}up(e){return TKeyboardController.status[e]&&TKeyboardController.status[e].up}debug(){var e="Keys active: ";for(var t in TKeyboardController.status)e+=" "+t;DefaultLogger.log(e)}}TKeyboardController.k=Keys,TKeyboardController.status={};class TMouseController{constructor(){}}const Endianness=iteeUtils.toEnum({Little:!0,Big:!1}),Byte=iteeUtils.toEnum({One:1,Two:2,Four:4,Height:8});class TBinaryReader{constructor(e={}){const t={buffer:new ArrayBuffer(0),offset:0,length:0,endianness:Endianness.Little,...e};this.buffer=t.buffer,this.offset=t.offset,this.length=t.length,this.endianness=t.endianness,this._updateDataView()}get buffer(){return this._buffer}set buffer(e){const t="Expect an instance of ArrayBuffer.";if(iteeValidators.isNull(e))throw new TypeError(`Buffer cannot be null ! ${t}`);if(iteeValidators.isUndefined(e))throw new TypeError(`Buffer cannot be undefined ! ${t}`);if(iteeValidators.isNotArrayBuffer)throw new TypeError(`Buffer cannot be an instance of ${e.constructor.name} ! ${t}`);this._buffer=e,this._offset=0,this._length=e.byteLength,this._updateDataView()}get offset(){return this._offset}set offset(e){const t="Expect a number.";if(iteeValidators.isNull(e))throw new TypeError(`Offset cannot be null ! ${t}`);if(iteeValidators.isUndefined(e))throw new TypeError(`Offset cannot be undefined ! ${t}`);if(iteeValidators.isNotNumber(e))throw new TypeError(`Offset cannot be an instance of ${e.constructor.name} ! ${t}`);this._offset=e,this._updateDataView()}get length(){return this._length}set length(e){const t="Expect a number.";if(iteeValidators.isNull(e))throw new TypeError(`Length cannot be null ! ${t}`);if(iteeValidators.isUndefined(e))throw new TypeError(`Length cannot be undefined ! ${t}`);if(iteeValidators.isNotNumber(e))throw new TypeError(`Length cannot be an instance of ${e.constructor.name} ! ${t}`);this._length=e,this._updateDataView()}get endianness(){return this._endianness}set endianness(e){const t="Expect a boolean.";if(iteeValidators.isNull(e))throw new TypeError(`Endianness cannot be null ! ${t}`);if(iteeValidators.isUndefined(e))throw new TypeError(`Endianness cannot be undefined ! ${t}`);if(iteeValidators.isNotBoolean(e))throw new TypeError(`Endianness cannot be an instance of ${e.constructor.name} ! ${t}`);this._endianness=e}setBuffer(e,t,a){return this.buffer=e,this.offset=t||0,this.length=a||e.byteLength,this}setOffset(e){return this.offset=e,this}setLength(e){return this.length=e,this}setEndianess(e){return this.endianness=e,this}_getAndUpdateOffsetBy(e){const t=this._offset;return this._offset+=e,t}_updateDataView(){this._dataView=new DataView(this._buffer,this._offset,this._length)}isEndOfFile(){return this._offset===this._length}skipOffsetTo(e){return this._offset=e,this}skipOffsetOf(e){return this._offset+=e,this}getBoolean(){return 1==(1&this.getUint8())}getBooleanArray(e){const t=[];for(let a=0;a<e;a++)t.push(this.getBoolean());return t}getInt8(){return this._dataView.getInt8(this._getAndUpdateOffsetBy(Byte.One))}getInt8Array(e){const t=[];for(let a=0;a<e;a++)t.push(this.getInt8());return t}getUint8(){return this._dataView.getUint8(this._getAndUpdateOffsetBy(Byte.One))}getUint8Array(e){const t=[];for(let a=0;a<e;a++)t.push(this.getUint8());return t}getInt16(){return this._dataView.getInt16(this._getAndUpdateOffsetBy(Byte.Two),this._endianness)}getInt16Array(e){const t=[];for(let a=0;a<e;a++)t.push(this.getInt16());return t}getUint16(){return this._dataView.getUint16(this._getAndUpdateOffsetBy(Byte.Two),this._endianness)}getUint16Array(e){const t=[];for(let a=0;a<e;a++)t.push(this.getUint16());return t}getInt32(){return this._dataView.getInt32(this._getAndUpdateOffsetBy(Byte.Four),this._endianness)}getInt32Array(e){const t=[];for(let a=0;a<e;a++)t.push(this.getInt32());return t}getUint32(){return this._dataView.getUint32(this._getAndUpdateOffsetBy(Byte.Four),this._endianness)}getUint32Array(e){const t=[];for(let a=0;a<e;a++)t.push(this.getUint32());return t}getInt64(){let e=null,t=null;return this._endianness===Endianness.Little?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),2147483648&t?(t=4294967295&~t,4294967295===(e=4294967295&~e)&&(t=t+1&4294967295),-(4294967296*t+(e=e+1&4294967295))):4294967296*t+e}getInt64Array(e){const t=[];for(let a=0;a<e;a++)t.push(this.getInt64());return t}getUint64(){let e=null,t=null;return this._endianness===Endianness.Little?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),4294967296*t+e}getUint64Array(e){const t=[];for(let a=0;a<e;a++)t.push(this.getUint64());return t}getFloat32(){return this._dataView.getFloat32(this._getAndUpdateOffsetBy(Byte.Four),this._endianness)}getFloat32Array(e){const t=[];for(let a=0;a<e;a++)t.push(this.getFloat32());return t}getFloat64(){return this._dataView.getFloat64(this._getAndUpdateOffsetBy(Byte.Height),this._endianness)}getFloat64Array(e){const t=[];for(let a=0;a<e;a++)t.push(this.getFloat64());return t}getChar(){return String.fromCharCode(this.getUint8())}getString(e,t=!0){let a="",s=null;for(let t=0;t<e;t++)0!==(s=this.getUint8())&&(a+=String.fromCharCode(s));return t&&(a=a.trim()),a}getArrayBuffer(e){const t=this._getAndUpdateOffsetBy(e);return this._dataView.buffer.slice(t,t+e)}}class IdGenerator{constructor(){this._id=0}get id(){return this._id+=1,this._id}}const Generate=new IdGenerator,RequestType=iteeUtils.toEnum({CreateOne:0,CreateMany:1,ReadOne:2,ReadMany:3,ReadWhere:4,ReadAll:5,UpdateOne:6,UpdateMany:7,UpdateWhere:8,UpdateAll:9,DeleteOne:10,DeleteMany:11,DeleteWhere:12,DeleteAll:13});class TDataBaseManager{static get requestId(){return TDataBaseManager._requestId++,TDataBaseManager._requestId}constructor(e={}){const t={basePath:"/",responseType:ResponseType.Json,bunchSize:500,requestAggregationTime:200,requestsConcurrency:6,logger:DefaultLogger,...e};this.basePath=t.basePath,this.responseType=t.responseType,this.bunchSize=t.bunchSize,this.requestAggregationTime=t.requestAggregationTime,this.requestsConcurrency=t.requestsConcurrency,this.logger=t.logger,this._cache=new TStore,this._waitingQueue=[],this._aggregateQueue=[],this._requestQueue=[],this._processQueue=[],this._aggregationTimeoutId=null,this._idToRequest=[]}get basePath(){return this._basePath}set basePath(e){if(iteeValidators.isNull(e))throw new TypeError("Base path cannot be null ! Expect a non empty string.");if(iteeValidators.isUndefined(e))throw new TypeError("Base path cannot be undefined ! Expect a non empty string.");if(iteeValidators.isNotString(e))throw new TypeError(`Base path cannot be an instance of ${e.constructor.name} ! Expect a non empty string.`);if(iteeValidators.isEmptyString(e))throw new TypeError("Base path cannot be empty ! Expect a non empty string.");if(iteeValidators.isBlankString(e))throw new TypeError("Base path cannot contain only whitespace ! Expect a non empty string.");this._basePath=e}get responseType(){return this._responseType}set responseType(e){if(iteeValidators.isNull(e))throw new Error("TDataBaseManager: responseType cannot be null !");if(iteeValidators.isNull(e))throw new TypeError("Response type cannot be null ! Expect a non empty string.");if(iteeValidators.isUndefined(e))throw new TypeError("Response type cannot be undefined ! Expect a non empty string.");this._responseType=e}get bunchSize(){return this._bunchSize}set bunchSize(e){if(iteeValidators.isNull(e))throw new TypeError("Bunch size cannot be null ! Expect a positive number.");if(iteeValidators.isUndefined(e))throw new TypeError("Bunch size cannot be undefined ! Expect a positive number.");if(iteeValidators.isNotNumber(e))throw new TypeError(`Bunch size cannot be an instance of ${e.constructor.name} ! Expect a positive number.`);if(!iteeValidators.isNumberPositive(e))throw new TypeError("Bunch size cannot be lower or equal to zero ! Expect a positive number.");this._bunchSize=e}get requestAggregationTime(){return this._requestAggregationTime}set requestAggregationTime(e){if(iteeValidators.isNull(e))throw new TypeError("Requests aggregation time cannot be null ! Expect a positive number.");if(iteeValidators.isUndefined(e))throw new TypeError("Requests aggregation time cannot be undefined ! Expect a positive number.");if(iteeValidators.isNotNumber(e))throw new TypeError(`Requests aggregation time cannot be an instance of ${e.constructor.name} ! Expect a positive number.`);if(iteeValidators.isNumberNegative(e))throw new TypeError("Requests aggregation time cannot be lower or equal to zero ! Expect a positive number.");this._requestAggregationTime=e}get requestsConcurrency(){return this._requestsConcurrency}set requestsConcurrency(e){if(iteeValidators.isNull(e))throw new TypeError("Minimum of simultaneous request cannot be null ! Expect a positive number.");if(iteeValidators.isUndefined(e))throw new TypeError("Minimum of simultaneous request cannot be undefined ! Expect a positive number.");if(iteeValidators.isNotNumber(e))throw new TypeError(`Minimum of simultaneous request cannot be an instance of ${e.constructor.name} ! Expect a positive number.`);if(iteeValidators.isZero(e)||iteeValidators.isNumberNegative(e))throw new TypeError("Minimum of simultaneous request cannot be lower or equal to zero ! Expect a positive number.");this._requestsConcurrency=e}get logger(){return this._logger}set logger(e){if(iteeValidators.isNull(e))throw new TypeError("Progress manager cannot be null ! Expect an instance of TProgressManager.");if(iteeValidators.isUndefined(e))throw new TypeError("Progress manager cannot be undefined ! Expect an instance of TProgressManager.");if(!(e instanceof TLogger))throw new TypeError(`Progress manager cannot be an instance of ${e.constructor.name} ! Expect an instance of TProgressManager.`);this._logger=e}setBasePath(e){return this.basePath=e,this}setResponseType(e){return this.responseType=e,this}setBunchSize(e){return this.bunchSize=e,this}setRequestAggregationTime(e){return this.requestAggregationTime=e,this}setRequestsConcurrency(e){return this.requestsConcurrency=e,this}setLogger(e){return this.logger=e,this}aggregateQueue(){clearTimeout(this._aggregationTimeoutId),this._aggregationTimeoutId=setTimeout(()=>{const e=this._idToRequest;let t=[];for(let a=e.length-1;a>=0;a--)t.push(e.pop()),t.length!==this._bunchSize&&0!==a||(this._requestQueue.push({_id:`readMany_${Generate.id}`,_timeStart:new Date,_type:RequestType.ReadMany,method:HttpVerb.Read.value,url:this._basePath,data:{ids:t},responseType:this._responseType}),t=[]);this.processQueue.call(this)},this._requestAggregationTime)}processQueue(){for(;this._requestQueue.length>0&&this._processQueue.length<this._requestsConcurrency;){const o=this._requestQueue.pop();this._processQueue.push(o);const n=new XMLHttpRequest;n.onloadstart=e.bind(this),n.onload=this._onLoad.bind(this,o,this._onEnd.bind(this,o,o.onLoad),this._onProgress.bind(this,o.onProgress),this._onError.bind(this,o,o.onError)),n.onloadend=t.bind(this),n.onprogress=this._onProgress.bind(this,o.onProgress),n.onreadystatechange=a.bind(this),n.onabort=s.bind(this),n.onerror=this._onError.bind(this,o,o.onError),n.ontimeout=r.bind(this),n.open(o.method,o.url,!0),n.setRequestHeader("Content-Type","application/json"),n.setRequestHeader("Accept","application/json"),n.responseType=o.responseType.value;const i=o.data&&o.responseType===ResponseType.Json?JSON.stringify(o.data):o.data;n.send(i)}function e(e){this.logger.progress(e)}function t(e){this.logger.progress(e)}function a(e){this.logger.debug(e)}function s(e){this.logger.error(e)}function r(e){this.logger.error(e)}}create(e,t,a,s){iteeValidators.isArray(e)&&iteeValidators.isNotEmptyArray(e)?iteeValidators.isArrayOfSingleElement(e)?this._createOne(e[0],t,a,s):this._createMany(e,t,a,s):iteeValidators.isObject(e)&&iteeValidators.isNotEmptyObject(e)?this._createOne(e,t,a,s):s("TDataBaseManager.create: Invalid data type, expect object or array of objects.")}read(e,t,a,s,r){iteeValidators.isString(e)&&iteeValidators.isNotEmptyString(e)&&iteeValidators.isNotBlankString(e)?this._readOne(e,t,a,s,r):iteeValidators.isArray(e)&&iteeValidators.isNotEmptyArray(e)?iteeValidators.isArrayOfSingleElement(e)?this._readOne(e[0],t,a,s,r):this._readMany(e,t,a,s,r):iteeValidators.isObject(e)?iteeValidators.isEmptyObject(e)?this._readAll(t,a,s,r):this._readWhere(e,t,a,s,r):r("TDataBaseManager.read: Invalid data type, expect string, object or array of objects.")}update(e,t,a,s,r){iteeValidators.isNotDefined(t)?r("TDataBaseManager.update: Update data cannot be null or undefined !"):iteeValidators.isNotObject(t)?r("TDataBaseManager.update: Invalid update data type. Expect an object."):iteeValidators.isString(e)&&iteeValidators.isNotEmptyString(e)&&iteeValidators.isNotBlankString(e)?this._updateOne(e,t,a,s,r):iteeValidators.isArray(e)&&iteeValidators.isNotEmptyArray(e)?iteeValidators.isArrayOfSingleElement(e)?this._updateOne(e[0],t,a,s,r):this._updateMany(e,t,a,s,r):iteeValidators.isObject(e)?iteeValidators.isEmptyObject(e)?this._updateAll(t,a,s,r):this._updateWhere(e,t,a,s,r):r("TDataBaseManager.update: Invalid data type, expect string, object or array of objects.")}delete(e,t,a,s){iteeValidators.isString(e)&&iteeValidators.isNotEmptyString(e)&&iteeValidators.isNotBlankString(e)?this._deleteOne(e,t,a,s):iteeValidators.isArray(e)&&iteeValidators.isNotEmptyArray(e)?iteeValidators.isArrayOfSingleElement(e)?this._deleteOne(e[0],t,a,s):this._deleteMany(e,t,a,s):iteeValidators.isObject(e)?iteeValidators.isEmptyObject(e)?this._deleteAll(t,a,s):this._deleteWhere(e,t,a,s):s("TDataBaseManager.delete: Invalid data type, expect null, string, object or array of objects.")}_onLoad(e,t,a,s,r){const o=r.target,n=o.status,i=o.response,u=o.responseType;switch(n){case HttpStatusCode.Ok.value:this._dispatchResponse(i,u,t,a,s);break;case HttpStatusCode.NonAuthoritativeInformation.value:case HttpStatusCode.NoContent.value:case HttpStatusCode.ResetContent.value:case HttpStatusCode.PartialContent.value:case HttpStatusCode.MultiStatus.value:case HttpStatusCode.AlreadyReported.value:case HttpStatusCode.ContentDifferent.value:case HttpStatusCode.IMUsed.value:case HttpStatusCode.MultipleChoices.value:case HttpStatusCode.MovedPermanently.value:case HttpStatusCode.Found.value:case HttpStatusCode.SeeOther.value:case HttpStatusCode.NotModified.value:case HttpStatusCode.UseProxy.value:case HttpStatusCode.Unused.value:case HttpStatusCode.TemporaryRedirect.value:case HttpStatusCode.PermanentRedirect.value:case HttpStatusCode.TooManyRedirects.value:case HttpStatusCode.BadRequest.value:case HttpStatusCode.Unauthorized.value:case HttpStatusCode.PaymentRequired.value:case HttpStatusCode.Forbidden.value:case HttpStatusCode.NotFound.value:case HttpStatusCode.MethodNotAllowed.value:case HttpStatusCode.NotAcceptable.value:case HttpStatusCode.ProxyAuthenticationRequired.value:case HttpStatusCode.RequestTimeOut.value:case HttpStatusCode.Conflict.value:case HttpStatusCode.Gone.value:case HttpStatusCode.LengthRequired.value:case HttpStatusCode.PreconditionFailed.value:case HttpStatusCode.RequestEntityTooLarge.value:case HttpStatusCode.RequestRangeUnsatisfiable.value:case HttpStatusCode.ExpectationFailed.value:case HttpStatusCode.ImATeapot.value:case HttpStatusCode.BadMapping.value:case HttpStatusCode.UnprocessableEntity.value:case HttpStatusCode.Locked.value:case HttpStatusCode.MethodFailure.value:case HttpStatusCode.UnorderedCollection.value:case HttpStatusCode.UpgradeRequired.value:case HttpStatusCode.PreconditionRequired.value:case HttpStatusCode.TooManyRequests.value:case HttpStatusCode.RequestHeaderFieldsTooLarge.value:case HttpStatusCode.NoResponse.value:case HttpStatusCode.RetryWith.value:case HttpStatusCode.BlockedByWindowsParentalControls.value:case HttpStatusCode.UnavailableForLegalReasons.value:case HttpStatusCode.UnrecoverableError.value:case HttpStatusCode.SSLCertificateError.value:case HttpStatusCode.SSLCertificateRequired.value:case HttpStatusCode.HTTPRequestSentToHTTPSPort.value:case HttpStatusCode.ClientClosedRequest.value:case HttpStatusCode.InternalServerError.value:case HttpStatusCode.NotImplemented.value:case HttpStatusCode.BadGateway.value:case HttpStatusCode.ServiceUnavailable.value:case HttpStatusCode.GatewayTimeOut.value:case HttpStatusCode.HTTPVersionNotSupported.value:case HttpStatusCode.VariantAlsoNegotiates.value:case HttpStatusCode.InsufficientStorage.value:case HttpStatusCode.LoopDetected.value:case HttpStatusCode.BandwidthLimitExceeded.value:case HttpStatusCode.NotExtended.value:case HttpStatusCode.NetworkAuthenticationRequired.value:case HttpStatusCode.UnknownError.value:case HttpStatusCode.WebServerIsDown.value:case HttpStatusCode.ConnectionTimedOut.value:case HttpStatusCode.OriginIsUnreachable.value:case HttpStatusCode.ATimeoutOccured.value:case HttpStatusCode.SSLHandshakeFailed.value:case HttpStatusCode.InvalidSSLCertificate.value:case HttpStatusCode.RailgunError.value:s(i);break;default:throw new RangeError(`Unmanaged HttpStatusCode: ${n}`)}}_onProgress(e,t){iteeValidators.isDefined(this.logger)?this.logger.progress(t,e):iteeValidators.isDefined(e)&&e(t)}_onError(e,t,a){this._closeRequest(e),iteeValidators.isDefined(this.logger)?this.logger.error(a,t):iteeValidators.isDefined(t)&&t(a)}_onEnd(e,t,a){const s=e._type;switch(s){case RequestType.ReadOne:case RequestType.ReadMany:this._updateCache(a),this._updateWaitingQueue();break;case RequestType.ReadWhere:case RequestType.ReadAll:this._updateCache(a),this._updateWaitingQueue(),t(a);break;case RequestType.CreateOne:case RequestType.CreateMany:case RequestType.UpdateOne:case RequestType.UpdateMany:case RequestType.UpdateWhere:case RequestType.UpdateAll:case RequestType.DeleteOne:case RequestType.DeleteMany:case RequestType.DeleteWhere:case RequestType.DeleteAll:t(a);break;default:throw new RangeError(`Invalid request type: ${s}`)}this._closeRequest(e)}_dispatchResponse(e,t,a,s,r){switch(t){case ResponseType.ArrayBuffer.value:this._onArrayBuffer(e,a,s,r);break;case ResponseType.Blob.value:this._onBlob(e,a,s,r);break;case ResponseType.Json.value:this._onJson(e,a,s,r);break;case ResponseType.DOMString.value:case ResponseType.Default.value:this._onText(e,a,s,r);break;default:throw new Error(`Unknown response type: ${t}`)}}_closeRequest(e){if(this._processQueue.splice(this._processQueue.indexOf(e),1),Window.Itee&&Window.Itee.Debug){const t=(new Date).valueOf()-e._timeStart.valueOf(),a=`${this.constructor.name} close request [${e._id}] on ${t}ms.`+`Waiting queue: ${this._waitingQueue.length}`+`Request queue: ${this._requestQueue.length}`+`Process queue: ${this._processQueue.length}`+"==========================";this.logger.debug(a)}this.processQueue()}_retrieveCachedValues(e){let t={},a=[],s=[];for(let r=0,o=e.length;r<o;r++){const o=e[r],n=this._cache.get(o);iteeValidators.isDefined(n)?t[o]=n:iteeValidators.isNull(n)?a.push(o):s.push(o)}return{results:t,underRequest:a,toRequest:s}}_updateCache(e){if(iteeValidators.isNull(e))throw new TypeError("Data cannot be null ! Expect an array of object.");if(iteeValidators.isUndefined(e))throw new TypeError("Data cannot be undefined ! Expect an array of object.");let t={};if(iteeValidators.isArray(e))for(let a in e)t[e[a]._id]=e[a];else t=e;for(let[e,a]of Object.entries(t)){const t=this._cache.get(e);iteeValidators.isNull(t)?this._cache.add(e,a,!0):iteeValidators.isUndefined(t)?(this.logger.warn("Cache was not pre-allocated with null value."),this._cache.add(e,a)):this.logger.error("Cached value already exist !")}}_updateWaitingQueue(){const e=0===this._requestQueue.length&&0===this._processQueue.length;for(let t=this._waitingQueue.length-1;t>=0;t--){const a=this._waitingQueue[t];for(let e=a.underRequest.length-1;e>=0;e--){const t=a.underRequest[e],s=this._cache.get(t);iteeValidators.isNotDefined(s)||(a.results[t]=s,a.underRequest.splice(a.underRequest.indexOf(t),1))}const s=0===a.underRequest.length;s?(this._waitingQueue.splice(t,1),a.onLoadCallback(a.results)):!s&&e&&(this.logger.warn("Incomplet demand but empty request/process queue"),this._waitingQueue.splice(t,1),a.onLoadCallback(a.results))}}_onArrayBuffer(e,t,a,s){}_onBlob(e,t,a,s){}_onJson(e,t,a,s){}_onText(e,t,a,s){}_createOne(e,t,a,s){this._requestQueue.push({_id:`createOne_${Generate.id}`,_timeStart:new Date,_type:RequestType.CreateOne,method:HttpVerb.Create.value,url:this._basePath,data:e,onLoad:t,onProgress:a,onError:s,responseType:this._responseType}),this.processQueue()}_createMany(e,t,a,s){this._requestQueue.push({_id:`createMany_${Generate.id}`,_timeStart:new Date,_type:RequestType.CreateMany,method:HttpVerb.Create.value,url:this._basePath,data:e,onLoad:t,onProgress:a,onError:s,responseType:this._responseType}),this.processQueue()}_readOne(e,t,a,s,r){const o=this._retrieveCachedValues([e]);if(0===o.toRequest.length)0===o.underRequest.length?a(o.results):(o.onLoadCallback=a,o.onProgressCallback=s,o.onErrorCallback=r,this._waitingQueue.push(o));else{o.onLoadCallback=a,o.onProgressCallback=s,o.onErrorCallback=r,this._waitingQueue.push(o);try{this._cache.add(e,null),o.underRequest.push(e),o.toRequest.splice(o.toRequest.indexOf(e),1)}catch(e){this.logger.error(e)}this._idToRequest.push(e),this.aggregateQueue()}}_readMany(e,t,a,s,r){const o=this._retrieveCachedValues(e);if(0===o.toRequest.length)0===o.underRequest.length?a(o.results):(o.onLoadCallback=a,o.onProgressCallback=s,o.onErrorCallback=r,this._waitingQueue.push(o));else{o.onLoadCallback=a,o.onProgressCallback=s,o.onErrorCallback=r,this._waitingQueue.push(o);const e=o.toRequest;let t=void 0;for(let a=e.length-1;a>=0;a--){t=e[a];try{this._cache.add(t,null),o.underRequest.push(t),o.toRequest.splice(o.toRequest.indexOf(t),1)}catch(e){this.logger.error(e)}this._idToRequest.push(t)}this.aggregateQueue()}}_readWhere(e,t,a,s,r){this._requestQueue.push({_id:`readWhere_${Generate.id}`,_timeStart:new Date,_type:RequestType.ReadWhere,method:HttpVerb.Read.value,url:this._basePath,data:{query:e,projection:t},onLoad:a,onProgress:s,onError:r,responseType:this._responseType}),this.processQueue()}_readAll(e,t,a,s){this._requestQueue.push({_id:`readAll_${Generate.id}`,_timeStart:new Date,_type:RequestType.ReadAll,method:HttpVerb.Read.value,url:this._basePath,data:{query:{},projection:e},onLoad:t,onProgress:a,onError:s,responseType:this._responseType}),this.processQueue()}_updateOne(e,t,a,s,r){this._requestQueue.push({_id:`updateOne_${Generate.id}`,_timeStart:new Date,_type:RequestType.UpdateOne,method:HttpVerb.Update.value,url:`${this._basePath}/${e}`,data:{update:t},onLoad:a,onProgress:s,onError:r,responseType:this._responseType}),this.processQueue()}_updateMany(e,t,a,s,r){this._requestQueue.push({_id:`updateMany_${Generate.id}`,_timeStart:new Date,_type:RequestType.UpdateMany,method:HttpVerb.Update.value,url:this._basePath,data:{ids:e,update:t},onLoad:a,onProgress:s,onError:r,responseType:this._responseType}),this.processQueue()}_updateWhere(e,t,a,s,r){this._requestQueue.push({_id:`updateWhere_${Generate.id}`,_timeStart:new Date,_type:RequestType.UpdateWhere,method:HttpVerb.Update.value,url:this._basePath,data:{query:e,update:t},onLoad:a,onProgress:s,onError:r,responseType:this._responseType}),this.processQueue()}_updateAll(e,t,a,s){this._requestQueue.push({_id:`updateAll_${Generate.id}`,_timeStart:new Date,_type:RequestType.UpdateAll,method:HttpVerb.Update.value,url:this._basePath,data:{query:{},update:e},onLoad:t,onProgress:a,onError:s,responseType:this._responseType}),this.processQueue()}_deleteOne(e,t,a,s){this._requestQueue.push({_id:`deleteOne_${Generate.id}`,_timeStart:new Date,_type:RequestType.DeleteOne,method:HttpVerb.Delete.value,url:`${this._basePath}/${e}`,data:null,onLoad:t,onProgress:a,onError:s,responseType:this._responseType}),this.processQueue()}_deleteMany(e,t,a,s){this._requestQueue.push({_id:`deleteMany_${Generate.id}`,_timeStart:new Date,_type:RequestType.DeleteMany,method:HttpVerb.Delete.value,url:this._basePath,data:{ids:e},onLoad:t,onProgress:a,onError:s,responseType:this._responseType}),this.processQueue()}_deleteWhere(e,t,a,s){this._requestQueue.push({_id:`deleteWhere_${Generate.id}`,_timeStart:new Date,_type:RequestType.DeleteWhere,method:HttpVerb.Delete.value,url:this._basePath,data:{query:e},onLoad:t,onProgress:a,onError:s,responseType:this._responseType}),this.processQueue()}_deleteAll(e,t,a){this._requestQueue.push({_id:`deleteAll_${Generate.id}`,_timeStart:new Date,_type:RequestType.DeleteAll,method:HttpVerb.Delete.value,url:this._basePath,data:{query:{}},onLoad:e,onProgress:t,onError:a,responseType:this._responseType}),this.processQueue()}}TDataBaseManager._requestId=0,TDataBaseManager._requests={waitingQueue:{},toProcess:{create:{},read:{},update:{},delete:{}},underProcess:{create:{},read:{},update:{},delete:{}},processed:{create:{},read:{},update:{},delete:{}}};const TIdFactoryType=Object.freeze(Object.defineProperties({},{Number:{value:0,enumerable:!0},String:{value:1,enumerable:!0},Uuid:{value:2,enumerable:!0},includes:{value:function(e){return Object.values(this).includes(e)}},types:{value:function(){return Object.keys(this)}}}));class TIdFactory{constructor(e=TIdFactoryType.Number,t=null){this.type=e,this.base=t,this._counter=0}get type(){return this._type}set type(e){if(iteeValidators.isNull(e))throw new Error(`Type cannot be null ! Expect an value from TIdFactoryType enum: ${TIdFactoryType.types()}`);if(iteeValidators.isUndefined(e))throw new Error(`Type cannot be undefined ! Expect an value from TIdFactoryType enum: ${TIdFactoryType.types()}`);if(!TIdFactoryType.includes(e))throw new Error(`Invalide type ! Expect an value from TIdFactoryType enum: ${TIdFactoryType.types()}`);this._type=e}get base(){return this._base}set base(e){if(iteeValidators.isUndefined(e))throw new Error("Base cannot be undefined ! Expect an instance of Object3D.");if(this._type===TIdFactoryType.Number&&iteeValidators.isNotNumber(e))throw new Error("Invalide Base ! It does not match the type.");if(this._type===TIdFactoryType.String&&iteeValidators.isNotString(e))throw new Error("Invalide Base ! It does not match the type.");this._base=e}setType(e){return this.type=e,this}setBase(e){return this.base=e,this}createId(){return this._base+this._counter++}}exports.Byte=Byte,exports.DefaultLogger=DefaultLogger,exports.Endianness=Endianness,exports.FileFormat=FileFormat,exports.HttpStatusCode=HttpStatusCode,exports.HttpVerb=HttpVerb,exports.Keys=Keys,exports.MimeType=MimeType,exports.Mouse=Mouse,exports.ResponseType=ResponseType,exports.TAbstractFactory=TAbstractFactory,exports.TBinaryReader=TBinaryReader,exports.TCloningFactory=TCloningFactory,exports.TDataBaseManager=TDataBaseManager,exports.TIdFactory=TIdFactory,exports.TIdFactoryType=TIdFactoryType,exports.TInstancingFactory=TInstancingFactory,exports.TKeyboardController=TKeyboardController,exports.TLogger=TLogger,exports.TMouseController=TMouseController,exports.TStore=TStore;
//# sourceMappingURL=itee-client.cjs.min.js.map
