"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("itee-utils"),t=require("itee-validators");
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @class ClassName
 * @classdesc Todo...
 * @example Todo...
 *
 */
const s=e.toEnum({Asc:{value:"asc"},Dae:{value:"dae"},Dbf:{value:"dbf"},Fbx:{value:"fbx"},Mtl:{value:"mtl"},Json:{value:"json"},Obj:{value:"obj"},Shp:{value:"shp"},Stl:{value:"stl"}}),a=e.toEnum({Continue:{value:100},SwitchingProtocols:{value:101},Processing:{value:102},Ok:{value:200},Created:{value:201},Accepted:{value:202},NonAuthoritativeInformation:{value:203},NoContent:{value:204},ResetContent:{value:205},PartialContent:{value:206},MultiStatus:{value:207},AlreadyReported:{value:208},ContentDifferent:{value:210},IMUsed:{value:226},MultipleChoices:{value:300},MovedPermanently:{value:301},Found:{value:302},SeeOther:{value:303},NotModified:{value:304},UseProxy:{value:305},Unused:{value:306},TemporaryRedirect:{value:307},PermanentRedirect:{value:308},TooManyRedirects:{value:310},BadRequest:{value:400},Unauthorized:{value:401},PaymentRequired:{value:402},Forbidden:{value:403},NotFound:{value:404},MethodNotAllowed:{value:405},NotAcceptable:{value:406},ProxyAuthenticationRequired:{value:407},RequestTimeOut:{value:408},Conflict:{value:409},Gone:{value:410},LengthRequired:{value:411},PreconditionFailed:{value:412},RequestEntityTooLarge:{value:413},RequestRangeUnsatisfiable:{value:416},ExpectationFailed:{value:417},ImATeapot:{value:418},BadMapping:{value:421},UnprocessableEntity:{value:422},Locked:{value:423},MethodFailure:{value:424},UnorderedCollection:{value:425},UpgradeRequired:{value:426},PreconditionRequired:{value:428},TooManyRequests:{value:429},RequestHeaderFieldsTooLarge:{value:431},NoResponse:{value:444},RetryWith:{value:449},BlockedByWindowsParentalControls:{value:450},UnavailableForLegalReasons:{value:451},UnrecoverableError:{value:456},SSLCertificateError:{value:495},SSLCertificateRequired:{value:496},HTTPRequestSentToHTTPSPort:{value:497},ClientClosedRequest:{value:499},InternalServerError:{value:500},NotImplemented:{value:501},BadGateway:{value:502},ServiceUnavailable:{value:503},GatewayTimeOut:{value:504},HTTPVersionNotSupported:{value:505},VariantAlsoNegotiates:{value:506},InsufficientStorage:{value:507},LoopDetected:{value:508},BandwidthLimitExceeded:{value:509},NotExtended:{value:510},NetworkAuthenticationRequired:{value:511},UnknownError:{value:520},WebServerIsDown:{value:521},ConnectionTimedOut:{value:522},OriginIsUnreachable:{value:523},ATimeoutOccured:{value:524},SSLHandshakeFailed:{value:525},InvalidSSLCertificate:{value:526},RailgunError:{value:527}}),r=e.toEnum({Create:{value:"PUT"},Read:{value:"POST"},Update:{value:"PATCH"},Delete:{value:"DELETE"}}),n=e.toEnum({BACKSPACE:{value:8},TAB:{value:9},ENTER:{value:13},SHIFT:{value:16},CTRL:{value:17},ALT:{value:18},PAUSE:{value:19},CAPS_LOCK:{value:20},ESCAPE:{value:27},SPACE:{value:32},PAGE_UP:{value:33},PAGE_DOWN:{value:34},END:{value:35},HOME:{value:36},LEFT_ARROW:{value:37},UP_ARROW:{value:38},RIGHT_ARROW:{value:39},DOWN_ARROW:{value:40},INSERT:{value:45},DELETE:{value:46},ZERO:{value:48},ONE:{value:49},TWO:{value:50},THREE:{value:51},FOUR:{value:52},FIVE:{value:53},SIX:{value:54},SEVEN:{value:55},HEIGHT:{value:56},NINE:{value:57},A:{value:65},B:{value:66},C:{value:67},D:{value:68},E:{value:69},F:{value:70},G:{value:71},H:{value:72},I:{value:73},J:{value:74},K:{value:75},L:{value:76},M:{value:77},N:{value:78},O:{value:79},P:{value:80},Q:{value:81},R:{value:82},S:{value:83},T:{value:84},U:{value:85},V:{value:86},W:{value:87},X:{value:88},Y:{value:89},Z:{value:90},LEFT_WINDOW_KEY:{value:91},RIGHT_WINDOW_KEY:{value:92},SELECT_KEY:{value:93},NUMPAD_0:{value:96},NUMPAD_1:{value:97},NUMPAD_2:{value:98},NUMPAD_3:{value:99},NUMPAD_4:{value:100},NUMPAD_5:{value:101},NUMPAD_6:{value:102},NUMPAD_7:{value:103},NUMPAD_8:{value:104},NUMPAD_9:{value:105},MULTIPLY:{value:106},ADD:{value:107},SUBSTRACT:{value:109},DECIMAL_POINT:{value:110},DIVIDE:{value:111},F1:{value:112},F2:{value:113},F3:{value:114},F4:{value:115},F5:{value:116},F6:{value:117},F7:{value:118},F8:{value:119},F9:{value:120},F10:{value:121},F11:{value:122},F12:{value:123},NUM_LOCK:{value:144},SCROLL_LOCK:{value:145},SEMICOLON:{value:186},EQUAL:{value:187},COMMA:{value:188},DASH:{value:189},PERIODE:{value:190},SLASH:{value:191},GRAVE_ACCENT:{value:192},OPEN_SQUARE_BRACKET:{value:219},BACKSLASH:{value:220},CLOSE_SQUARE_BRACKET:{value:221},SINGLE_QUOTE:{value:222}}),o=e.toEnum({}),i=e.toEnum({WHEEL:{value:-1},LEFT:{value:0},MIDDLE:{value:1},RIGHT:{value:2}}),u=e.toEnum({ArrayBuffer:{value:"arraybuffer"},Blob:{value:"blob"},Document:{value:"document"},Json:{value:"json"},DOMString:{value:"text"},Default:{value:""}});
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @class TCache
 * @classdesc TCache is a simple javascript object whose purpose is to store some ket/value data to future usage. It could be enable/disable.
 *
 * @example
 * var cache = new TCache()
 * cache.add( 'foo', 'bar' )
 * TLogger.log( cache.get('foo') ) // 'bar'
 */
class l{static _validate(e,s){for(let a=0,r=s.length;a<r;a++){let r=s[a];if(!r.validator(e)){const s=r.error;throw t.isString(s)?new TypeError(s):t.isFunction(s)?new TypeError(s(e)):new TypeError(`${e} is invalid.`)}}}constructor(e={}){const t={collection:{},allowOverride:!1,keyValidators:[],valueValidators:[],...e};this.collection=t.collection,this.allowOverride=t.allowOverride,this.keyValidators=t.keyValidators,this.valueValidators=t.valueValidators}get collection(){return this._collection}set collection(e){const s="Expect an object.";if(t.isNull(e))throw new TypeError(`Collection cannot be null ! ${s}`);if(t.isUndefined(e))throw new TypeError(`Collection cannot be undefined ! ${s}`);if(t.isNotObject(e))throw new TypeError(`Collection cannot be an instance of ${e.constructor.name} ! ${s}`);this._collection=e}get allowOverride(){return this._allowOverride}set allowOverride(e){const s="Expect a boolean.";if(t.isNull(e))throw new TypeError(`Allow override cannot be null ! ${s}`);if(t.isUndefined(e))throw new TypeError(`Allow override cannot be undefined ! ${s}`);if(t.isNotBoolean(e))throw new TypeError(`Allow override cannot be an instance of ${e.constructor.name} ! ${s}`);this._allowOverride=e}get keyValidators(){return this._keyValidators}set keyValidators(e){const s="Expect an array of TValidator or an empty array.";if(t.isNull(e))throw new TypeError(`Keys validators cannot be null ! ${s}`);if(t.isUndefined(e))throw new TypeError(`Keys validators cannot be undefined ! ${s}`);if(t.isNotArray(e))throw new TypeError(`Keys validators cannot be an instance of ${e.constructor.name} ! ${s}`);this._keyValidators=e}get valueValidators(){return this._valueValidators}set valueValidators(e){const s="Expect an array of TValidator or an empty array.";if(t.isNull(e))throw new TypeError(`Values validators cannot be null ! ${s}`);if(t.isUndefined(e))throw new TypeError(`Values validators cannot be undefined ! ${s}`);if(t.isNotArray(e))throw new TypeError(`Values validators cannot be an instance of ${e.constructor.name} ! ${s}`);this._valueValidators=e}get keys(){return Object.keys(this._collection)}get values(){return Object.values(this._collection)}setCollection(e){return this.collection=e,this}setAllowOverride(e){return this.allowOverride=e,this}setKeyValidators(e){return this.keyValidators(e),this}setValueValidators(e){return this.valueValidators(e),this}add(e,t,s=!1){if(this.contain(e)&&!this._allowOverride&&!s)throw new TypeError(`Item with key (${e}) already exist in collection !`);return l._validate(e,this._keyValidators),l._validate(t,this._valueValidators),this._collection[e]=t,this}contain(e){return t.isNotUndefined(this._collection[e])}get(e){return this._collection[e]}remove(e){return delete this._collection[e],this}clear(){return this._collection={},this}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class c extends l{constructor(e={}){super({...e})}create(e,...t){}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @class Todo...
 * @classdesc Todo...
 * @example Todo...
 *
 */
const h=e.toEnum({Console:1,Html:2,Toast:4,File:8,Database:16,All:255}),d=e.toEnum({Message:0,Progress:1,Time:2}),p=e.toEnum({None:0,Debug:1,Info:2,Warning:4,Error:8,All:255});class g{static _levelToString(e){let t="";switch(e){case p.Info:t="info";break;case p.Warning:t="warning";break;case p.Error:t="error";break;default:t="unknownLogLevel"}return t}constructor(e={}){const t={outputLevel:p.Error,outputs:h.Console,...e};this.outputLevel=t.outputLevel,this.outputs=t.outputs,this._logsArray=[],this._timers={},this._counterTrace=0}get outputLevel(){return this._outputLevel}set outputLevel(e){const s="Expect a value from LogLevel enum.";if(t.isNull(e))throw new Error(`OutputLevel cannot be null ! ${s}`);if(t.isUndefined(e))throw new Error(`OutputLevel cannot be undefined ! ${s}`);this._outputLevel=e}get outputs(){return this._outputs}set outputs(e){const s="Expect a value from LogOutput enum.";if(t.isNull(e))throw new Error(`Output cannot be null ! ${s}`);if(t.isUndefined(e))throw new Error(`Output cannot be undefined ! ${s}`);this._outputs=e}_formatTrace(e,s){const a=`${g._levelToString(e)}_${this._counterTrace}`;if(t.isString(s))this._logsArray[a]=s;else if(t.isObject(s))this._logsArray[a]=g._formatObjectError(s);else if(t.isArrayOfString(s))this._logsArray[a]=s.toString();else if(t.isArrayOfObject(s)){this._logsArray[a]="";for(let t=0,a=s.length;t<a;t++)this._formatTrace(e,s[t])}else this._logsArray[a]=s?s.toString():"Empty log data !";return this._counterTrace++,this._logsArray[a]}dispatch(e){const t=e.type;switch(t){case d.Message:this._dispatchMessage(e);break;case d.Progress:this._dispatchProgress(e);break;case d.Time:this._dispatchTime(e);break;default:throw new RangeError(`Invalid switch parameter: ${t}`)}}_dispatchMessage(e){const t=e.level,s=e.message;switch(t){case p.Error:this.outputLevel&p.Error&&this._dispatchErrorMessage(s);break;case p.Warning:this.outputLevel&p.Warning&&this._dispatchWarningMessage(s);break;case p.Info:this.outputLevel&p.Info&&this._dispatchInfoMessage(s);break;case p.Debug:this.outputLevel&p.Debug&&this._dispatchDebugMessage(s);break;default:throw new RangeError(`Invalid switch parameter: ${t}`)}}_dispatchErrorMessage(e){if(this.outputs&h.Console&&console.error(e),this.outputs&h.Html){const t=document.createElement("span");t.classList.add("log-error"),t.innerText=e,document.body.appendChild(t)}this.outputs,h.Toast,this.outputs,h.File,this.outputs,h.Database}_dispatchWarningMessage(e){if(this.outputs&h.Console&&console.warn(e),this.outputs&h.Html){const t=document.createElement("span");t.classList.add("log-warning"),t.innerText=e,document.body.appendChild(t)}this.outputs,h.Toast,this.outputs,h.File,this.outputs,h.Database}_dispatchInfoMessage(e){if(this.outputs&h.Console&&console.log(e),this.outputs&h.Html){const t=document.createElement("span");t.classList.add("log-info"),t.innerText=e,document.body.appendChild(t)}this.outputs,h.Toast,this.outputs,h.File,this.outputs,h.Database}_dispatchDebugMessage(e){if(this.outputs&h.Console&&console.log(e),this.outputs&h.Html){const t=document.createElement("span");t.classList.add("log-info"),t.innerText=e,document.body.appendChild(t)}this.outputs,h.Toast,this.outputs,h.File,this.outputs,h.Database}_dispatchProgress(e){const t=e.level;let s=e.message;switch(t){case p.Info:this.outputLevel&p.Info&&this._dispatchInfoProgress(s);break;case p.Debug:this.outputLevel&p.Debug&&this._dispatchDebugProgress(s);break;default:throw new RangeError(`Invalid progress level parameter: ${t}`)}}_dispatchInfoProgress(e){if(this.outputs&h.Console&&console.log(e),this.outputs&h.Html){const t=document.createElement("span");t.classList.add("log-info"),t.innerText=e,document.body.appendChild(t)}this.outputs,h.Toast,this.outputs,h.File,this.outputs,h.Database}_dispatchDebugProgress(e){if(this.outputs&h.Console&&console.log(e),this.outputs&h.Html){const t=document.createElement("span");t.classList.add("log-info"),t.innerText=e,document.body.appendChild(t)}this.outputs,h.Toast,this.outputs,h.File,this.outputs,h.Database}_dispatchTime(e){console.log(e.message)}debug(e){this.dispatch({type:d.Message,level:p.Debug,message:e})}log(e){this.dispatch({type:d.Message,level:p.Info,message:e})}warn(e){this.dispatch({type:d.Message,level:p.Warning,message:e})}error(e){this.dispatch({type:d.Message,level:p.Error,message:e})}progress(e){if(e.preventDefault(),e.cancelable&&e.stopImmediatePropagation(),e.lengthComputable){const t=e.type,s=e.loaded,a=e.total,r=`${t}: ${Math.round(s/a*1e4)/100}% [${s}/${a}]`;this.dispatch({type:d.Progress,level:p.Info,message:r})}}startChronoFor(e){this._timers[e]=(new Date).getTime()}stopChronoFor(e){const t=`${e} take ${(new Date).getTime()-this._timers[e]}ms.`;this.dispatch({type:d.Time,level:p.Debug,message:t})}setOutputLevel(e){return this.outputLevel=e,this}setOutput(e){return this.outputs=e,this}}const v=new g;
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * based on Lee Stemkoski work
 *
 * @class TFactory
 * @classdesc Todo...
 * @example Todo...
 * (1) create a global variable:
 *      var keyboard = new TKeyboardController();
 * (2) during main loop:
 *       keyboard.update();
 * (3) check state of keys:
 *       keyboard.down("A")    -- true for one update cycle after key is pressed
 *       keyboard.pressed("A") -- true as long as key is being pressed
 *       keyboard.up("A")      -- true for one update cycle after key is released
 *
 *  See TKeyboardController.k object data below for names of keys whose state can be polled
 *
 */class f{static keyName(e){return null!==f.k[e]?f.k[e]:String.fromCharCode(e)}static onKeyUp(e){var t=f.keyName(e.keyCode);f.status[t]&&(f.status[t].pressed=!1)}static onKeyDown(e){var t=f.keyName(e.keyCode);f.status[t]||(f.status[t]={down:!1,pressed:!1,up:!1,updatedPreviously:!1})}constructor(){document.addEventListener("keydown",f.onKeyDown,!1),document.addEventListener("keyup",f.onKeyUp,!1)}update(){for(var e in f.status)f.status[e].updatedPreviously?f.status[e].down=!1:(f.status[e].down=!0,f.status[e].pressed=!0,f.status[e].updatedPreviously=!0),f.status[e].up?delete f.status[e]:f.status[e].pressed||(f.status[e].up=!0)}down(e){return f.status[e]&&f.status[e].down}pressed(e){return f.status[e]&&f.status[e].pressed}up(e){return f.status[e]&&f.status[e].up}debug(){var e="Keys active: ";for(var t in f.status)e+=" "+t;v.log(e)}}f.k=n,f.status={};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @class Todo...
 * @classdesc Todo...
 * @example Todo...
 *
 */
const _=e.toEnum({Little:!0,Big:!1}),y=e.toEnum({One:1,Two:2,Four:4,Height:8});const b=new
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @class TDataBaseManager
 * @classdesc The base class of database managers. Give the basic interface about database call.
 *
 * @requires {@link HttpVerb}
 * @requires {@link ResponseType}
 * @requires {@link HttpStatusCode}
 * @requires {@link TOrchestrator}
 * @requires {@link TStore}
 *
 * @example Todo
 *
 */
class{constructor(){this._id=0}get id(){return this._id+=1,this._id}},m=e.toEnum({CreateOne:0,CreateMany:1,ReadOne:2,ReadMany:3,ReadWhere:4,ReadAll:5,UpdateOne:6,UpdateMany:7,UpdateWhere:8,UpdateAll:9,DeleteOne:10,DeleteMany:11,DeleteWhere:12,DeleteAll:13});class E{static get requestId(){return E._requestId++,E._requestId}constructor(e={}){const t={basePath:"/",responseType:u.Json,bunchSize:500,requestAggregationTime:200,requestsConcurrency:6,logger:v,...e};this.basePath=t.basePath,this.responseType=t.responseType,this.bunchSize=t.bunchSize,this.requestAggregationTime=t.requestAggregationTime,this.requestsConcurrency=t.requestsConcurrency,this.logger=t.logger,this._cache=new l,this._waitingQueue=[],this._aggregateQueue=[],this._requestQueue=[],this._processQueue=[],this._aggregationTimeoutId=null,this._idToRequest=[]}get basePath(){return this._basePath}set basePath(e){if(t.isNull(e))throw new TypeError("Base path cannot be null ! Expect a non empty string.");if(t.isUndefined(e))throw new TypeError("Base path cannot be undefined ! Expect a non empty string.");if(t.isNotString(e))throw new TypeError(`Base path cannot be an instance of ${e.constructor.name} ! Expect a non empty string.`);if(t.isEmptyString(e))throw new TypeError("Base path cannot be empty ! Expect a non empty string.");if(t.isBlankString(e))throw new TypeError("Base path cannot contain only whitespace ! Expect a non empty string.");this._basePath=e}get responseType(){return this._responseType}set responseType(e){if(t.isNull(e))throw new Error("TDataBaseManager: responseType cannot be null !");if(t.isNull(e))throw new TypeError("Response type cannot be null ! Expect a non empty string.");if(t.isUndefined(e))throw new TypeError("Response type cannot be undefined ! Expect a non empty string.");this._responseType=e}get bunchSize(){return this._bunchSize}set bunchSize(e){if(t.isNull(e))throw new TypeError("Bunch size cannot be null ! Expect a positive number.");if(t.isUndefined(e))throw new TypeError("Bunch size cannot be undefined ! Expect a positive number.");if(t.isNotNumber(e))throw new TypeError(`Bunch size cannot be an instance of ${e.constructor.name} ! Expect a positive number.`);if(!t.isNumberPositive(e))throw new TypeError("Bunch size cannot be lower or equal to zero ! Expect a positive number.");this._bunchSize=e}get requestAggregationTime(){return this._requestAggregationTime}set requestAggregationTime(e){if(t.isNull(e))throw new TypeError("Requests aggregation time cannot be null ! Expect a positive number.");if(t.isUndefined(e))throw new TypeError("Requests aggregation time cannot be undefined ! Expect a positive number.");if(t.isNotNumber(e))throw new TypeError(`Requests aggregation time cannot be an instance of ${e.constructor.name} ! Expect a positive number.`);if(t.isNumberNegative(e))throw new TypeError("Requests aggregation time cannot be lower or equal to zero ! Expect a positive number.");this._requestAggregationTime=e}get requestsConcurrency(){return this._requestsConcurrency}set requestsConcurrency(e){if(t.isNull(e))throw new TypeError("Minimum of simultaneous request cannot be null ! Expect a positive number.");if(t.isUndefined(e))throw new TypeError("Minimum of simultaneous request cannot be undefined ! Expect a positive number.");if(t.isNotNumber(e))throw new TypeError(`Minimum of simultaneous request cannot be an instance of ${e.constructor.name} ! Expect a positive number.`);if(t.isZero(e)||t.isNumberNegative(e))throw new TypeError("Minimum of simultaneous request cannot be lower or equal to zero ! Expect a positive number.");this._requestsConcurrency=e}get logger(){return this._logger}set logger(e){if(t.isNull(e))throw new TypeError("Progress manager cannot be null ! Expect an instance of TProgressManager.");if(t.isUndefined(e))throw new TypeError("Progress manager cannot be undefined ! Expect an instance of TProgressManager.");if(!(e instanceof g))throw new TypeError(`Progress manager cannot be an instance of ${e.constructor.name} ! Expect an instance of TProgressManager.`);this._logger=e}setBasePath(e){return this.basePath=e,this}setResponseType(e){return this.responseType=e,this}setBunchSize(e){return this.bunchSize=e,this}setRequestAggregationTime(e){return this.requestAggregationTime=e,this}setRequestsConcurrency(e){return this.requestsConcurrency=e,this}setLogger(e){return this.logger=e,this}aggregateQueue(){clearTimeout(this._aggregationTimeoutId),this._aggregationTimeoutId=setTimeout(()=>{const e=this._idToRequest;let t=[];for(let s=e.length-1;s>=0;s--)t.push(e.pop()),t.length!==this._bunchSize&&0!==s||(this._requestQueue.push({_id:`readMany_${b.id}`,_timeStart:new Date,_type:m.ReadMany,method:r.Read.value,url:this._basePath,data:{ids:t},responseType:this._responseType}),t=[]);this.processQueue.call(this)},this._requestAggregationTime)}processQueue(){for(;this._requestQueue.length>0&&this._processQueue.length<this._requestsConcurrency;){const n=this._requestQueue.pop();this._processQueue.push(n);const o=new XMLHttpRequest;o.onloadstart=e.bind(this),o.onload=this._onLoad.bind(this,n,this._onEnd.bind(this,n,n.onLoad),this._onProgress.bind(this,n.onProgress),this._onError.bind(this,n,n.onError)),o.onloadend=t.bind(this),o.onprogress=this._onProgress.bind(this,n.onProgress),o.onreadystatechange=s.bind(this),o.onabort=a.bind(this),o.onerror=this._onError.bind(this,n,n.onError),o.ontimeout=r.bind(this),o.open(n.method,n.url,!0),o.setRequestHeader("Content-Type","application/json"),o.setRequestHeader("Accept","application/json"),o.responseType=n.responseType.value;const i=n.data&&n.responseType===u.Json?JSON.stringify(n.data):n.data;o.send(i)}function e(e){this.logger.progress(e)}function t(e){this.logger.progress(e)}function s(e){this.logger.debug(e)}function a(e){this.logger.error(e)}function r(e){this.logger.error(e)}}create(e,s,a,r){t.isArray(e)&&t.isNotEmptyArray(e)?t.isArrayOfSingleElement(e)?this._createOne(e[0],s,a,r):this._createMany(e,s,a,r):t.isObject(e)&&t.isNotEmptyObject(e)?this._createOne(e,s,a,r):r("TDataBaseManager.create: Invalid data type, expect object or array of objects.")}read(e,s,a,r,n){t.isString(e)&&t.isNotEmptyString(e)&&t.isNotBlankString(e)?this._readOne(e,s,a,r,n):t.isArray(e)&&t.isNotEmptyArray(e)?t.isArrayOfSingleElement(e)?this._readOne(e[0],s,a,r,n):this._readMany(e,s,a,r,n):t.isObject(e)?t.isEmptyObject(e)?this._readAll(s,a,r,n):this._readWhere(e,s,a,r,n):n("TDataBaseManager.read: Invalid data type, expect string, object or array of objects.")}update(e,s,a,r,n){t.isNotDefined(s)?n("TDataBaseManager.update: Update data cannot be null or undefined !"):t.isNotObject(s)?n("TDataBaseManager.update: Invalid update data type. Expect an object."):t.isString(e)&&t.isNotEmptyString(e)&&t.isNotBlankString(e)?this._updateOne(e,s,a,r,n):t.isArray(e)&&t.isNotEmptyArray(e)?t.isArrayOfSingleElement(e)?this._updateOne(e[0],s,a,r,n):this._updateMany(e,s,a,r,n):t.isObject(e)?t.isEmptyObject(e)?this._updateAll(s,a,r,n):this._updateWhere(e,s,a,r,n):n("TDataBaseManager.update: Invalid data type, expect string, object or array of objects.")}delete(e,s,a,r){t.isString(e)&&t.isNotEmptyString(e)&&t.isNotBlankString(e)?this._deleteOne(e,s,a,r):t.isArray(e)&&t.isNotEmptyArray(e)?t.isArrayOfSingleElement(e)?this._deleteOne(e[0],s,a,r):this._deleteMany(e,s,a,r):t.isObject(e)?t.isEmptyObject(e)?this._deleteAll(s,a,r):this._deleteWhere(e,s,a,r):r("TDataBaseManager.delete: Invalid data type, expect null, string, object or array of objects.")}_onLoad(e,t,s,r,n){const o=n.target,i=o.status,u=o.response,l=o.responseType;switch(i){case a.Ok.value:this._dispatchResponse(u,l,t,s,r);break;case a.NonAuthoritativeInformation.value:case a.NoContent.value:case a.ResetContent.value:case a.PartialContent.value:case a.MultiStatus.value:case a.AlreadyReported.value:case a.ContentDifferent.value:case a.IMUsed.value:case a.MultipleChoices.value:case a.MovedPermanently.value:case a.Found.value:case a.SeeOther.value:case a.NotModified.value:case a.UseProxy.value:case a.Unused.value:case a.TemporaryRedirect.value:case a.PermanentRedirect.value:case a.TooManyRedirects.value:case a.BadRequest.value:case a.Unauthorized.value:case a.PaymentRequired.value:case a.Forbidden.value:case a.NotFound.value:case a.MethodNotAllowed.value:case a.NotAcceptable.value:case a.ProxyAuthenticationRequired.value:case a.RequestTimeOut.value:case a.Conflict.value:case a.Gone.value:case a.LengthRequired.value:case a.PreconditionFailed.value:case a.RequestEntityTooLarge.value:case a.RequestRangeUnsatisfiable.value:case a.ExpectationFailed.value:case a.ImATeapot.value:case a.BadMapping.value:case a.UnprocessableEntity.value:case a.Locked.value:case a.MethodFailure.value:case a.UnorderedCollection.value:case a.UpgradeRequired.value:case a.PreconditionRequired.value:case a.TooManyRequests.value:case a.RequestHeaderFieldsTooLarge.value:case a.NoResponse.value:case a.RetryWith.value:case a.BlockedByWindowsParentalControls.value:case a.UnavailableForLegalReasons.value:case a.UnrecoverableError.value:case a.SSLCertificateError.value:case a.SSLCertificateRequired.value:case a.HTTPRequestSentToHTTPSPort.value:case a.ClientClosedRequest.value:case a.InternalServerError.value:case a.NotImplemented.value:case a.BadGateway.value:case a.ServiceUnavailable.value:case a.GatewayTimeOut.value:case a.HTTPVersionNotSupported.value:case a.VariantAlsoNegotiates.value:case a.InsufficientStorage.value:case a.LoopDetected.value:case a.BandwidthLimitExceeded.value:case a.NotExtended.value:case a.NetworkAuthenticationRequired.value:case a.UnknownError.value:case a.WebServerIsDown.value:case a.ConnectionTimedOut.value:case a.OriginIsUnreachable.value:case a.ATimeoutOccured.value:case a.SSLHandshakeFailed.value:case a.InvalidSSLCertificate.value:case a.RailgunError.value:r(u);break;default:throw new RangeError(`Unmanaged HttpStatusCode: ${i}`)}}_onProgress(e,s){t.isDefined(this.logger)?this.logger.progress(s,e):t.isDefined(e)&&e(s)}_onError(e,s,a){this._closeRequest(e),t.isDefined(this.logger)?this.logger.error(a,s):t.isDefined(s)&&s(a)}_onEnd(e,t,s){const a=e._type;switch(a){case m.ReadOne:case m.ReadMany:this._updateCache(s),this._updateWaitingQueue();break;case m.ReadWhere:case m.ReadAll:this._updateCache(s),this._updateWaitingQueue(),t(s);break;case m.CreateOne:case m.CreateMany:case m.UpdateOne:case m.UpdateMany:case m.UpdateWhere:case m.UpdateAll:case m.DeleteOne:case m.DeleteMany:case m.DeleteWhere:case m.DeleteAll:t(s);break;default:throw new RangeError(`Invalid request type: ${a}`)}this._closeRequest(e)}_dispatchResponse(e,t,s,a,r){switch(t){case u.ArrayBuffer.value:this._onArrayBuffer(e,s,a,r);break;case u.Blob.value:this._onBlob(e,s,a,r);break;case u.Json.value:this._onJson(e,s,a,r);break;case u.DOMString.value:case u.Default.value:this._onText(e,s,a,r);break;default:throw new Error(`Unknown response type: ${t}`)}}_closeRequest(e){if(this._processQueue.splice(this._processQueue.indexOf(e),1),Window.Itee&&Window.Itee.Debug){const t=(new Date).valueOf()-e._timeStart.valueOf(),s=`${this.constructor.name} close request [${e._id}] on ${t}ms.`+`Waiting queue: ${this._waitingQueue.length}`+`Request queue: ${this._requestQueue.length}`+`Process queue: ${this._processQueue.length}`+"==========================";this.logger.debug(s)}this.processQueue()}_retrieveCachedValues(e){let s={},a=[],r=[];for(let n=0,o=e.length;n<o;n++){const o=e[n],i=this._cache.get(o);t.isDefined(i)?s[o]=i:t.isNull(i)?a.push(o):r.push(o)}return{results:s,underRequest:a,toRequest:r}}_updateCache(e){if(t.isNull(e))throw new TypeError("Data cannot be null ! Expect an array of object.");if(t.isUndefined(e))throw new TypeError("Data cannot be undefined ! Expect an array of object.");let s={};if(t.isArray(e))for(let t in e)s[e[t]._id]=e[t];else s=e;for(let[e,a]of Object.entries(s)){const s=this._cache.get(e);t.isNull(s)?this._cache.add(e,a,!0):t.isUndefined(s)?(this.logger.warn("Cache was not pre-allocated with null value."),this._cache.add(e,a)):this.logger.error("Cached value already exist !")}}_updateWaitingQueue(){const e=0===this._requestQueue.length&&0===this._processQueue.length;for(let s=this._waitingQueue.length-1;s>=0;s--){const a=this._waitingQueue[s];for(let e=a.underRequest.length-1;e>=0;e--){const s=a.underRequest[e],r=this._cache.get(s);t.isNotDefined(r)||(a.results[s]=r,a.underRequest.splice(a.underRequest.indexOf(s),1))}const r=0===a.underRequest.length;r?(this._waitingQueue.splice(s,1),a.onLoadCallback(a.results)):!r&&e&&(this.logger.warn("Incomplet demand but empty request/process queue"),this._waitingQueue.splice(s,1),a.onLoadCallback(a.results))}}_onArrayBuffer(e,t,s,a){}_onBlob(e,t,s,a){}_onJson(e,t,s,a){}_onText(e,t,s,a){}_createOne(e,t,s,a){this._requestQueue.push({_id:`createOne_${b.id}`,_timeStart:new Date,_type:m.CreateOne,method:r.Create.value,url:this._basePath,data:e,onLoad:t,onProgress:s,onError:a,responseType:this._responseType}),this.processQueue()}_createMany(e,t,s,a){this._requestQueue.push({_id:`createMany_${b.id}`,_timeStart:new Date,_type:m.CreateMany,method:r.Create.value,url:this._basePath,data:e,onLoad:t,onProgress:s,onError:a,responseType:this._responseType}),this.processQueue()}_readOne(e,t,s,a,r){const n=this._retrieveCachedValues([e]);if(0===n.toRequest.length)0===n.underRequest.length?s(n.results):(n.onLoadCallback=s,n.onProgressCallback=a,n.onErrorCallback=r,this._waitingQueue.push(n));else{n.onLoadCallback=s,n.onProgressCallback=a,n.onErrorCallback=r,this._waitingQueue.push(n);try{this._cache.add(e,null),n.underRequest.push(e),n.toRequest.splice(n.toRequest.indexOf(e),1)}catch(e){this.logger.error(e)}this._idToRequest.push(e),this.aggregateQueue()}}_readMany(e,t,s,a,r){const n=this._retrieveCachedValues(e);if(0===n.toRequest.length)0===n.underRequest.length?s(n.results):(n.onLoadCallback=s,n.onProgressCallback=a,n.onErrorCallback=r,this._waitingQueue.push(n));else{n.onLoadCallback=s,n.onProgressCallback=a,n.onErrorCallback=r,this._waitingQueue.push(n);const e=n.toRequest;let t=void 0;for(let s=e.length-1;s>=0;s--){t=e[s];try{this._cache.add(t,null),n.underRequest.push(t),n.toRequest.splice(n.toRequest.indexOf(t),1)}catch(e){this.logger.error(e)}this._idToRequest.push(t)}this.aggregateQueue()}}_readWhere(e,t,s,a,n){this._requestQueue.push({_id:`readWhere_${b.id}`,_timeStart:new Date,_type:m.ReadWhere,method:r.Read.value,url:this._basePath,data:{query:e,projection:t},onLoad:s,onProgress:a,onError:n,responseType:this._responseType}),this.processQueue()}_readAll(e,t,s,a){this._requestQueue.push({_id:`readAll_${b.id}`,_timeStart:new Date,_type:m.ReadAll,method:r.Read.value,url:this._basePath,data:{query:{},projection:e},onLoad:t,onProgress:s,onError:a,responseType:this._responseType}),this.processQueue()}_updateOne(e,t,s,a,n){this._requestQueue.push({_id:`updateOne_${b.id}`,_timeStart:new Date,_type:m.UpdateOne,method:r.Update.value,url:`${this._basePath}/${e}`,data:{update:t},onLoad:s,onProgress:a,onError:n,responseType:this._responseType}),this.processQueue()}_updateMany(e,t,s,a,n){this._requestQueue.push({_id:`updateMany_${b.id}`,_timeStart:new Date,_type:m.UpdateMany,method:r.Update.value,url:this._basePath,data:{ids:e,update:t},onLoad:s,onProgress:a,onError:n,responseType:this._responseType}),this.processQueue()}_updateWhere(e,t,s,a,n){this._requestQueue.push({_id:`updateWhere_${b.id}`,_timeStart:new Date,_type:m.UpdateWhere,method:r.Update.value,url:this._basePath,data:{query:e,update:t},onLoad:s,onProgress:a,onError:n,responseType:this._responseType}),this.processQueue()}_updateAll(e,t,s,a){this._requestQueue.push({_id:`updateAll_${b.id}`,_timeStart:new Date,_type:m.UpdateAll,method:r.Update.value,url:this._basePath,data:{query:{},update:e},onLoad:t,onProgress:s,onError:a,responseType:this._responseType}),this.processQueue()}_deleteOne(e,t,s,a){this._requestQueue.push({_id:`deleteOne_${b.id}`,_timeStart:new Date,_type:m.DeleteOne,method:r.Delete.value,url:`${this._basePath}/${e}`,data:null,onLoad:t,onProgress:s,onError:a,responseType:this._responseType}),this.processQueue()}_deleteMany(e,t,s,a){this._requestQueue.push({_id:`deleteMany_${b.id}`,_timeStart:new Date,_type:m.DeleteMany,method:r.Delete.value,url:this._basePath,data:{ids:e},onLoad:t,onProgress:s,onError:a,responseType:this._responseType}),this.processQueue()}_deleteWhere(e,t,s,a){this._requestQueue.push({_id:`deleteWhere_${b.id}`,_timeStart:new Date,_type:m.DeleteWhere,method:r.Delete.value,url:this._basePath,data:{query:e},onLoad:t,onProgress:s,onError:a,responseType:this._responseType}),this.processQueue()}_deleteAll(e,t,s){this._requestQueue.push({_id:`deleteAll_${b.id}`,_timeStart:new Date,_type:m.DeleteAll,method:r.Delete.value,url:this._basePath,data:{query:{}},onLoad:e,onProgress:t,onError:s,responseType:this._responseType}),this.processQueue()}}E._requestId=0,E._requests={waitingQueue:{},toProcess:{create:{},read:{},update:{},delete:{}},underProcess:{create:{},read:{},update:{},delete:{}},processed:{create:{},read:{},update:{},delete:{}}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
const w=Object.freeze(Object.defineProperties({},{Number:{value:0,enumerable:!0},String:{value:1,enumerable:!0},Uuid:{value:2,enumerable:!0},includes:{value:function(e){return Object.values(this).includes(e)}},types:{value:function(){return Object.keys(this)}}}));exports.Byte=y,exports.DefaultLogger=v,exports.Endianness=_,exports.FileFormat=s,exports.HttpStatusCode=a,exports.HttpVerb=r,exports.Keys=n,exports.MimeType=o,exports.Mouse=i,exports.ResponseType=u,exports.TAbstractFactory=c,exports.TBinaryReader=class{constructor(e={}){const t={buffer:new ArrayBuffer(0),offset:0,length:0,endianness:_.Little,...e};this.buffer=t.buffer,this.offset=t.offset,this.length=t.length,this.endianness=t.endianness,this._updateDataView()}get buffer(){return this._buffer}set buffer(e){const s="Expect an instance of ArrayBuffer.";if(t.isNull(e))throw new TypeError(`Buffer cannot be null ! ${s}`);if(t.isUndefined(e))throw new TypeError(`Buffer cannot be undefined ! ${s}`);if(t.isNotArrayBuffer(e))throw new TypeError(`Buffer cannot be an instance of ${e.constructor.name} ! ${s}`);this._buffer=e,this._offset=0,this._length=e.byteLength,this._updateDataView()}get offset(){return this._offset}set offset(e){const s="Expect a number.";if(t.isNull(e))throw new TypeError(`Offset cannot be null ! ${s}`);if(t.isUndefined(e))throw new TypeError(`Offset cannot be undefined ! ${s}`);if(t.isNotNumber(e))throw new TypeError(`Offset cannot be an instance of ${e.constructor.name} ! ${s}`);this._offset=e,this._updateDataView()}get length(){return this._length}set length(e){const s="Expect a number.";if(t.isNull(e))throw new TypeError(`Length cannot be null ! ${s}`);if(t.isUndefined(e))throw new TypeError(`Length cannot be undefined ! ${s}`);if(t.isNotNumber(e))throw new TypeError(`Length cannot be an instance of ${e.constructor.name} ! ${s}`);this._length=e,this._updateDataView()}get endianness(){return this._endianness}set endianness(e){const s="Expect a boolean.";if(t.isNull(e))throw new TypeError(`Endianness cannot be null ! ${s}`);if(t.isUndefined(e))throw new TypeError(`Endianness cannot be undefined ! ${s}`);if(t.isNotBoolean(e))throw new TypeError(`Endianness cannot be an instance of ${e.constructor.name} ! ${s}`);this._endianness=e}setBuffer(e,t,s){return this.buffer=e,this.offset=t||0,this.length=s||e.byteLength,this}setOffset(e){return this.offset=e,this}setLength(e){return this.length=e,this}setEndianess(e){return this.endianness=e,this}_getAndUpdateOffsetBy(e){const t=this._offset;return this._offset+=e,t}_updateDataView(){this._dataView=new DataView(this._buffer,this._offset,this._length)}isEndOfFile(){return this._offset===this._length}skipOffsetTo(e){return this._offset=e,this}skipOffsetOf(e){return this._offset+=e,this}getBoolean(){return 1==(1&this.getUint8())}getBooleanArray(e){const t=[];for(let s=0;s<e;s++)t.push(this.getBoolean());return t}getInt8(){return this._dataView.getInt8(this._getAndUpdateOffsetBy(y.One))}getInt8Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getInt8());return t}getUint8(){return this._dataView.getUint8(this._getAndUpdateOffsetBy(y.One))}getUint8Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getUint8());return t}getInt16(){return this._dataView.getInt16(this._getAndUpdateOffsetBy(y.Two),this._endianness)}getInt16Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getInt16());return t}getUint16(){return this._dataView.getUint16(this._getAndUpdateOffsetBy(y.Two),this._endianness)}getUint16Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getUint16());return t}getInt32(){return this._dataView.getInt32(this._getAndUpdateOffsetBy(y.Four),this._endianness)}getInt32Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getInt32());return t}getUint32(){return this._dataView.getUint32(this._getAndUpdateOffsetBy(y.Four),this._endianness)}getUint32Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getUint32());return t}getInt64(){let e=null,t=null;return this._endianness===_.Little?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),2147483648&t?(t=4294967295&~t,e=4294967295&~e,4294967295===e&&(t=t+1&4294967295),e=e+1&4294967295,-(4294967296*t+e)):4294967296*t+e}getInt64Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getInt64());return t}getUint64(){let e=null,t=null;return this._endianness===_.Little?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),4294967296*t+e}getUint64Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getUint64());return t}getFloat32(){return this._dataView.getFloat32(this._getAndUpdateOffsetBy(y.Four),this._endianness)}getFloat32Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getFloat32());return t}getFloat64(){return this._dataView.getFloat64(this._getAndUpdateOffsetBy(y.Height),this._endianness)}getFloat64Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getFloat64());return t}getChar(){return String.fromCharCode(this.getUint8())}getString(e,t=!0){let s="",a=null;for(let t=0;t<e;t++)a=this.getUint8(),0!==a&&(s+=String.fromCharCode(a));return t&&(s=s.trim()),s}getArrayBuffer(e){const t=this._getAndUpdateOffsetBy(e);return this._dataView.buffer.slice(t,t+e)}},exports.TCloningFactory=class extends c{constructor(e={}){super({...e})}create(e,...t){return super.create(e,...t),this.get(e).clone(...t)}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */,exports.TDataBaseManager=E,exports.TIdFactory=class{constructor(e=w.Number,t=null){this.type=e,this.base=t,this._counter=0}get type(){return this._type}set type(e){if(t.isNull(e))throw new Error(`Type cannot be null ! Expect an value from TIdFactoryType enum: ${w.types()}`);if(t.isUndefined(e))throw new Error(`Type cannot be undefined ! Expect an value from TIdFactoryType enum: ${w.types()}`);if(!w.includes(e))throw new Error(`Invalide type ! Expect an value from TIdFactoryType enum: ${w.types()}`);this._type=e}get base(){return this._base}set base(e){if(t.isUndefined(e))throw new Error("Base cannot be undefined ! Expect an instance of Object3D.");if(this._type===w.Number&&t.isNotNumber(e))throw new Error("Invalide Base ! It does not match the type.");if(this._type===w.String&&t.isNotString(e))throw new Error("Invalide Base ! It does not match the type.");this._base=e}setType(e){return this.type=e,this}setBase(e){return this.base=e,this}createId(){return this._base+this._counter++}},exports.TIdFactoryType=w,exports.TInstancingFactory=class extends c{constructor(e={}){super({...e})}create(e,...t){return super.create(e,...t),new this.get(e)(...t)}},exports.TKeyboardController=f,exports.TLogger=g,exports.TMouseController=
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @class Todo...
 * @classdesc Todo...
 * @example Todo...
 *
 */
class{constructor(){}},exports.TStore=l;
//# sourceMappingURL=itee-client.cjs.min.js.map
