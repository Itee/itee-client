{"version":3,"file":"itee-client.esm.min.js","sources":["../sources/cores/TConstants.js","../sources/cores/TStore.js","../sources/cores/TAbstractFactory.js","../sources/cores/TCloningFactory.js","../sources/cores/TInstancingFactory.js","../sources/loggers/TLogger.js","../sources/input_devices/TKeyboardController.js","../sources/input_devices/TMouseController.js","../sources/loaders/TBinaryReader.js","../sources/managers/TDataBaseManager.js","../sources/utils/TIdFactory.js"],"sourcesContent":["/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @class ClassName\r\n * @classdesc Todo...\r\n * @example Todo...\r\n *\r\n */\r\n/**\r\n * A freezed javascript object used like an enum.\r\n * @typedef {object} Enum\r\n * @example\r\n * const Foo = Object.freeze( {\r\n *     Bar: 0,\r\n *     Baz: 1,\r\n *     Qux: 3\r\n * } )\r\n */\r\n\r\nimport { toEnum } from 'itee-utils'\r\n\r\n/**\r\n * The FileFormat Enum give some commonly used file format in 3d context\r\n * @type {Enum}\r\n */\r\nconst FileFormat = toEnum( {\r\n    Asc:  { value: 'asc' },\r\n    Dae:  { value: 'dae' },\r\n    Dbf:  { value: 'dbf' },\r\n    Fbx:  { value: 'fbx' },\r\n    Mtl:  { value: 'mtl' },\r\n    Json: { value: 'json' },\r\n    Obj:  { value: 'obj' },\r\n    Shp:  { value: 'shp' },\r\n    Stl:  { value: 'stl' }\r\n} )\r\n\r\n/**\r\n * @typedef {Enum} HttpStatusCode\r\n * @property {number} Continue=100 - Waiting for the continuation of the request.\r\n * @property {number} SwitchingProtocols=101 - The requester has asked the server to switch protocols and the server has agreed to do so.\r\n * @property {number} Processing=102 - WebDAV: Processing in progress (prevents the client from exceeding the limited waiting time).\r\n * @property {number} Ok=200 - Query successfully processed.\r\n * @property {number} Created=201 - Query successfully processed and a document was created.\r\n * @property {number} Accepted=202 - Query processed, but without guarantee of result.\r\n * @property {number} NonAuthoritativeInformation=203 - Information returned, but generated by an uncertified source.\r\n * @property {number} NoContent=204 - Query successfully processed but no information returned.\r\n * @property {number} ResetContent=205 - Query successfully processed, the current page can be cleared.\r\n * @property {number} PartialContent=206 - Only part of the resource has been transmitted.\r\n * @property {number} MultiStatus=207 - WebDAV: Multiple Response.\r\n * @property {number} AlreadyReported=208 - WebDAV: The document was previously sent to this collection.\r\n * @property {number} ContentDifferent=210 - WebDAV: The copy of the client-side resource differs from that of the server (content or properties).\r\n * @property {number} IMUsed=226 - The server has completed the request for the resource, and the response is a representation of the result of one or more instance manipulations applied to the\r\n *     current instance.\r\n * @property {number} MultipleChoices=300 - The requested URI refers to multiple resources.\r\n * @property {number} MovedPermanently=301 - Document moved permanently.\r\n * @property {number} Found=302 - Document moved temporarily.\r\n * @property {number} SeeOther=303 - The answer to this query is elsewhere.\r\n * @property {number} NotModified=304 - Document not modified since the last request.\r\n * @property {number} UseProxy=305 - The request must be re-addressed to the proxy.\r\n * @property {number} Unused=306 - Code used by an older version of RFC 2616, now reserved.\r\n * @property {number} TemporaryRedirect=307 - The request must be temporarily redirected to the specified URI.\r\n * @property {number} PermanentRedirect=308 - The request must be redirected permanently to the specified URI.\r\n * @property {number} TooManyRedirects=310 - The request must be redirected too many times, or is the victim of a redirection loop.\r\n * @property {number} BadRequest=400 - The syntax of the query is wrong.\r\n * @property {number} Unauthorized=401 - Authentication is required to access the resource.\r\n * @property {number} PaymentRequired=402 - Payment required to access the resource.\r\n * @property {number} Forbidden=403 - The server understood the request, but refuses to execute it. Unlike error 401, authenticating will not make any difference. On servers where authentication is\r\n *     required, this usually means that authentication has been accepted but access rights do not allow the client to access the resource.\r\n * @property {number} NotFound=404 - Resource not found.\r\n * @property {number} MethodNotAllowed=405 - Unauthorized request method.\r\n * @property {number} NotAcceptable=406 - The requested resource is not available in a format that would respect the \"Accept\" headers of the request.\r\n * @property {number} ProxyAuthenticationRequired=407 - Access to the authorized resource by identification with the proxy.\r\n * @property {number} RequestTimeOut=408 - Waiting time for an elapsed client request.\r\n * @property {number} Conflict=409 - The request can not be processed in the current state.\r\n * @property {number} Gone=410 - The resource is no longer available and no redirection address is known.\r\n * @property {number} LengthRequired=411 - The length of the request has not been specified.\r\n * @property {number} PreconditionFailed=412 - Preconditions sent by the query unverified.\r\n * @property {number} RequestEntityTooLarge=413 - Abandoned processing due to excessive request\r\n * @property {number} RequestURITooLong=414 - URI too long\r\n * @property {number} UnsupportedMediaType=415 - Unsupported query format for a given method and resource.\r\n * @property {number} RequestRangeUnsatisfiable=416 - Invalid \"range\" request header fields.\r\n * @property {number} ExpectationFailed=417 - Expected behavior and defined in the header of the unsatisfactory request.\r\n * @property {number} ImATeapot=418 - \"I am a teapot\". This code is defined in RFC 2324 dated April 1, 1998, Hyper Text Coffee Pot Control Protocol.\r\n * @property {number} BadMapping=421 - The request was sent to a server that is not able to produce a response (for example, because a connection has been reused).\r\n * @property {number} UnprocessableEntity=422 - WebDAV: The entity provided with the request is incomprehensible or incomplete.\r\n * @property {number} Locked=423 - WebDAV: The operation can not take place because the resource is locked.\r\n * @property {number} MethodFailure=424 - WebDAV: A method of the transaction failed.\r\n * @property {number} UnorderedCollection=425 - WebDAV RFC 3648. This code is defined in the WebDAV Advanced Collections Protocol draft , but is absent from the Web Distributed Authoring and\r\n *     Versioning (WebDAV) Ordered Collections Protocol.\r\n * @property {number} UpgradeRequired=426 - RFC 2817 The client should change protocol, for example to TLS / 1.0 .\r\n * @property {number} PreconditionRequired=428 - RFC 6585 The request must be conditional.\r\n * @property {number} TooManyRequests=429 - RFC 6585 The client has issued too many requests within a given time.\r\n * @property {number} RequestHeaderFieldsTooLarge=431 - RFC 6585 HTTP headers issued exceed the maximum size allowed by the server.\r\n * @property {number} NoResponse=444 - Indicates that the server did not return any information to the client and closed the connection.\r\n * @property {number} RetryWith=449 - Code defined by Microsoft . The request should be returned after performing an action.\r\n * @property {number} BlockedByWindowsParentalControls=450 - Code defined by Microsoft. This error is generated when Windows Parental Control tools are enabled and block access to the page.\r\n * @property {number} UnavailableForLegalReasons=451 - This error code indicates that the requested resource is inaccessible for legal reasons\r\n * @property {number} UnrecoverableError=456 - WebDAV: Fatal error.\r\n * @property {number} SSLCertificateError=495 - An extension of the 400 Bad Request error, used when the client provided an invalid certificate.\r\n * @property {number} SSLCertificateRequired=496 - An extension of the 400 Bad Request error, used when a required client certificate is not provided.\r\n * @property {number} HTTPRequestSentToHTTPSPort=497 - An extension of the 400 Bad Request error, used when the client sends an HTTP request to port 443 normally intended for HTTPS requests.\r\n * @property {number} ClientClosedRequest=499 - The client closed the connection before receiving the response. This error occurs when the processing is too long on the server side.\r\n * @property {number} InternalServerError=500 - Internal server error.\r\n * @property {number} NotImplemented=501 - Functionality claimed not supported by the server.\r\n * @property {number} BadGateway=502 - Wrong response sent to an intermediate server by another server.\r\n * @property {number} ServiceUnavailable=503 - Service temporarily unavailable or under maintenance.\r\n * @property {number} GatewayTimeOut=504 - Waiting time for a response from a server to an intermediate server that has elapsed.\r\n * @property {number} HTTPVersionNotSupported=505 - HTTP version not managed by the server.\r\n * @property {number} VariantAlsoNegotiates=506 - RFC 2295: Negotiation Error. Transparent content negociation.\r\n * @property {number} InsufficientStorage=507 - WebDAV: Insufficient space to modify properties or build the collection.\r\n * @property {number} LoopDetected=508 - WebDAV: Loop in a Resource Match\r\n * @property {number} BandwidthLimitExceeded=509 - Used by many servers to indicate a quota overrun.\r\n * @property {number} NotExtended=510 - RFC 2774: The request does not respect the policy for accessing extended HTTP resources.\r\n * @property {number} NetworkAuthenticationRequired=511 - RFC 6585: The client must authenticate to access the network. Used by captive portals to redirect clients to the authentication page.\r\n * @property {number} UnknownError=520 - Error 520 is used as a wildcard response when the origin server returns an unexpected result.\r\n * @property {number} WebServerIsDown=521 - The server has refused the connection from Cloudflare.\r\n * @property {number} ConnectionTimedOut=522 - Cloudflare could not negotiate a TCP handshake with the origin server.\r\n * @property {number} OriginIsUnreachable=523 - Cloudflare failed to reach the origin server. This can occur if DNS server name resolution fails.\r\n * @property {number} ATimeoutOccured=524 - Cloudflare established a TCP connection with the origin server but did not receive an HTTP response before the login timeout.\r\n * @property {number} SSLHandshakeFailed=525 - Cloudflare could not negotiate SSL / TLS handshake with the origin server.\r\n * @property {number} InvalidSSLCertificate=526 - Cloudflare could not validate the SSL certificate presented by the origin server.\r\n * @property {number} RailgunError=527 - Error 527 indicates that the request has timed out or failed after the WAN connection was established.\r\n *\r\n * @constant\r\n * @type {HttpStatusCode}\r\n * @description HttpStatusCode contains all http status code available to check and process correctly server response.\r\n * @see {@link https://en.wikipedia.org/wiki/List_of_HTTP_status_codes} for further information.\r\n */\r\nconst HttpStatusCode = toEnum( {\r\n\r\n    // 100\r\n    Continue:           { value: 100 },\r\n    SwitchingProtocols: { value: 101 },\r\n    Processing:         { value: 102 },\r\n\r\n    // 200\r\n    Ok:                          { value: 200 },\r\n    Created:                     { value: 201 },\r\n    Accepted:                    { value: 202 },\r\n    NonAuthoritativeInformation: { value: 203 },\r\n    NoContent:                   { value: 204 },\r\n    ResetContent:                { value: 205 },\r\n    PartialContent:              { value: 206 },\r\n    MultiStatus:                 { value: 207 },\r\n    AlreadyReported:             { value: 208 },\r\n    ContentDifferent:            { value: 210 },\r\n    IMUsed:                      { value: 226 },\r\n\r\n    // 300\r\n    MultipleChoices:   { value: 300 },\r\n    MovedPermanently:  { value: 301 },\r\n    Found:             { value: 302 },\r\n    SeeOther:          { value: 303 },\r\n    NotModified:       { value: 304 },\r\n    UseProxy:          { value: 305 },\r\n    Unused:            { value: 306 },\r\n    TemporaryRedirect: { value: 307 },\r\n    PermanentRedirect: { value: 308 },\r\n    TooManyRedirects:  { value: 310 },\r\n\r\n    // 400\r\n    BadRequest:                       { value: 400 },\r\n    Unauthorized:                     { value: 401 },\r\n    PaymentRequired:                  { value: 402 },\r\n    Forbidden:                        { value: 403 },\r\n    NotFound:                         { value: 404 },\r\n    MethodNotAllowed:                 { value: 405 },\r\n    NotAcceptable:                    { value: 406 },\r\n    ProxyAuthenticationRequired:      { value: 407 },\r\n    RequestTimeOut:                   { value: 408 },\r\n    Conflict:                         { value: 409 },\r\n    Gone:                             { value: 410 },\r\n    LengthRequired:                   { value: 411 },\r\n    PreconditionFailed:               { value: 412 },\r\n    RequestEntityTooLarge:            { value: 413 },\r\n    RequestRangeUnsatisfiable:        { value: 416 },\r\n    ExpectationFailed:                { value: 417 },\r\n    ImATeapot:                        { value: 418 },\r\n    BadMapping:                       { value: 421 },\r\n    UnprocessableEntity:              { value: 422 },\r\n    Locked:                           { value: 423 },\r\n    MethodFailure:                    { value: 424 },\r\n    UnorderedCollection:              { value: 425 },\r\n    UpgradeRequired:                  { value: 426 },\r\n    PreconditionRequired:             { value: 428 },\r\n    TooManyRequests:                  { value: 429 },\r\n    RequestHeaderFieldsTooLarge:      { value: 431 },\r\n    NoResponse:                       { value: 444 },\r\n    RetryWith:                        { value: 449 },\r\n    BlockedByWindowsParentalControls: { value: 450 },\r\n    UnavailableForLegalReasons:       { value: 451 },\r\n    UnrecoverableError:               { value: 456 },\r\n    SSLCertificateError:              { value: 495 },\r\n    SSLCertificateRequired:           { value: 496 },\r\n    HTTPRequestSentToHTTPSPort:       { value: 497 },\r\n    ClientClosedRequest:              { value: 499 },\r\n\r\n    // 500\r\n    InternalServerError:           { value: 500 },\r\n    NotImplemented:                { value: 501 },\r\n    BadGateway:                    { value: 502 },\r\n    ServiceUnavailable:            { value: 503 },\r\n    GatewayTimeOut:                { value: 504 },\r\n    HTTPVersionNotSupported:       { value: 505 },\r\n    VariantAlsoNegotiates:         { value: 506 },\r\n    InsufficientStorage:           { value: 507 },\r\n    LoopDetected:                  { value: 508 },\r\n    BandwidthLimitExceeded:        { value: 509 },\r\n    NotExtended:                   { value: 510 },\r\n    NetworkAuthenticationRequired: { value: 511 },\r\n    UnknownError:                  { value: 520 },\r\n    WebServerIsDown:               { value: 521 },\r\n    ConnectionTimedOut:            { value: 522 },\r\n    OriginIsUnreachable:           { value: 523 },\r\n    ATimeoutOccured:               { value: 524 },\r\n    SSLHandshakeFailed:            { value: 525 },\r\n    InvalidSSLCertificate:         { value: 526 },\r\n    RailgunError:                  { value: 527 }\r\n\r\n} )\r\n\r\n/**\r\n * @typedef {Enum} HttpVerb\r\n * @property {string} Create=\"PUT\" - Corresponding to the create http verb for an itee server, namely \"PUT\".\r\n * @property {string} Read=\"POST\" - Corresponding to the read http verb for an itee server, namely \"POST\".\r\n * @property {string} Update=\"PATCH\" - Corresponding to the update http verb for an itee server, namely \"PATCH\".\r\n * @property {string} Delete=\"DELETE\" - Corresponding to the delete http verb for an itee server, namely \"DELETE\".\r\n *\r\n * @constant\r\n * @type {HttpVerb}\r\n * @description HttpVerb contains the CRUD actions with corresponding http verb to request an itee server.\r\n * @see {@link https://en.wikipedia.org/wiki/Create,_read,_update_and_delete} for further information.\r\n */\r\nconst HttpVerb = toEnum( {\r\n    Create: { value: 'PUT' },\r\n    Read:   { value: 'POST' },\r\n    Update: { value: 'PATCH' },\r\n    Delete: { value: 'DELETE' }\r\n} )\r\n\r\n/**\r\n * The Keys Enum give the associated key_code\r\n * @type {Enum}\r\n */\r\nconst Keys = toEnum( {\r\n    BACKSPACE:            { value: 8 },\r\n    TAB:                  { value: 9 },\r\n    ENTER:                { value: 13 },\r\n    SHIFT:                { value: 16 },\r\n    CTRL:                 { value: 17 },\r\n    ALT:                  { value: 18 },\r\n    PAUSE:                { value: 19 },\r\n    CAPS_LOCK:            { value: 20 },\r\n    ESCAPE:               { value: 27 },\r\n    SPACE:                { value: 32 },\r\n    PAGE_UP:              { value: 33 },\r\n    PAGE_DOWN:            { value: 34 },\r\n    END:                  { value: 35 },\r\n    HOME:                 { value: 36 },\r\n    LEFT_ARROW:           { value: 37 },\r\n    UP_ARROW:             { value: 38 },\r\n    RIGHT_ARROW:          { value: 39 },\r\n    DOWN_ARROW:           { value: 40 },\r\n    INSERT:               { value: 45 },\r\n    DELETE:               { value: 46 },\r\n    ZERO:                 { value: 48 },\r\n    ONE:                  { value: 49 },\r\n    TWO:                  { value: 50 },\r\n    THREE:                { value: 51 },\r\n    FOUR:                 { value: 52 },\r\n    FIVE:                 { value: 53 },\r\n    SIX:                  { value: 54 },\r\n    SEVEN:                { value: 55 },\r\n    HEIGHT:               { value: 56 },\r\n    NINE:                 { value: 57 },\r\n    A:                    { value: 65 },\r\n    B:                    { value: 66 },\r\n    C:                    { value: 67 },\r\n    D:                    { value: 68 },\r\n    E:                    { value: 69 },\r\n    F:                    { value: 70 },\r\n    G:                    { value: 71 },\r\n    H:                    { value: 72 },\r\n    I:                    { value: 73 },\r\n    J:                    { value: 74 },\r\n    K:                    { value: 75 },\r\n    L:                    { value: 76 },\r\n    M:                    { value: 77 },\r\n    N:                    { value: 78 },\r\n    O:                    { value: 79 },\r\n    P:                    { value: 80 },\r\n    Q:                    { value: 81 },\r\n    R:                    { value: 82 },\r\n    S:                    { value: 83 },\r\n    T:                    { value: 84 },\r\n    U:                    { value: 85 },\r\n    V:                    { value: 86 },\r\n    W:                    { value: 87 },\r\n    X:                    { value: 88 },\r\n    Y:                    { value: 89 },\r\n    Z:                    { value: 90 },\r\n    LEFT_WINDOW_KEY:      { value: 91 },\r\n    RIGHT_WINDOW_KEY:     { value: 92 },\r\n    SELECT_KEY:           { value: 93 },\r\n    NUMPAD_0:             { value: 96 },\r\n    NUMPAD_1:             { value: 97 },\r\n    NUMPAD_2:             { value: 98 },\r\n    NUMPAD_3:             { value: 99 },\r\n    NUMPAD_4:             { value: 100 },\r\n    NUMPAD_5:             { value: 101 },\r\n    NUMPAD_6:             { value: 102 },\r\n    NUMPAD_7:             { value: 103 },\r\n    NUMPAD_8:             { value: 104 },\r\n    NUMPAD_9:             { value: 105 },\r\n    MULTIPLY:             { value: 106 },\r\n    ADD:                  { value: 107 },\r\n    SUBSTRACT:            { value: 109 },\r\n    DECIMAL_POINT:        { value: 110 },\r\n    DIVIDE:               { value: 111 },\r\n    F1:                   { value: 112 },\r\n    F2:                   { value: 113 },\r\n    F3:                   { value: 114 },\r\n    F4:                   { value: 115 },\r\n    F5:                   { value: 116 },\r\n    F6:                   { value: 117 },\r\n    F7:                   { value: 118 },\r\n    F8:                   { value: 119 },\r\n    F9:                   { value: 120 },\r\n    F10:                  { value: 121 },\r\n    F11:                  { value: 122 },\r\n    F12:                  { value: 123 },\r\n    NUM_LOCK:             { value: 144 },\r\n    SCROLL_LOCK:          { value: 145 },\r\n    SEMICOLON:            { value: 186 },\r\n    EQUAL:                { value: 187 },\r\n    COMMA:                { value: 188 },\r\n    DASH:                 { value: 189 },\r\n    PERIODE:              { value: 190 },\r\n    SLASH:                { value: 191 },\r\n    GRAVE_ACCENT:         { value: 192 },\r\n    OPEN_SQUARE_BRACKET:  { value: 219 },\r\n    BACKSLASH:            { value: 220 },\r\n    CLOSE_SQUARE_BRACKET: { value: 221 },\r\n    SINGLE_QUOTE:         { value: 222 }\r\n} )\r\n\r\n// Todo\r\nconst MimeType = toEnum( {} )\r\n\r\n/**\r\n * This Enum expose 4 common state of mouse button.\r\n * Wheel, Left, Middle and Right\r\n * @type {Enum}\r\n */\r\nconst Mouse = toEnum( {\r\n    WHEEL:  { value: -1 },\r\n    LEFT:   { value: 0 },\r\n    MIDDLE: { value: 1 },\r\n    RIGHT:  { value: 2 }\r\n} )\r\n\r\n/**\r\n * @typedef {Enum} ResponseType\r\n * @property {string} ArrayBuffer=\"arraybuffer\" - The \"arraybuffer\" server response type.\r\n * @property {string} Blob=\"blob\" - The \"blob\" server response type.\r\n * @property {string} Document=\"document\" - The \"document\" server response type.\r\n * @property {string} Json=\"json\" - The \"json\" server response type.\r\n * @property {string} DOMString=\"text\" - The \"text\" server response type.\r\n * @property {string} Default=\"text\" - The \"\" server response type ( equivalent to DOMString ).\r\n *\r\n * @constant\r\n * @type {ResponseType}\r\n * @description ResponseType allow to filter wich type of response is recieved from the server.\r\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType} for further information.\r\n */\r\nconst ResponseType = toEnum( {\r\n    ArrayBuffer: { value: 'arraybuffer' },\r\n    Blob:        { value: 'blob' },\r\n    Document:    { value: 'document' },\r\n    Json:        { value: 'json' },\r\n    DOMString:   { value: 'text' },\r\n    Default:     { value: '' }\r\n} )\r\n\r\nexport {\r\n    FileFormat,\r\n    HttpStatusCode,\r\n    HttpVerb,\r\n    Keys,\r\n    MimeType,\r\n    Mouse,\r\n    ResponseType\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @class TCache\r\n * @classdesc TCache is a simple javascript object whose purpose is to store some ket/value data to future usage. It could be enable/disable.\r\n *\r\n * @example\r\n * var cache = new TCache()\r\n * cache.add( 'foo', 'bar' )\r\n * TLogger.log( cache.get('foo') ) // 'bar'\r\n */\r\n\r\nimport {\r\n    isFunction,\r\n    isNotArray,\r\n    isNotBoolean,\r\n    isNotObject,\r\n    isNotUndefined,\r\n    isNull,\r\n    isString,\r\n    isUndefined\r\n} from 'itee-validators'\r\n\r\n/**\r\n * @class Super class cache!\r\n */\r\nclass TStore {\r\n\r\n    static _validate ( value, validators ) {\r\n\r\n        for ( let validatorIndex = 0, numberOfValidators = validators.length ; validatorIndex < numberOfValidators ; validatorIndex++ ) {\r\n\r\n            let validator = validators[ validatorIndex ]\r\n\r\n            if ( !validator.validator( value ) ) {\r\n\r\n                const error = validator.error\r\n                if ( isString( error ) ) {\r\n                    throw new TypeError( error )\r\n                } else if ( isFunction( error ) ) {\r\n                    throw new TypeError( error( value ) )\r\n                } else {\r\n                    throw new TypeError( `${value} is invalid.` )\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor ( parameters = {} ) {\r\n\r\n        const _parameters = {\r\n            ...{\r\n                collection:      {},\r\n                allowOverride:   false,\r\n                keyValidators:   [],\r\n                valueValidators: []\r\n            }, ...parameters\r\n        }\r\n\r\n        this.collection      = _parameters.collection\r\n        this.allowOverride   = _parameters.allowOverride\r\n        this.keyValidators   = _parameters.keyValidators\r\n        this.valueValidators = _parameters.valueValidators\r\n\r\n    }\r\n\r\n    get collection () {\r\n\r\n        return this._collection\r\n\r\n    }\r\n\r\n    set collection ( value ) {\r\n\r\n        const memberName = 'Collection'\r\n        const expect     = 'Expect an object.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotObject( value ) ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._collection = value\r\n\r\n    }\r\n\r\n    get allowOverride () {\r\n\r\n        return this._allowOverride\r\n\r\n    }\r\n\r\n    set allowOverride ( value ) {\r\n\r\n        const memberName = 'Allow override'\r\n        const expect     = 'Expect a boolean.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotBoolean( value ) ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._allowOverride = value\r\n\r\n    }\r\n\r\n    get keyValidators () {\r\n\r\n        return this._keyValidators\r\n\r\n    }\r\n\r\n    set keyValidators ( value ) {\r\n\r\n        const memberName = 'Keys validators'\r\n        const expect     = 'Expect an array of TValidator or an empty array.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotArray( value ) ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._keyValidators = value\r\n\r\n    }\r\n\r\n    get valueValidators () {\r\n        return this._valueValidators\r\n    }\r\n\r\n    set valueValidators ( value ) {\r\n\r\n        const memberName = 'Values validators'\r\n        const expect     = 'Expect an array of TValidator or an empty array.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotArray( value ) ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._valueValidators = value\r\n\r\n    }\r\n\r\n    get keys () {\r\n\r\n        return Object.keys( this._collection )\r\n\r\n    }\r\n\r\n    get values () {\r\n\r\n        return Object.values( this._collection )\r\n\r\n    }\r\n\r\n    setCollection ( value ) {\r\n\r\n        this.collection = value\r\n        return this\r\n\r\n    }\r\n\r\n    setAllowOverride ( value ) {\r\n\r\n        this.allowOverride = value\r\n        return this\r\n\r\n    }\r\n\r\n    setKeyValidators ( value ) {\r\n\r\n        this.keyValidators( value )\r\n        return this\r\n\r\n    }\r\n\r\n    setValueValidators ( value ) {\r\n\r\n        this.valueValidators( value )\r\n        return this\r\n\r\n    }\r\n\r\n    /**\r\n     * Allow to add new key value pair, the key cannot be null, undefined, or an empty string.\r\n     * In case the key already exist, the value will be overwritten if force params is true or this\r\n     * allow overriding else it throw an TypeError.\r\n     *\r\n     * @param key\r\n     * @param value\r\n     * @param force\r\n     */\r\n    add ( key, value, force = false ) {\r\n\r\n        if ( this.contain( key ) && ( !this._allowOverride && !force ) ) {\r\n            throw new TypeError( `Item with key (${key}) already exist in collection !` )\r\n        }\r\n\r\n        TStore._validate( key, this._keyValidators )\r\n        TStore._validate( value, this._valueValidators )\r\n\r\n        this._collection[ key ] = value\r\n\r\n        return this\r\n\r\n    }\r\n\r\n    contain ( key ) {\r\n\r\n        return isNotUndefined( this._collection[ key ] )\r\n\r\n    }\r\n\r\n    /**\r\n     * Return the value associated to the key.\r\n     *\r\n     * @param key\r\n     * @returns {*}\r\n     */\r\n    get ( key ) {\r\n\r\n        return this._collection[ key ]\r\n\r\n    }\r\n\r\n    /**\r\n     * Remove to value from the cache. Does nothing if the key does not exist.\r\n     *\r\n     * @param key\r\n     */\r\n    remove ( key ) {\r\n\r\n        delete this._collection[ key ]\r\n\r\n        return this\r\n\r\n    }\r\n\r\n    /**\r\n     * Clear the cache and reset collection to an empty object.\r\n     */\r\n    clear () {\r\n\r\n        this._collection = {}\r\n\r\n        return this\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { TStore }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport { TStore } from './TStore'\r\n\r\nclass TAbstractFactory extends TStore {\r\n\r\n    constructor ( parameters = {} ) {\r\n\r\n        const _parameters = { ...{}, ...parameters }\r\n\r\n        super( _parameters )\r\n\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    create ( key, ...parameters ) {\r\n\r\n        // Need to be reimplemented\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { TAbstractFactory }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport { TAbstractFactory } from './TAbstractFactory'\r\n\r\nclass TCloningFactory extends TAbstractFactory {\r\n\r\n    constructor ( parameters = {} ) {\r\n\r\n        const _parameters = { ...{}, ...parameters }\r\n\r\n        super( _parameters )\r\n\r\n    }\r\n\r\n    create ( key, ...parameters ) {\r\n        super.create( key, ...parameters )\r\n\r\n        return this.get( key ).clone( ...parameters )\r\n\r\n    }\r\n}\r\n\r\nexport { TCloningFactory }\r\n\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport { TAbstractFactory } from './TAbstractFactory'\r\n\r\nclass TInstancingFactory extends TAbstractFactory {\r\n\r\n    constructor ( parameters = {} ) {\r\n\r\n        const _parameters = { ...{}, ...parameters }\r\n\r\n        super( _parameters )\r\n\r\n    }\r\n\r\n    create ( key, ...parameters ) {\r\n        super.create( key, ...parameters )\r\n\r\n        return new this.get( key )( ...parameters )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { TInstancingFactory }\r\n\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @class Todo...\r\n * @classdesc Todo...\r\n * @example Todo...\r\n *\r\n */\r\n\r\n/* eslint-env browser */\r\n\r\nimport { toEnum } from 'itee-utils'\r\nimport {\r\n    isArrayOfObject,\r\n    isArrayOfString,\r\n    isNull,\r\n    isObject,\r\n    isString,\r\n    isUndefined\r\n}                 from 'itee-validators'\r\n\r\n/**\r\n *\r\n * @type {Object}\r\n */\r\nconst LogOutput = toEnum( {\r\n    Console:  1,\r\n    Html:     2,\r\n    Toast:    4,\r\n    File:     8,\r\n    Database: 16,\r\n    All:      255\r\n} )\r\n\r\nconst LogType = toEnum( {\r\n    Message:  0,\r\n    Progress: 1,\r\n    Time:     2\r\n} )\r\n\r\n/**\r\n *\r\n * @type {Object}\r\n */\r\nconst LogLevel = toEnum( {\r\n    None:    0,\r\n    Debug:   1,\r\n    Info:    2,\r\n    Warning: 4,\r\n    Error:   8,\r\n    All:     255\r\n} )\r\n\r\n/*\r\n *  Allow to toast an message or error to user\r\n *  @level String who represent the gravity level of message between \"error | warn (for warning) | other (will display like info message)\"\r\n *  @message String message to display\r\n */\r\n/**\r\n *\r\n * @param outputs\r\n * @constructor\r\n */\r\nclass TLogger {\r\n\r\n    /**\r\n     *\r\n     * @param level\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    static _levelToString ( level ) {\r\n\r\n        let levelString = ''\r\n\r\n        switch ( level ) {\r\n\r\n            case LogLevel.Info:\r\n                levelString = 'info'\r\n                break\r\n\r\n            case LogLevel.Warning:\r\n                levelString = 'warning'\r\n                break\r\n\r\n            case LogLevel.Error:\r\n                levelString = 'error'\r\n                break\r\n\r\n            default:\r\n                levelString = 'unknownLogLevel'\r\n                break\r\n\r\n        }\r\n\r\n        return levelString\r\n\r\n    }\r\n\r\n    constructor ( parameters = {} ) {\r\n\r\n        const _parameters = {\r\n            ...{\r\n                outputLevel: LogLevel.Error,\r\n                outputs:     LogOutput.Console\r\n            }, ...parameters\r\n        }\r\n\r\n        this.outputLevel = _parameters.outputLevel\r\n        this.outputs     = _parameters.outputs\r\n\r\n        this._logsArray    = []\r\n        this._timers       = {}\r\n        this._counterTrace = 0\r\n\r\n    }\r\n\r\n    get outputLevel () {\r\n        return this._outputLevel\r\n    }\r\n\r\n    set outputLevel ( value ) {\r\n\r\n        const memberName = 'OutputLevel'\r\n        const expect     = 'Expect a value from LogLevel enum.'\r\n\r\n        if ( isNull( value ) ) { throw new Error( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new Error( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        //        if ( !Object.keys( LogLevel ).includes( value ) ) { throw new Error( `${memberName} cannot be an instance of ${value.constructor.name}. ${expect}` ) }\r\n\r\n        this._outputLevel = value\r\n\r\n    }\r\n\r\n    get outputs () {\r\n        return this._outputs\r\n    }\r\n\r\n    set outputs ( value ) {\r\n\r\n        const memberName = 'Output'\r\n        const expect     = 'Expect a value from LogOutput enum.'\r\n\r\n        if ( isNull( value ) ) { throw new Error( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new Error( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        //        if ( !Object.keys( LogOutput ).includes( value ) ) { throw new Error( `${memberName} cannot be an instance of ${value.constructor.name}. ${expect}` ) }\r\n\r\n        this._outputs = value\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param level\r\n     * @param datas\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _formatTrace ( level, datas ) {\r\n\r\n        const levelString = TLogger._levelToString( level )\r\n        const tmpLevel    = `${levelString}_${this._counterTrace}`\r\n\r\n        if ( isString( datas ) ) {\r\n\r\n            this._logsArray[ tmpLevel ] = datas\r\n\r\n        } else if ( isObject( datas ) ) {\r\n\r\n            this._logsArray[ tmpLevel ] = TLogger._formatObjectError( datas )\r\n\r\n        } else if ( isArrayOfString( datas ) ) {\r\n\r\n            this._logsArray[ tmpLevel ] = datas.toString()\r\n\r\n        } else if ( isArrayOfObject( datas ) ) {\r\n\r\n            this._logsArray[ tmpLevel ] = ''\r\n\r\n            for ( let dataIndex = 0, numberOfDatas = datas.length ; dataIndex < numberOfDatas ; dataIndex++ ) {\r\n                this._formatTrace( level, datas[ dataIndex ] )\r\n            }\r\n\r\n        } else {\r\n\r\n            this._logsArray[ tmpLevel ] = ( datas ) ? datas.toString() : 'Empty log data !'\r\n\r\n        }\r\n\r\n        this._counterTrace++\r\n        return this._logsArray[ tmpLevel ]\r\n\r\n    }\r\n\r\n    // Todo: Use listener models\r\n    /**\r\n     *\r\n     * @param message\r\n     */\r\n    dispatch ( message ) {\r\n\r\n        const type = message.type\r\n        switch ( type ) {\r\n\r\n            case LogType.Message:\r\n                this._dispatchMessage( message )\r\n                break\r\n\r\n            case LogType.Progress:\r\n                this._dispatchProgress( message )\r\n                break\r\n\r\n            case LogType.Time:\r\n                this._dispatchTime( message )\r\n                break\r\n\r\n            default:\r\n                throw new RangeError( `Invalid switch parameter: ${type}` )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchMessage ( message ) {\r\n\r\n        const level = message.level\r\n        const data  = message.message\r\n\r\n        // Root message in function of gravity\r\n        switch ( level ) {\r\n\r\n            case LogLevel.Error:\r\n                if ( this.outputLevel & LogLevel.Error ) {\r\n                    this._dispatchErrorMessage( data )\r\n                }\r\n                break\r\n\r\n            case LogLevel.Warning:\r\n                if ( this.outputLevel & LogLevel.Warning ) {\r\n                    this._dispatchWarningMessage( data )\r\n                }\r\n                break\r\n\r\n            case LogLevel.Info:\r\n                if ( this.outputLevel & LogLevel.Info ) {\r\n                    this._dispatchInfoMessage( data )\r\n                }\r\n                break\r\n\r\n            case LogLevel.Debug:\r\n                if ( this.outputLevel & LogLevel.Debug ) {\r\n                    this._dispatchDebugMessage( data )\r\n                }\r\n                break\r\n\r\n            // For \"Debug\" output, don't store trace like this !\r\n            default:\r\n                throw new RangeError( `Invalid switch parameter: ${level}` )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchErrorMessage ( errorMessage ) {\r\n\r\n        if ( this.outputs & LogOutput.Console ) {\r\n\r\n            console.error( errorMessage )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Html ) {\r\n\r\n            const span = document.createElement( 'span' )\r\n            span.classList.add( 'log-error' )\r\n            span.innerText = errorMessage\r\n            document.body.appendChild( span )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Toast ) {\r\n\r\n            // Todo: implement TToast\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.File ) {\r\n\r\n            // Todo: implement file\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Database ) {\r\n\r\n            // Todo: implement db\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchWarningMessage ( warnMessage ) {\r\n\r\n        if ( this.outputs & LogOutput.Console ) {\r\n\r\n            console.warn( warnMessage )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Html ) {\r\n\r\n            const span = document.createElement( 'span' )\r\n            span.classList.add( 'log-warning' )\r\n            span.innerText = warnMessage\r\n            document.body.appendChild( span )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Toast ) {\r\n\r\n            // Todo: implement TToast\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.File ) {\r\n\r\n            // Todo: implement file\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Database ) {\r\n\r\n            // Todo: implement db\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchInfoMessage ( infoMessage ) {\r\n\r\n        if ( this.outputs & LogOutput.Console ) {\r\n\r\n            console.log( infoMessage )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Html ) {\r\n\r\n            const span = document.createElement( 'span' )\r\n            span.classList.add( 'log-info' )\r\n            span.innerText = infoMessage\r\n            document.body.appendChild( span )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Toast ) {\r\n\r\n            // Todo: implement TToast\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.File ) {\r\n\r\n            // Todo: implement file\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Database ) {\r\n\r\n            // Todo: implement db\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchDebugMessage ( debugMessage ) {\r\n\r\n        if ( this.outputs & LogOutput.Console ) {\r\n\r\n            console.log( debugMessage )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Html ) {\r\n\r\n            const span = document.createElement( 'span' )\r\n            span.classList.add( 'log-info' )\r\n            span.innerText = debugMessage\r\n            document.body.appendChild( span )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Toast ) {\r\n\r\n            // Todo: implement TToast\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.File ) {\r\n\r\n            // Todo: implement file\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Database ) {\r\n\r\n            // Todo: implement db\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchProgress ( progress ) {\r\n\r\n        const level          = progress.level\r\n        let formattedMessage = progress.message\r\n\r\n        // Root message in function of gravity\r\n        switch ( level ) {\r\n\r\n            case LogLevel.Info:\r\n                if ( this.outputLevel & LogLevel.Info ) {\r\n                    this._dispatchInfoProgress( formattedMessage )\r\n                }\r\n                break\r\n\r\n            case LogLevel.Debug:\r\n                if ( this.outputLevel & LogLevel.Debug ) {\r\n                    this._dispatchDebugProgress( formattedMessage )\r\n                }\r\n                break\r\n\r\n            // For \"Debug\" output, don't store trace like this !\r\n            default:\r\n                throw new RangeError( `Invalid switch parameter: ${level}` )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchInfoProgress ( infoProgress ) {\r\n\r\n        if ( this.outputs & LogOutput.Console ) {\r\n\r\n            console.log( infoProgress )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Html ) {\r\n\r\n            const span = document.createElement( 'span' )\r\n            span.classList.add( 'log-info' )\r\n            span.innerText = infoProgress\r\n            document.body.appendChild( span )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Toast ) {\r\n\r\n            // Todo: implement TToast\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.File ) {\r\n\r\n            // Todo: implement file\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Database ) {\r\n\r\n            // Todo: implement db\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchDebugProgress ( debugProgress ) {\r\n\r\n        if ( this.outputs & LogOutput.Console ) {\r\n\r\n            console.log( debugProgress )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Html ) {\r\n\r\n            const span = document.createElement( 'span' )\r\n            span.classList.add( 'log-info' )\r\n            span.innerText = debugProgress\r\n            document.body.appendChild( span )\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Toast ) {\r\n\r\n            // Todo: implement TToast\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.File ) {\r\n\r\n            // Todo: implement file\r\n\r\n        }\r\n\r\n        if ( this.outputs & LogOutput.Database ) {\r\n\r\n            // Todo: implement db\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _dispatchTime ( time ) {\r\n\r\n        console.log( time.message )\r\n\r\n    }\r\n\r\n    debug ( debug ) {\r\n\r\n        this.dispatch( {\r\n            type:    LogType.Message,\r\n            level:   LogLevel.Debug,\r\n            message: debug\r\n        } )\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param info\r\n     */\r\n    log ( info ) {\r\n\r\n        this.dispatch( {\r\n            type:    LogType.Message,\r\n            level:   LogLevel.Info,\r\n            message: info\r\n        } )\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param warning\r\n     */\r\n    warn ( warning ) {\r\n\r\n        this.dispatch( {\r\n            type:    LogType.Message,\r\n            level:   LogLevel.Warning,\r\n            message: warning\r\n        } )\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param error\r\n     */\r\n    error ( error ) {\r\n\r\n        this.dispatch( {\r\n            type:    LogType.Message,\r\n            level:   LogLevel.Error,\r\n            message: error\r\n        } )\r\n\r\n    }\r\n\r\n    progress ( progress ) {\r\n\r\n        progress.preventDefault()\r\n        if ( progress.cancelable ) {\r\n            progress.stopImmediatePropagation()\r\n        }\r\n\r\n        if ( progress.lengthComputable ) {\r\n\r\n            const type        = progress.type\r\n            const loaded      = progress.loaded\r\n            const total       = progress.total\r\n            const advancement = Math.round( ( loaded / total ) * 10000 ) / 100\r\n            const message     = `${type}: ${advancement}% [${loaded}/${total}]`\r\n\r\n            this.dispatch( {\r\n                type:    LogType.Progress,\r\n                level:   LogLevel.Info,\r\n                message: message\r\n            } )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    startChronoFor ( key ) {\r\n\r\n        this._timers[ key ] = new Date().getTime()\r\n\r\n    }\r\n\r\n    stopChronoFor ( key ) {\r\n\r\n        const deltaTime = ( new Date().getTime() - this._timers[ key ] )\r\n        const message   = `${key} take ${deltaTime}ms.`\r\n\r\n        this.dispatch( {\r\n            type:    LogType.Time,\r\n            level:   LogLevel.Debug,\r\n            message: message\r\n        } )\r\n\r\n    }\r\n\r\n    setOutputLevel ( value ) {\r\n\r\n        this.outputLevel = value\r\n        return this\r\n\r\n    }\r\n\r\n    setOutput ( value ) {\r\n\r\n        this.outputs = value\r\n        return this\r\n\r\n    }\r\n\r\n}\r\n\r\nconst DefaultLogger = new TLogger()\r\n\r\nexport {\r\n    TLogger,\r\n    DefaultLogger,\r\n    LogLevel,\r\n    LogType,\r\n    LogOutput\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * based on Lee Stemkoski work\r\n *\r\n * @class TFactory\r\n * @classdesc Todo...\r\n * @example Todo...\r\n * (1) create a global variable:\r\n *      var keyboard = new TKeyboardController();\r\n * (2) during main loop:\r\n *       keyboard.update();\r\n * (3) check state of keys:\r\n *       keyboard.down(\"A\")    -- true for one update cycle after key is pressed\r\n *       keyboard.pressed(\"A\") -- true as long as key is being pressed\r\n *       keyboard.up(\"A\")      -- true for one update cycle after key is released\r\n *\r\n *  See TKeyboardController.k object data below for names of keys whose state can be polled\r\n *\r\n */\r\n\r\n/* eslint-env browser */\r\n\r\nimport { Keys }                     from '../cores/TConstants'\r\nimport { DefaultLogger as TLogger } from '../loggers/TLogger'\r\n\r\nclass TKeyboardController {\r\n\r\n    /**\r\n     *\r\n     * @param keyCode\r\n     * @return {string}\r\n     */\r\n    static keyName ( keyCode ) {\r\n        return ( TKeyboardController.k[ keyCode ] !== null ) ?\r\n            TKeyboardController.k[ keyCode ] :\r\n            String.fromCharCode( keyCode )\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param event\r\n     */\r\n    static onKeyUp ( event ) {\r\n        var key = TKeyboardController.keyName( event.keyCode )\r\n        if ( TKeyboardController.status[ key ] ) {\r\n            TKeyboardController.status[ key ].pressed = false\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param event\r\n     */\r\n    static onKeyDown ( event ) {\r\n        var key = TKeyboardController.keyName( event.keyCode )\r\n        if ( !TKeyboardController.status[ key ] ) {\r\n            TKeyboardController.status[ key ] = {\r\n                down:              false,\r\n                pressed:           false,\r\n                up:                false,\r\n                updatedPreviously: false\r\n            }\r\n        }\r\n    }\r\n\r\n    constructor ( /*parameters = {}*/ ) {\r\n\r\n        /*\r\n         const _parameters = {\r\n         ...{}, ...parameters\r\n         }\r\n         */\r\n\r\n        // bind keyEvents\r\n        document.addEventListener( 'keydown', TKeyboardController.onKeyDown, false )\r\n        document.addEventListener( 'keyup', TKeyboardController.onKeyUp, false )\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    update () {\r\n        for ( var key in TKeyboardController.status ) {\r\n            // insure that every keypress has \"down\" status exactly once\r\n            if ( !TKeyboardController.status[ key ].updatedPreviously ) {\r\n                TKeyboardController.status[ key ].down              = true\r\n                TKeyboardController.status[ key ].pressed           = true\r\n                TKeyboardController.status[ key ].updatedPreviously = true\r\n            } else { // updated previously\r\n                TKeyboardController.status[ key ].down = false\r\n            }\r\n\r\n            // key has been flagged as \"up\" since last update\r\n            if ( TKeyboardController.status[ key ].up ) {\r\n                delete TKeyboardController.status[ key ]\r\n                continue // move on to next key\r\n            }\r\n\r\n            if ( !TKeyboardController.status[ key ].pressed ) // key released\r\n            {\r\n                TKeyboardController.status[ key ].up = true\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param keyName\r\n     * @return {*}\r\n     */\r\n    down ( keyName ) {\r\n        return ( TKeyboardController.status[ keyName ] && TKeyboardController.status[ keyName ].down )\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param keyName\r\n     * @return {*|pressed|boolean}\r\n     */\r\n    pressed ( keyName ) {\r\n        return ( TKeyboardController.status[ keyName ] && TKeyboardController.status[ keyName ].pressed )\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param keyName\r\n     * @return {*}\r\n     */\r\n    up ( keyName ) {\r\n        return ( TKeyboardController.status[ keyName ] && TKeyboardController.status[ keyName ].up )\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    debug () {\r\n        var list = 'Keys active: '\r\n        for ( var arg in TKeyboardController.status ) {\r\n            list += ' ' + arg\r\n        }\r\n        TLogger.log( list )\r\n    }\r\n\r\n}\r\n\r\nTKeyboardController.k      = Keys\r\nTKeyboardController.status = {}\r\n\r\nexport { TKeyboardController }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @class Todo...\r\n * @classdesc Todo...\r\n * @example Todo...\r\n *\r\n */\r\n\r\n/* eslint-env browser */\r\n\r\nclass TMouseController {\r\n\r\n    constructor ( /*parameters = {}*/ ) {\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { TMouseController }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @class Todo...\r\n * @classdesc Todo...\r\n * @example Todo...\r\n *\r\n */\r\n\r\nimport { toEnum } from 'itee-utils'\r\nimport {\r\n    isNotArrayBuffer,\r\n    isNotBoolean,\r\n    isNotNumber,\r\n    isNull,\r\n    isUndefined\r\n}                 from 'itee-validators'\r\n\r\n/* eslint-env browser */\r\n\r\n/**\r\n *\r\n * @type {Object}\r\n */\r\nconst Endianness = toEnum( {\r\n    Little: true,\r\n    Big:    false\r\n} )\r\n\r\n/**\r\n *\r\n * @type {Object}\r\n */\r\nconst Byte = toEnum( {\r\n    One:    1,\r\n    Two:    2,\r\n    Four:   4,\r\n    Height: 8\r\n} )\r\n\r\n/**\r\n *\r\n * @param buffer\r\n * @param offset\r\n * @param length\r\n * @param endianness\r\n * @constructor\r\n */\r\n\r\nclass TBinaryReader {\r\n\r\n    constructor ( parameters = {} ) {\r\n\r\n        const _parameters = {\r\n            ...{\r\n                buffer:     new ArrayBuffer( 0 ),\r\n                offset:     0,\r\n                length:     0,\r\n                endianness: Endianness.Little\r\n            }, ...parameters\r\n        }\r\n\r\n        this.buffer     = _parameters.buffer\r\n        this.offset     = _parameters.offset\r\n        this.length     = _parameters.length\r\n        this.endianness = _parameters.endianness\r\n\r\n        this._updateDataView()\r\n\r\n    }\r\n\r\n    get buffer () {\r\n        return this._buffer\r\n    }\r\n\r\n    set buffer ( value ) {\r\n\r\n        const memberName = 'Buffer'\r\n        const expect     = 'Expect an instance of ArrayBuffer.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotArrayBuffer ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._buffer = value\r\n        this._offset = 0\r\n        this._length = value.byteLength\r\n\r\n        this._updateDataView()\r\n\r\n    }\r\n\r\n    get offset () {\r\n        return this._offset\r\n    }\r\n\r\n    set offset ( value ) {\r\n\r\n        const memberName = 'Offset'\r\n        const expect     = 'Expect a number.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotNumber( value ) ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._offset = value\r\n\r\n        this._updateDataView()\r\n\r\n    }\r\n\r\n    get length () {\r\n        return this._length\r\n    }\r\n\r\n    set length ( value ) {\r\n\r\n        const memberName = 'Length'\r\n        const expect     = 'Expect a number.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotNumber( value ) ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._length = value\r\n\r\n        this._updateDataView()\r\n\r\n    }\r\n\r\n    get endianness () {\r\n        return this._endianness\r\n    }\r\n\r\n    set endianness ( value ) {\r\n\r\n        const memberName = 'Endianness'\r\n        const expect     = 'Expect a boolean.'\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( `${memberName} cannot be null ! ${expect}` ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( `${memberName} cannot be undefined ! ${expect}` ) }\r\n        if ( isNotBoolean( value ) ) { throw new TypeError( `${memberName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\r\n\r\n        this._endianness = value\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param buffer\r\n     * @param offset\r\n     * @param length\r\n     * @return {this}\r\n     */\r\n    setBuffer ( buffer, offset, length ) {\r\n\r\n        this.buffer = buffer\r\n        this.offset = offset || 0\r\n        this.length = length || buffer.byteLength\r\n\r\n        return this\r\n\r\n    }\r\n\r\n    setOffset ( value ) {\r\n\r\n        this.offset = value\r\n        return this\r\n\r\n    }\r\n\r\n    setLength ( value ) {\r\n\r\n        this.length = value\r\n        return this\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param endianess\r\n     * @return {this}\r\n     */\r\n    setEndianess ( endianess ) {\r\n\r\n        this.endianness = endianess\r\n        return this\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param increment\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _getAndUpdateOffsetBy ( increment ) {\r\n\r\n        const currentOffset = this._offset\r\n        this._offset += increment\r\n        return currentOffset\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _updateDataView () {\r\n\r\n        this._dataView = new DataView( this._buffer, this._offset, this._length )\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {boolean}\r\n     */\r\n    isEndOfFile () {\r\n\r\n        return ( this._offset === this._length )\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param offset\r\n     * @return {this}\r\n     */\r\n    skipOffsetTo ( offset ) {\r\n\r\n        this._offset = offset\r\n\r\n        return this\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param nBytes\r\n     * @return {this}\r\n     */\r\n    skipOffsetOf ( nBytes ) {\r\n\r\n        this._offset += nBytes\r\n\r\n        return this\r\n\r\n    }\r\n\r\n    getBoolean () {\r\n\r\n        return ( ( this.getUint8() & 1 ) === 1 )\r\n\r\n    }\r\n\r\n    getBooleanArray ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getBoolean() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getInt8 () {\r\n\r\n        return this._dataView.getInt8( this._getAndUpdateOffsetBy( Byte.One ) )\r\n\r\n    }\r\n\r\n    getInt8Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getInt8() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getUint8 () {\r\n\r\n        return this._dataView.getUint8( this._getAndUpdateOffsetBy( Byte.One ) )\r\n\r\n    }\r\n\r\n    getUint8Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getUint8() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getInt16 () {\r\n\r\n        return this._dataView.getInt16( this._getAndUpdateOffsetBy( Byte.Two ), this._endianness )\r\n\r\n    }\r\n\r\n    getInt16Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getInt16() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getUint16 () {\r\n\r\n        return this._dataView.getUint16( this._getAndUpdateOffsetBy( Byte.Two ), this._endianness )\r\n\r\n    }\r\n\r\n    getUint16Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getUint16() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getInt32 () {\r\n\r\n        return this._dataView.getInt32( this._getAndUpdateOffsetBy( Byte.Four ), this._endianness )\r\n\r\n    }\r\n\r\n    getInt32Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getInt32() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getUint32 () {\r\n\r\n        return this._dataView.getUint32( this._getAndUpdateOffsetBy( Byte.Four ), this._endianness )\r\n\r\n    }\r\n\r\n    getUint32Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getUint32() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    // From THREE.FBXLoader\r\n    // JavaScript doesn't support 64-bit integer so attempting to calculate by ourselves.\r\n    // 1 << 32 will return 1 so using multiply operation instead here.\r\n    // There'd be a possibility that this method returns wrong value if the value\r\n    // is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\r\n    // TODO: safely handle 64-bit integer\r\n    getInt64 () {\r\n\r\n        let low  = null\r\n        let high = null\r\n\r\n        if ( this._endianness === Endianness.Little ) {\r\n\r\n            low  = this.getUint32()\r\n            high = this.getUint32()\r\n\r\n        } else {\r\n\r\n            high = this.getUint32()\r\n            low  = this.getUint32()\r\n\r\n        }\r\n\r\n        // calculate negative value\r\n        if ( high & 0x80000000 ) {\r\n\r\n            high = ~high & 0xFFFFFFFF\r\n            low  = ~low & 0xFFFFFFFF\r\n\r\n            if ( low === 0xFFFFFFFF ) {\r\n                high = ( high + 1 ) & 0xFFFFFFFF\r\n            }\r\n\r\n            low = ( low + 1 ) & 0xFFFFFFFF\r\n\r\n            return -( high * 0x100000000 + low )\r\n\r\n        }\r\n\r\n        return high * 0x100000000 + low\r\n\r\n    }\r\n\r\n    getInt64Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getInt64() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    // Note: see getInt64() comment\r\n    getUint64 () {\r\n\r\n        let low  = null\r\n        let high = null\r\n\r\n        if ( this._endianness === Endianness.Little ) {\r\n\r\n            low  = this.getUint32()\r\n            high = this.getUint32()\r\n\r\n        } else {\r\n\r\n            high = this.getUint32()\r\n            low  = this.getUint32()\r\n\r\n        }\r\n\r\n        return high * 0x100000000 + low\r\n\r\n    }\r\n\r\n    getUint64Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getUint64() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getFloat32 () {\r\n\r\n        return this._dataView.getFloat32( this._getAndUpdateOffsetBy( Byte.Four ), this._endianness )\r\n\r\n    }\r\n\r\n    getFloat32Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getFloat32() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    getFloat64 () {\r\n\r\n        return this._dataView.getFloat64( this._getAndUpdateOffsetBy( Byte.Height ), this._endianness )\r\n\r\n    }\r\n\r\n    getFloat64Array ( length ) {\r\n\r\n        const array = []\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n\r\n            array.push( this.getFloat64() )\r\n\r\n        }\r\n\r\n        return array\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {string}\r\n     */\r\n    getChar () {\r\n\r\n        return String.fromCharCode( this.getUint8() )\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param length\r\n     * @param trim\r\n     * @return {string}\r\n     */\r\n    getString ( length, trim = true ) {\r\n\r\n        let string   = ''\r\n        let charCode = null\r\n\r\n        for ( let i = 0 ; i < length ; i++ ) {\r\n            charCode = this.getUint8()\r\n\r\n            if ( charCode === 0 ) {\r\n                continue\r\n            }\r\n\r\n            string += String.fromCharCode( charCode )\r\n        }\r\n\r\n        if ( trim ) {\r\n            string = string.trim()\r\n        }\r\n\r\n        return string\r\n\r\n    }\r\n\r\n    getArrayBuffer ( size ) {\r\n\r\n        const offset = this._getAndUpdateOffsetBy( size )\r\n        return this._dataView.buffer.slice( offset, offset + size )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    TBinaryReader,\r\n    Endianness,\r\n    Byte\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @class TDataBaseManager\r\n * @classdesc The base class of database managers. Give the basic interface about database call.\r\n *\r\n * @requires {@link HttpVerb}\r\n * @requires {@link ResponseType}\r\n * @requires {@link HttpStatusCode}\r\n * @requires {@link TOrchestrator}\r\n * @requires {@link TStore}\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\n/* eslint-env browser */\r\n\r\nimport {\r\n    isArray,\r\n    isArrayOfSingleElement,\r\n    isBlankString,\r\n    isDefined,\r\n    isEmptyObject,\r\n    isEmptyString,\r\n    isNotBlankString,\r\n    isNotDefined,\r\n    isNotEmptyArray,\r\n    isNotEmptyObject,\r\n    isNotEmptyString,\r\n    isNotNumber,\r\n    isNotObject,\r\n    isNotString,\r\n    isNull,\r\n    isNumberNegative,\r\n    isNumberPositive,\r\n    isObject,\r\n    isString,\r\n    isUndefined,\r\n    isZero\r\n}                 from 'itee-validators'\r\nimport { toEnum } from 'itee-utils'\r\nimport {\r\n    HttpStatusCode,\r\n    HttpVerb,\r\n    ResponseType\r\n}                 from '../cores/TConstants'\r\nimport { TStore } from '../cores/TStore'\r\nimport {\r\n    DefaultLogger,\r\n    TLogger\r\n}                 from '../loggers/TLogger'\r\n\r\nclass IdGenerator {\r\n\r\n    constructor () {\r\n        this._id = 0\r\n    }\r\n\r\n    get id () {\r\n        this._id += 1\r\n        return this._id\r\n    }\r\n\r\n}\r\n\r\nconst Generate = new IdGenerator()\r\n\r\nconst RequestType = toEnum( {\r\n    CreateOne:   0,\r\n    CreateMany:  1,\r\n    ReadOne:     2,\r\n    ReadMany:    3,\r\n    ReadWhere:   4,\r\n    ReadAll:     5,\r\n    UpdateOne:   6,\r\n    UpdateMany:  7,\r\n    UpdateWhere: 8,\r\n    UpdateAll:   9,\r\n    DeleteOne:   10,\r\n    DeleteMany:  11,\r\n    DeleteWhere: 12,\r\n    DeleteAll:   13\r\n} )\r\n\r\nclass TDataBaseManager {\r\n\r\n    static get requestId () {\r\n        TDataBaseManager._requestId++\r\n        return TDataBaseManager._requestId\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param parameters\r\n     */\r\n    constructor ( parameters = {} ) {\r\n\r\n        const _parameters = {\r\n            ...{\r\n                basePath:               '/',\r\n                responseType:           ResponseType.Json,\r\n                bunchSize:              500,\r\n                requestAggregationTime: 200,\r\n                requestsConcurrency:    6,\r\n                logger:                 DefaultLogger\r\n            }, ...parameters\r\n        }\r\n\r\n        this.basePath               = _parameters.basePath\r\n        this.responseType           = _parameters.responseType\r\n        this.bunchSize              = _parameters.bunchSize\r\n        this.requestAggregationTime = _parameters.requestAggregationTime\r\n        this.requestsConcurrency    = _parameters.requestsConcurrency\r\n        this.logger                 = _parameters.logger\r\n\r\n        this._cache                = new TStore()\r\n        this._waitingQueue         = []\r\n        this._aggregateQueue       = []\r\n        this._requestQueue         = []\r\n        this._processQueue         = []\r\n        this._aggregationTimeoutId = null\r\n\r\n        this._idToRequest = []\r\n\r\n    }\r\n\r\n    get basePath () {\r\n        return this._basePath\r\n    }\r\n\r\n    set basePath ( value ) {\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( 'Base path cannot be null ! Expect a non empty string.' ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( 'Base path cannot be undefined ! Expect a non empty string.' ) }\r\n        if ( isNotString( value ) ) { throw new TypeError( `Base path cannot be an instance of ${value.constructor.name} ! Expect a non empty string.` ) }\r\n        if ( isEmptyString( value ) ) { throw new TypeError( 'Base path cannot be empty ! Expect a non empty string.' ) }\r\n        if ( isBlankString( value ) ) { throw new TypeError( 'Base path cannot contain only whitespace ! Expect a non empty string.' ) }\r\n\r\n        this._basePath = value\r\n\r\n    }\r\n\r\n    get responseType () {\r\n        return this._responseType\r\n    }\r\n\r\n    set responseType ( value ) {\r\n\r\n        if ( isNull( value ) ) { throw new Error( 'TDataBaseManager: responseType cannot be null !' ) }\r\n        if ( isNull( value ) ) { throw new TypeError( 'Response type cannot be null ! Expect a non empty string.' ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( 'Response type cannot be undefined ! Expect a non empty string.' ) }\r\n        if ( !( value instanceof ResponseType ) ) { throw new TypeError( `Response type cannot be an instance of ${value.constructor.name} ! Expect a value from ResponseType enum.` ) }\r\n\r\n        this._responseType = value\r\n\r\n    }\r\n\r\n    get bunchSize () {\r\n        return this._bunchSize\r\n    }\r\n\r\n    set bunchSize ( value ) {\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( 'Bunch size cannot be null ! Expect a positive number.' ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( 'Bunch size cannot be undefined ! Expect a positive number.' ) }\r\n        if ( isNotNumber( value ) ) { throw new TypeError( `Bunch size cannot be an instance of ${value.constructor.name} ! Expect a positive number.` ) }\r\n        if ( !isNumberPositive( value ) ) { throw new TypeError( `Bunch size cannot be lower or equal to zero ! Expect a positive number.` ) }\r\n\r\n        this._bunchSize = value\r\n\r\n    }\r\n\r\n    get requestAggregationTime () {\r\n        return this._requestAggregationTime\r\n    }\r\n\r\n    set requestAggregationTime ( value ) {\r\n\r\n        if ( isNull( value ) ) {\r\n            throw new TypeError( 'Requests aggregation time cannot be null ! Expect a positive number.' )\r\n        }\r\n\r\n        if ( isUndefined( value ) ) {\r\n            throw new TypeError( 'Requests aggregation time cannot be undefined ! Expect a positive number.' )\r\n        }\r\n\r\n        if ( isNotNumber( value ) ) {\r\n            throw new TypeError( `Requests aggregation time cannot be an instance of ${value.constructor.name} ! Expect a positive number.` )\r\n        }\r\n\r\n        if ( isNumberNegative( value ) ) {\r\n            throw new TypeError( 'Requests aggregation time cannot be lower or equal to zero ! Expect a positive number.' )\r\n        }\r\n\r\n        this._requestAggregationTime = value\r\n\r\n    }\r\n\r\n    get requestsConcurrency () {\r\n        return this._requestsConcurrency\r\n    }\r\n\r\n    set requestsConcurrency ( value ) {\r\n\r\n        if ( isNull( value ) ) {\r\n            throw new TypeError( 'Minimum of simultaneous request cannot be null ! Expect a positive number.' )\r\n        }\r\n\r\n        if ( isUndefined( value ) ) {\r\n            throw new TypeError( 'Minimum of simultaneous request cannot be undefined ! Expect a positive number.' )\r\n        }\r\n\r\n        if ( isNotNumber( value ) ) {\r\n            throw new TypeError( `Minimum of simultaneous request cannot be an instance of ${value.constructor.name} ! Expect a positive number.` )\r\n        }\r\n\r\n        if ( isZero( value ) || isNumberNegative( value ) ) {\r\n            throw new TypeError( 'Minimum of simultaneous request cannot be lower or equal to zero ! Expect a positive number.' )\r\n        }\r\n\r\n        this._requestsConcurrency = value\r\n\r\n    }\r\n\r\n    get logger () {\r\n        return this._logger\r\n    }\r\n\r\n    set logger ( value ) {\r\n\r\n        if ( isNull( value ) ) { throw new TypeError( 'Progress manager cannot be null ! Expect an instance of TProgressManager.' ) }\r\n        if ( isUndefined( value ) ) { throw new TypeError( 'Progress manager cannot be undefined ! Expect an instance of TProgressManager.' ) }\r\n        if ( !( value instanceof TLogger ) ) { throw new TypeError( `Progress manager cannot be an instance of ${value.constructor.name} ! Expect an instance of TProgressManager.` ) }\r\n\r\n        this._logger = value\r\n\r\n    }\r\n\r\n    setBasePath ( value ) {\r\n\r\n        this.basePath = value\r\n        return this\r\n\r\n    }\r\n\r\n    setResponseType ( value ) {\r\n\r\n        this.responseType = value\r\n        return this\r\n\r\n    }\r\n\r\n    setBunchSize ( value ) {\r\n\r\n        this.bunchSize = value\r\n        return this\r\n\r\n    }\r\n\r\n    setRequestAggregationTime ( value ) {\r\n\r\n        this.requestAggregationTime = value\r\n        return this\r\n\r\n    }\r\n\r\n    setRequestsConcurrency ( value ) {\r\n\r\n        this.requestsConcurrency = value\r\n        return this\r\n\r\n    }\r\n\r\n    setLogger ( value ) {\r\n\r\n        this.logger = value\r\n        return this\r\n\r\n    }\r\n\r\n    aggregateQueue () {\r\n\r\n        clearTimeout( this._aggregationTimeoutId )\r\n\r\n        this._aggregationTimeoutId = setTimeout( () => {\r\n\r\n            const datasToRequest = this._idToRequest\r\n            let idBunch          = []\r\n            for ( let idIndex = datasToRequest.length - 1 ; idIndex >= 0 ; idIndex-- ) {\r\n\r\n                idBunch.push( datasToRequest.pop() )\r\n\r\n                if ( idBunch.length === this._bunchSize || idIndex === 0 ) {\r\n\r\n                    this._requestQueue.push( {\r\n                        _id:        `readMany_${Generate.id}`,\r\n                        _timeStart: new Date(),\r\n                        _type:      RequestType.ReadMany,\r\n                        method:     HttpVerb.Read.value,\r\n                        url:        this._basePath,\r\n                        data:       {\r\n                            ids: idBunch\r\n                        },\r\n                        responseType: this._responseType\r\n                    } )\r\n\r\n                    idBunch = []\r\n                }\r\n\r\n            }\r\n\r\n            this.processQueue.call( this )\r\n\r\n        }, this._requestAggregationTime )\r\n\r\n    }\r\n\r\n    processQueue () {\r\n\r\n        while ( this._requestQueue.length > 0 && this._processQueue.length < this._requestsConcurrency ) {\r\n\r\n            const requestSkull = this._requestQueue.pop()\r\n            this._processQueue.push( requestSkull )\r\n\r\n            const request              = new XMLHttpRequest()\r\n            request.onloadstart        = _onLoadStart.bind( this )\r\n            request.onload             = this._onLoad.bind( this,\r\n                requestSkull,\r\n                this._onEnd.bind( this, requestSkull, requestSkull.onLoad ),\r\n                this._onProgress.bind( this, requestSkull.onProgress ),\r\n                this._onError.bind( this, requestSkull, requestSkull.onError )\r\n            )\r\n            request.onloadend          = _onLoadEnd.bind( this )\r\n            request.onprogress         = this._onProgress.bind( this, requestSkull.onProgress )\r\n            request.onreadystatechange = _onReadyStateChange.bind( this )\r\n            request.onabort            = _onAbort.bind( this )\r\n            request.onerror            = this._onError.bind( this, requestSkull, requestSkull.onError )\r\n            request.ontimeout          = _onTimeout.bind( this )\r\n            request.open( requestSkull.method, requestSkull.url, true )\r\n            request.setRequestHeader( 'Content-Type', 'application/json' )\r\n            request.setRequestHeader( 'Accept', 'application/json' )\r\n            request.responseType = requestSkull.responseType.value\r\n\r\n            const dataToSend = ( requestSkull.data && requestSkull.responseType === ResponseType.Json ) ? JSON.stringify( requestSkull.data ) : requestSkull.data\r\n            request.send( dataToSend )\r\n\r\n        }\r\n\r\n        function _onLoadStart ( loadStartEvent ) { this.logger.progress( loadStartEvent ) }\r\n\r\n        function _onLoadEnd ( loadEndEvent ) { this.logger.progress( loadEndEvent ) }\r\n\r\n        function _onReadyStateChange ( readyStateEvent ) { this.logger.debug( readyStateEvent ) }\r\n\r\n        function _onAbort ( abortEvent ) { this.logger.error( abortEvent ) }\r\n\r\n        function _onTimeout ( timeoutEvent ) { this.logger.error( timeoutEvent ) }\r\n\r\n    }\r\n\r\n    // Publics\r\n    /**\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The create method allow to create a new ressource on the server. Providing a single object that match a database schema, or an array of them.\r\n     *\r\n     * @param {object|array.<object>} data - The data to send for create new objects.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    create ( data, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        if ( isArray( data ) && isNotEmptyArray( data ) ) {\r\n\r\n            if ( isArrayOfSingleElement( data ) ) {\r\n\r\n                this._createOne( data[ 0 ], onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            } else {\r\n\r\n                this._createMany( data, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            }\r\n\r\n        } else if ( isObject( data ) && isNotEmptyObject( data ) ) {\r\n\r\n            this._createOne( data, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n        } else {\r\n\r\n            onErrorCallback( 'TDataBaseManager.create: Invalid data type, expect object or array of objects.' )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The read method allow to retrieve data from the server, using a single id or an array of them.\r\n     *\r\n     * @param {string|array.<string>} condition - The ids of objects to retrieve.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    read ( condition, projection, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        if ( isString( condition ) && isNotEmptyString( condition ) && isNotBlankString( condition ) ) {\r\n\r\n            this._readOne( condition, projection, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n        } else if ( isArray( condition ) && isNotEmptyArray( condition ) ) {\r\n\r\n            if ( isArrayOfSingleElement( condition ) ) {\r\n\r\n                this._readOne( condition[ 0 ], projection, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            } else {\r\n\r\n                this._readMany( condition, projection, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            }\r\n\r\n        } else if ( isObject( condition ) ) {\r\n\r\n            if ( isEmptyObject( condition ) ) {\r\n\r\n                this._readAll( projection, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            } else {\r\n\r\n                this._readWhere( condition, projection, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            onErrorCallback( 'TDataBaseManager.read: Invalid data type, expect string, object or array of objects.' )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The update method allow to update data on the server, using a single id or an array of them, and a corresponding object about the data to update.\r\n     *\r\n     * @param {string|array.<string>} condition - The ids of objects to update.\r\n     * @param {object} update - The update data ( need to match the related database schema ! ). In case of multiple ids they will be updated with the same given data.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    update ( condition, update, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        if ( isNotDefined( update ) ) {\r\n            onErrorCallback( 'TDataBaseManager.update: Update data cannot be null or undefined !' )\r\n            return\r\n        }\r\n\r\n        if ( isNotObject( update ) ) {\r\n            onErrorCallback( 'TDataBaseManager.update: Invalid update data type. Expect an object.' )\r\n            return\r\n        }\r\n\r\n        if ( isString( condition ) && isNotEmptyString( condition ) && isNotBlankString( condition ) ) {\r\n\r\n            this._updateOne( condition, update, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n        } else if ( isArray( condition ) && isNotEmptyArray( condition ) ) {\r\n\r\n            if ( isArrayOfSingleElement( condition ) ) {\r\n\r\n                this._updateOne( condition[ 0 ], update, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            } else {\r\n\r\n                this._updateMany( condition, update, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            }\r\n\r\n        } else if ( isObject( condition ) ) {\r\n\r\n            if ( isEmptyObject( condition ) ) {\r\n\r\n                this._updateAll( update, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            } else {\r\n\r\n                this._updateWhere( condition, update, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            onErrorCallback( 'TDataBaseManager.update: Invalid data type, expect string, object or array of objects.' )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The delete method allow to remove data from the server, using a single id or an array of them.\r\n     *\r\n     * @param {string|array.<string>|object|null} condition - The ids of objects to delete.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    delete ( condition, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        if ( isString( condition ) && isNotEmptyString( condition ) && isNotBlankString( condition ) ) {\r\n\r\n            this._deleteOne( condition, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n        } else if ( isArray( condition ) && isNotEmptyArray( condition ) ) {\r\n\r\n            if ( isArrayOfSingleElement( condition ) ) {\r\n\r\n                this._deleteOne( condition[ 0 ], onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            } else {\r\n\r\n                this._deleteMany( condition, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            }\r\n\r\n        } else if ( isObject( condition ) ) {\r\n\r\n            if ( isEmptyObject( condition ) ) {\r\n\r\n                this._deleteAll( onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            } else {\r\n\r\n                this._deleteWhere( condition, onLoadCallback, onProgressCallback, onErrorCallback )\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            onErrorCallback( 'TDataBaseManager.delete: Invalid data type, expect null, string, object or array of objects.' )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // Privates\r\n\r\n    //// Events\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _onLoad method allow to process the server response in an abstract way to check against error and wrong status code.\r\n     * It will bind user callback on each type of returns, and dispatch in sub methods in function of the response type.\r\n     *\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     * @param {object} loadEvent - The server response object to parse.\r\n     */\r\n    _onLoad ( request, onLoadCallback, onProgressCallback, onErrorCallback, loadEvent ) {\r\n\r\n        const target       = loadEvent.target\r\n        const status       = target.status\r\n        const response     = target.response\r\n        const responseType = target.responseType\r\n\r\n        switch ( status ) {\r\n\r\n            // 100\r\n            //            case HttpStatusCode.Continue.value:\r\n            //            case HttpStatusCode.SwitchingProtocols.value:\r\n            //            case HttpStatusCode.Processing.value:\r\n\r\n            // 200\r\n            case HttpStatusCode.Ok.value:\r\n                this._dispatchResponse( response, responseType, onLoadCallback, onProgressCallback, onErrorCallback )\r\n                break\r\n            //            case HttpStatusCode.Created.value:\r\n            //            case HttpStatusCode.Accepted.value:\r\n\r\n            case HttpStatusCode.NonAuthoritativeInformation.value:\r\n            case HttpStatusCode.NoContent.value:\r\n            case HttpStatusCode.ResetContent.value:\r\n            case HttpStatusCode.PartialContent.value:\r\n            case HttpStatusCode.MultiStatus.value:\r\n            case HttpStatusCode.AlreadyReported.value:\r\n            case HttpStatusCode.ContentDifferent.value:\r\n            case HttpStatusCode.IMUsed.value:\r\n            case HttpStatusCode.MultipleChoices.value:\r\n            case HttpStatusCode.MovedPermanently.value:\r\n            case HttpStatusCode.Found.value:\r\n            case HttpStatusCode.SeeOther.value:\r\n            case HttpStatusCode.NotModified.value:\r\n            case HttpStatusCode.UseProxy.value:\r\n            case HttpStatusCode.Unused.value:\r\n            case HttpStatusCode.TemporaryRedirect.value:\r\n            case HttpStatusCode.PermanentRedirect.value:\r\n            case HttpStatusCode.TooManyRedirects.value:\r\n            case HttpStatusCode.BadRequest.value:\r\n            case HttpStatusCode.Unauthorized.value:\r\n            case HttpStatusCode.PaymentRequired.value:\r\n            case HttpStatusCode.Forbidden.value:\r\n            case HttpStatusCode.NotFound.value:\r\n            case HttpStatusCode.MethodNotAllowed.value:\r\n            case HttpStatusCode.NotAcceptable.value:\r\n            case HttpStatusCode.ProxyAuthenticationRequired.value:\r\n            case HttpStatusCode.RequestTimeOut.value:\r\n            case HttpStatusCode.Conflict.value:\r\n            case HttpStatusCode.Gone.value:\r\n            case HttpStatusCode.LengthRequired.value:\r\n            case HttpStatusCode.PreconditionFailed.value:\r\n            case HttpStatusCode.RequestEntityTooLarge.value:\r\n            case HttpStatusCode.RequestRangeUnsatisfiable.value:\r\n            case HttpStatusCode.ExpectationFailed.value:\r\n            case HttpStatusCode.ImATeapot.value:\r\n            case HttpStatusCode.BadMapping.value:\r\n            case HttpStatusCode.UnprocessableEntity.value:\r\n            case HttpStatusCode.Locked.value:\r\n            case HttpStatusCode.MethodFailure.value:\r\n            case HttpStatusCode.UnorderedCollection.value:\r\n            case HttpStatusCode.UpgradeRequired.value:\r\n            case HttpStatusCode.PreconditionRequired.value:\r\n            case HttpStatusCode.TooManyRequests.value:\r\n            case HttpStatusCode.RequestHeaderFieldsTooLarge.value:\r\n            case HttpStatusCode.NoResponse.value:\r\n            case HttpStatusCode.RetryWith.value:\r\n            case HttpStatusCode.BlockedByWindowsParentalControls.value:\r\n            case HttpStatusCode.UnavailableForLegalReasons.value:\r\n            case HttpStatusCode.UnrecoverableError.value:\r\n            case HttpStatusCode.SSLCertificateError.value:\r\n            case HttpStatusCode.SSLCertificateRequired.value:\r\n            case HttpStatusCode.HTTPRequestSentToHTTPSPort.value:\r\n            case HttpStatusCode.ClientClosedRequest.value:\r\n            case HttpStatusCode.InternalServerError.value:\r\n            case HttpStatusCode.NotImplemented.value:\r\n            case HttpStatusCode.BadGateway.value:\r\n            case HttpStatusCode.ServiceUnavailable.value:\r\n            case HttpStatusCode.GatewayTimeOut.value:\r\n            case HttpStatusCode.HTTPVersionNotSupported.value:\r\n            case HttpStatusCode.VariantAlsoNegotiates.value:\r\n            case HttpStatusCode.InsufficientStorage.value:\r\n            case HttpStatusCode.LoopDetected.value:\r\n            case HttpStatusCode.BandwidthLimitExceeded.value:\r\n            case HttpStatusCode.NotExtended.value:\r\n            case HttpStatusCode.NetworkAuthenticationRequired.value:\r\n            case HttpStatusCode.UnknownError.value:\r\n            case HttpStatusCode.WebServerIsDown.value:\r\n            case HttpStatusCode.ConnectionTimedOut.value:\r\n            case HttpStatusCode.OriginIsUnreachable.value:\r\n            case HttpStatusCode.ATimeoutOccured.value:\r\n            case HttpStatusCode.SSLHandshakeFailed.value:\r\n            case HttpStatusCode.InvalidSSLCertificate.value:\r\n            case HttpStatusCode.RailgunError.value:\r\n                onErrorCallback( response )\r\n                break\r\n\r\n            default:\r\n                throw new RangeError( `Unmanaged HttpStatusCode: ${status}` )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _onProgress method will handle all progress event from server and submit them to the logger if exist else to the user onProgressCallback\r\n     *\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {object} progressEvent - The server progress event.\r\n     */\r\n    _onProgress ( onProgressCallback, progressEvent ) {\r\n\r\n        if ( isDefined( this.logger ) ) {\r\n\r\n            this.logger.progress( progressEvent, onProgressCallback )\r\n\r\n        } else if ( isDefined( onProgressCallback ) ) {\r\n\r\n            onProgressCallback( progressEvent )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _onError method will handle all error event from server and submit them to the logger if exist else to the user onErrorCallback\r\n     *\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     * @param {object} errorEvent - A server error event\r\n     */\r\n    _onError ( request, onErrorCallback, errorEvent ) {\r\n\r\n        this._closeRequest( request )\r\n\r\n        if ( isDefined( this.logger ) ) {\r\n\r\n            this.logger.error( errorEvent, onErrorCallback )\r\n\r\n        } else if ( isDefined( onErrorCallback ) ) {\r\n\r\n            onErrorCallback( errorEvent )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _onEnd ( request, onLoadCallback, response ) {\r\n\r\n        const type = request._type\r\n\r\n        switch ( type ) {\r\n\r\n            case RequestType.ReadOne:\r\n            case RequestType.ReadMany:\r\n                this._updateCache( response )\r\n                this._updateWaitingQueue()\r\n                break\r\n\r\n            case RequestType.ReadWhere:\r\n            case RequestType.ReadAll:\r\n                this._updateCache( response )\r\n                this._updateWaitingQueue()\r\n                onLoadCallback( response )\r\n                break\r\n\r\n            case RequestType.CreateOne:\r\n            case RequestType.CreateMany:\r\n            case RequestType.UpdateOne:\r\n            case RequestType.UpdateMany:\r\n            case RequestType.UpdateWhere:\r\n            case RequestType.UpdateAll:\r\n            case RequestType.DeleteOne:\r\n            case RequestType.DeleteMany:\r\n            case RequestType.DeleteWhere:\r\n            case RequestType.DeleteAll:\r\n                onLoadCallback( response )\r\n                break\r\n\r\n            default:\r\n                throw new RangeError( `Invalid request type: ${type}` )\r\n\r\n        }\r\n\r\n        this._closeRequest( request )\r\n\r\n    }\r\n\r\n    //// Data parsing\r\n    // Expect that methods were reimplemented when TDataBaseManager is inherited\r\n\r\n    // Dispatch response to the correct handler in function of response type\r\n    _dispatchResponse ( response, responseType, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        switch ( responseType ) {\r\n\r\n            case ResponseType.ArrayBuffer.value:\r\n                this._onArrayBuffer(\r\n                    response,\r\n                    onLoadCallback,\r\n                    onProgressCallback,\r\n                    onErrorCallback\r\n                )\r\n                break\r\n\r\n            case ResponseType.Blob.value:\r\n                this._onBlob(\r\n                    response,\r\n                    onLoadCallback,\r\n                    onProgressCallback,\r\n                    onErrorCallback\r\n                )\r\n                break\r\n\r\n            case ResponseType.Json.value:\r\n                this._onJson(\r\n                    response,\r\n                    onLoadCallback,\r\n                    onProgressCallback,\r\n                    onErrorCallback\r\n                )\r\n                break\r\n\r\n            case ResponseType.DOMString.value:\r\n            case ResponseType.Default.value:\r\n                this._onText(\r\n                    response,\r\n                    onLoadCallback,\r\n                    onProgressCallback,\r\n                    onErrorCallback\r\n                )\r\n                break\r\n\r\n            default:\r\n                throw new Error( `Unknown response type: ${responseType}` )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Will remove the request from the process queue\r\n     * @param request\r\n     * @private\r\n     */\r\n    _closeRequest ( request ) {\r\n\r\n        this._processQueue.splice( this._processQueue.indexOf( request ), 1 )\r\n\r\n        if ( Window.Itee && Window.Itee.Debug ) {\r\n\r\n            const diff    = new Date().valueOf() - request._timeStart.valueOf()\r\n            const message = `${this.constructor.name} close request [${request._id}] on ${diff}ms.` +\r\n                `Waiting queue: ${this._waitingQueue.length}` +\r\n                `Request queue: ${this._requestQueue.length}` +\r\n                `Process queue: ${this._processQueue.length}` +\r\n                `==========================`\r\n            this.logger.debug( message )\r\n\r\n        }\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    _retrieveCachedValues ( ids ) {\r\n\r\n        let results      = {}\r\n        let underRequest = []\r\n        let toRequest    = []\r\n\r\n        for ( let idIndex = 0, numberOfIds = ids.length ; idIndex < numberOfIds ; idIndex++ ) {\r\n\r\n            const id          = ids[ idIndex ]\r\n            const cachedValue = this._cache.get( id )\r\n\r\n            if ( isDefined( cachedValue ) ) {\r\n                results[ id ] = cachedValue\r\n            } else if ( isNull( cachedValue ) ) { // In request\r\n                underRequest.push( id )\r\n            } else {\r\n                toRequest.push( id )\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            results,\r\n            underRequest,\r\n            toRequest\r\n        }\r\n\r\n    }\r\n\r\n    _updateCache ( datas ) {\r\n\r\n        if ( isNull( datas ) ) { throw new TypeError( 'Data cannot be null ! Expect an array of object.' ) }\r\n        if ( isUndefined( datas ) ) { throw new TypeError( 'Data cannot be undefined ! Expect an array of object.' ) }\r\n\r\n        let _datas = {}\r\n        if ( isArray( datas ) ) {\r\n\r\n            for ( let key in datas ) {\r\n                _datas[ datas[ key ]._id ] = datas[ key ]\r\n            }\r\n\r\n        } else {\r\n\r\n            _datas = datas\r\n\r\n        }\r\n\r\n        for ( let [ id, data ] of Object.entries( _datas ) ) {\r\n\r\n            const cachedResult = this._cache.get( id )\r\n\r\n            if ( isNull( cachedResult ) ) {\r\n                this._cache.add( id, data, true )\r\n            } else if ( isUndefined( cachedResult ) ) {\r\n                this.logger.warn( 'Cache was not pre-allocated with null value.' )\r\n                this._cache.add( id, data )\r\n            } else {\r\n                this.logger.error( 'Cached value already exist !' )\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _updateWaitingQueue () {\r\n\r\n        const haveNoRequestToProcess = ( this._requestQueue.length === 0 && this._processQueue.length === 0 )\r\n\r\n        for ( let requestIndex = this._waitingQueue.length - 1 ; requestIndex >= 0 ; requestIndex-- ) {\r\n\r\n            const demand = this._waitingQueue[ requestIndex ]\r\n\r\n            // Update requested datas\r\n            for ( let dataIndex = demand.underRequest.length - 1 ; dataIndex >= 0 ; dataIndex-- ) {\r\n\r\n                const id           = demand.underRequest[ dataIndex ]\r\n                const cachedResult = this._cache.get( id )\r\n\r\n                if ( isNotDefined( cachedResult ) ) { continue }\r\n\r\n                // Assign the cached value\r\n                demand.results[ id ] = cachedResult\r\n\r\n                // Remove the requested object that is now added\r\n                demand.underRequest.splice( demand.underRequest.indexOf( id ), 1 )\r\n\r\n            }\r\n\r\n            // Check if request is now fullfilled\r\n            const demandIsComplet = ( demand.underRequest.length === 0 )\r\n            if ( demandIsComplet ) {\r\n\r\n                this._waitingQueue.splice( requestIndex, 1 )\r\n                demand.onLoadCallback( demand.results )\r\n\r\n            } else if ( !demandIsComplet && haveNoRequestToProcess /* && haveTryAgainManyTimesButFail */ ) {\r\n\r\n                this.logger.warn( 'Incomplet demand but empty request/process queue' )\r\n                this._waitingQueue.splice( requestIndex, 1 )\r\n                demand.onLoadCallback( demand.results )\r\n\r\n            } else {\r\n\r\n                // Wait next response\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @abstract\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The abstract private _onArrayBuffer method must be overridden in case the parser expect an array buffer as input data.\r\n     *\r\n     * @param {ArrayBuffer} data - The retrieved data to parse.\r\n     * @param {function} onSuccess - The onLoad callback, which is call when parser parse with success the data.\r\n     * @param {function} onProgress - The onProgress callback, which is call during the parsing.\r\n     * @param {function} onError - The onError callback, which is call when parser throw an error during parsing.\r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    _onArrayBuffer ( data, onSuccess, onProgress, onError ) {}\r\n\r\n    /**\r\n     * @private\r\n     * @abstract\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The abstract private _onBlob method must be overridden in case the parser expect a blob as input data.\r\n     *\r\n     * @param {Blob} data - The retrieved data to parse.\r\n     * @param {function} onSuccess - The onLoad callback, which is call when parser parse with success the data.\r\n     * @param {function} onProgress - The onProgress callback, which is call during the parsing.\r\n     * @param {function} onError - The onError callback, which is call when parser throw an error during parsing.\r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    _onBlob ( data, onSuccess, onProgress, onError ) {}\r\n\r\n    /**\r\n     * @private\r\n     * @abstract\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The abstract private _onJson method must be overridden in case the parser expect json as input data.\r\n     *\r\n     * @param {json} data - The retrieved data to parse.\r\n     * @param {function} onSuccess - The onLoad callback, which is call when parser parse with success the data.\r\n     * @param {function} onProgress - The onProgress callback, which is call during the parsing.\r\n     * @param {function} onError - The onError callback, which is call when parser throw an error during parsing.\r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    _onJson ( data, onSuccess, onProgress, onError ) {}\r\n\r\n    /**\r\n     * @private\r\n     * @abstract\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The abstract private _onText method must be overridden in case the parser expect a string/text as input data.\r\n     *\r\n     * @param {string} data - The retrieved data to parse.\r\n     * @param {function} onSuccess - The onLoad callback, which is call when parser parse with success the data.\r\n     * @param {function} onProgress - The onProgress callback, which is call during the parsing.\r\n     * @param {function} onError - The onError callback, which is call when parser throw an error during parsing.\r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    _onText ( data, onSuccess, onProgress, onError ) {}\r\n\r\n    // REST Api calls\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _create method allow to format a server request to create objects with the given data and get creation result with given callbacks.\r\n     *\r\n     * @param {object} data - The data to send.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    _createOne ( data, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:          `createOne_${Generate.id}`,\r\n            _timeStart:   new Date(),\r\n            _type:        RequestType.CreateOne,\r\n            method:       HttpVerb.Create.value,\r\n            url:          this._basePath,\r\n            data:         data,\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    _createMany ( datas, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:          `createMany_${Generate.id}`,\r\n            _timeStart:   new Date(),\r\n            _type:        RequestType.CreateMany,\r\n            method:       HttpVerb.Create.value,\r\n            url:          this._basePath,\r\n            data:         datas,\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _updateOne method will format a server request to get a single object with the given id.\r\n     *\r\n     * @param {string} id - The object's id of the object to retrieve.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    _readOne ( id, projection, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        // Filter requested values by cached values\r\n        const datas = this._retrieveCachedValues( [ id ] )\r\n\r\n        // retrieveLocalStorageValues...\r\n\r\n        // getDatabaseValues()\r\n\r\n        if ( datas.toRequest.length === 0 ) {\r\n\r\n            if ( datas.underRequest.length === 0 ) {\r\n\r\n                onLoadCallback( datas.results )\r\n\r\n            } else {\r\n\r\n                datas[ 'onLoadCallback' ] = onLoadCallback\r\n                datas[ 'onProgressCallback' ] = onProgressCallback\r\n                datas[ 'onErrorCallback' ] = onErrorCallback\r\n                this._waitingQueue.push( datas )\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            datas[ 'onLoadCallback' ] = onLoadCallback\r\n            datas[ 'onProgressCallback' ] = onProgressCallback\r\n            datas[ 'onErrorCallback' ] = onErrorCallback\r\n            this._waitingQueue.push( datas )\r\n\r\n            try {\r\n                this._cache.add( id, null )\r\n                datas.underRequest.push( id )\r\n                datas.toRequest.splice( datas.toRequest.indexOf( id ), 1 )\r\n            } catch ( error ) {\r\n                this.logger.error( error )\r\n            }\r\n\r\n            this._idToRequest.push( id )\r\n            this.aggregateQueue()\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _readMany method will format a server request to get objects with id in the ids array.\r\n     *\r\n     * @param {array.<string>} ids - The ids of objects to retrieve.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    _readMany ( ids, projection, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        // Filter requested values by cached values\r\n        const datas = this._retrieveCachedValues( ids )\r\n\r\n        // retrieveLocalStorageValues...\r\n\r\n        // getDatabaseValues()\r\n\r\n        if ( datas.toRequest.length === 0 ) {\r\n\r\n            if ( datas.underRequest.length === 0 ) {\r\n\r\n                onLoadCallback( datas.results )\r\n\r\n            } else {\r\n\r\n                datas[ 'onLoadCallback' ] = onLoadCallback\r\n                datas[ 'onProgressCallback' ] = onProgressCallback\r\n                datas[ 'onErrorCallback' ] = onErrorCallback\r\n                this._waitingQueue.push( datas )\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            datas[ 'onLoadCallback' ] = onLoadCallback\r\n            datas[ 'onProgressCallback' ] = onProgressCallback\r\n            datas[ 'onErrorCallback' ] = onErrorCallback\r\n            this._waitingQueue.push( datas )\r\n\r\n            const datasToRequest = datas.toRequest\r\n            let id               = undefined\r\n            for ( let idIndex = datasToRequest.length - 1 ; idIndex >= 0 ; idIndex-- ) {\r\n\r\n                id = datasToRequest[ idIndex ]\r\n\r\n                // Prepare entry for id to request\r\n                try {\r\n                    this._cache.add( id, null )\r\n                    datas.underRequest.push( id )\r\n                    datas.toRequest.splice( datas.toRequest.indexOf( id ), 1 )\r\n                } catch ( error ) {\r\n                    this.logger.error( error )\r\n                }\r\n\r\n                this._idToRequest.push( id )\r\n\r\n            }\r\n\r\n            this.aggregateQueue()\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _readWhere ( query, projection, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        //        // Filter requested values by cached values\r\n        //                const datas = {\r\n        //                    results: {},\r\n        //                    underRequest: [],\r\n        //                    toRequest: []\r\n        //                }\r\n        //\r\n        //        datas[ 'onLoadCallback' ] = onLoadCallback\r\n        //        this._waitingQueue.push( datas )\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `readWhere_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.ReadWhere,\r\n            method:     HttpVerb.Read.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                query,\r\n                projection\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    _readAll ( projection, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        //        const datas = {\r\n        //            results: {},\r\n        //            underRequest: [],\r\n        //            toRequest: []\r\n        //        }\r\n        //\r\n        //        datas[ 'onLoadCallback' ] = onLoadCallback\r\n        //        this._waitingQueue.push( datas )\r\n\r\n        const query = {}\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `readAll_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.ReadAll,\r\n            method:     HttpVerb.Read.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                query,\r\n                projection\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _updateOne method will format a server request to update a single object with the given id.\r\n     *\r\n     * @param {string} id - The object's id of the object to update.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    _updateOne ( id, update, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `updateOne_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.UpdateOne,\r\n            method:     HttpVerb.Update.value,\r\n            url:        `${this._basePath}/${id}`,\r\n            data:       {\r\n                update\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _updateMany method will format a server request to update objects with id in the ids array.\r\n     *\r\n     * @param {array.<string>} ids - The ids of objects to update.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    _updateMany ( ids, update, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `updateMany_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.UpdateMany,\r\n            method:     HttpVerb.Update.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                ids,\r\n                update\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    _updateWhere ( query, update, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `updateWhere_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.UpdateWhere,\r\n            method:     HttpVerb.Update.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                query,\r\n                update\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    _updateAll ( update, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        const query = {}\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `updateAll_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.UpdateAll,\r\n            method:     HttpVerb.Update.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                query,\r\n                update\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _deleteOne method will format a server request to delete a single object with the given id.\r\n     *\r\n     * @param {string} id - The object's id of the object to delete.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    _deleteOne ( id, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:          `deleteOne_${Generate.id}`,\r\n            _timeStart:   new Date(),\r\n            _type:        RequestType.DeleteOne,\r\n            method:       HttpVerb.Delete.value,\r\n            url:          `${this._basePath}/${id}`,\r\n            data:         null,\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @memberOf TDataBaseManager.prototype\r\n     * @description The private _deleteMany method will format a server request to delete objects with id in the ids array.\r\n     *\r\n     * @param {array.<string>} ids - The ids of objects to delete.\r\n     * @param {function} onLoadCallback - The onLoad callback, which is call when server respond with success to the request.\r\n     * @param {function} onProgressCallback - The onProgress callback, which is call during the response incoming.\r\n     * @param {function} onErrorCallback - The onError callback, which is call when server respond with an error to the request.\r\n     */\r\n    _deleteMany ( ids, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `deleteMany_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.DeleteMany,\r\n            method:     HttpVerb.Delete.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                ids\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    _deleteWhere ( query, onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `deleteWhere_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.DeleteWhere,\r\n            method:     HttpVerb.Delete.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                query\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n    _deleteAll ( onLoadCallback, onProgressCallback, onErrorCallback ) {\r\n\r\n        const query = {}\r\n\r\n        this._requestQueue.push( {\r\n            _id:        `deleteAll_${Generate.id}`,\r\n            _timeStart: new Date(),\r\n            _type:      RequestType.DeleteAll,\r\n            method:     HttpVerb.Delete.value,\r\n            url:        this._basePath,\r\n            data:       {\r\n                query\r\n            },\r\n            onLoad:       onLoadCallback,\r\n            onProgress:   onProgressCallback,\r\n            onError:      onErrorCallback,\r\n            responseType: this._responseType\r\n        } )\r\n\r\n        this.processQueue()\r\n\r\n    }\r\n\r\n}\r\n\r\n// Static stuff\r\n\r\nTDataBaseManager._requestId = 0\r\n\r\nTDataBaseManager._requests = {\r\n    waitingQueue: {},\r\n    toProcess:    {\r\n        create: {},\r\n        read:   {},\r\n        update: {},\r\n        delete: {}\r\n    },\r\n    underProcess: {\r\n        create: {},\r\n        read:   {},\r\n        update: {},\r\n        delete: {}\r\n    },\r\n    processed: {\r\n        create: {},\r\n        read:   {},\r\n        update: {},\r\n        delete: {}\r\n    }\r\n}\r\n//TDataBaseManager._orchestrator = TOrchestrator\r\n\r\nexport { TDataBaseManager }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport {\r\n    isNotNumber,\r\n    isNotString,\r\n    isNull,\r\n    isUndefined\r\n} from 'itee-validators'\r\n\r\n//\r\n//const TIdFactoryType = Object.freeze( {\r\n//    Number: 0,\r\n//    String: 1,\r\n//    Uuid:   2,\r\n//    includes ( key ) {\r\n//        return isNotUndefined( TIdFactoryType[ key ] )\r\n//    },\r\n//    availablesTypes () {\r\n//        return [ 'Number', 'String', 'UUID' ]\r\n//    }\r\n//} )\r\n\r\nconst TIdFactoryType = Object.freeze( Object.defineProperties( {}, {\r\n    Number: {\r\n        value:      0,\r\n        enumerable: true\r\n    },\r\n    String: {\r\n        value:      1,\r\n        enumerable: true\r\n    },\r\n    Uuid: {\r\n        value:      2,\r\n        enumerable: true\r\n    },\r\n    includes: {\r\n        value: function includes ( key ) {\r\n            return Object.values( this ).includes( key )\r\n        }\r\n    },\r\n    types: {\r\n        value: function types () {\r\n            return Object.keys( this )\r\n        }\r\n    }\r\n\r\n} ) )\r\n\r\nclass TIdFactory {\r\n\r\n    constructor ( type = TIdFactoryType.Number, base = null ) {\r\n\r\n        this.type = type\r\n        this.base = base\r\n\r\n        this._counter = 0\r\n\r\n    }\r\n\r\n    get type () {\r\n        return this._type\r\n    }\r\n\r\n    set type ( value ) {\r\n\r\n        if ( isNull( value ) ) { throw new Error( `Type cannot be null ! Expect an value from TIdFactoryType enum: ${TIdFactoryType.types()}` ) }\r\n        if ( isUndefined( value ) ) { throw new Error( `Type cannot be undefined ! Expect an value from TIdFactoryType enum: ${TIdFactoryType.types()}` ) }\r\n        if ( !TIdFactoryType.includes( value ) ) { throw new Error( `Invalide type ! Expect an value from TIdFactoryType enum: ${TIdFactoryType.types()}` ) }\r\n\r\n        this._type = value\r\n    }\r\n\r\n    get base () {\r\n        return this._base\r\n    }\r\n\r\n    set base ( value ) {\r\n\r\n        if ( isUndefined( value ) ) { throw new Error( 'Base cannot be undefined ! Expect an instance of Object3D.' ) }\r\n\r\n        if ( ( this._type === TIdFactoryType.Number ) && isNotNumber( value ) ) { throw new Error( 'Invalide Base ! It does not match the type.' ) }\r\n        if ( ( this._type === TIdFactoryType.String ) && isNotString( value ) ) { throw new Error( 'Invalide Base ! It does not match the type.' ) }\r\n        //        if( (this._type === TIdFactoryType.Uuid) && isNotUuid( value ) ) { throw new Error( 'Invalide Base ! It does not match the type.' ) }\r\n\r\n        this._base = value\r\n    }\r\n\r\n    setType ( value ) {\r\n\r\n        this.type = value\r\n        return this\r\n\r\n    }\r\n\r\n    setBase ( value ) {\r\n\r\n        this.base = value\r\n        return this\r\n\r\n    }\r\n\r\n    createId () {\r\n        return this._base + this._counter++\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    TIdFactory,\r\n    TIdFactoryType\r\n}\r\n"],"names":["FileFormat","toEnum","Asc","value","Dae","Dbf","Fbx","Mtl","Json","Obj","Shp","Stl","HttpStatusCode","Continue","SwitchingProtocols","Processing","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ContentDifferent","IMUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","TooManyRedirects","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeOut","Conflict","Gone","LengthRequired","PreconditionFailed","RequestEntityTooLarge","RequestRangeUnsatisfiable","ExpectationFailed","ImATeapot","BadMapping","UnprocessableEntity","Locked","MethodFailure","UnorderedCollection","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","NoResponse","RetryWith","BlockedByWindowsParentalControls","UnavailableForLegalReasons","UnrecoverableError","SSLCertificateError","SSLCertificateRequired","HTTPRequestSentToHTTPSPort","ClientClosedRequest","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeOut","HTTPVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","BandwidthLimitExceeded","NotExtended","NetworkAuthenticationRequired","UnknownError","WebServerIsDown","ConnectionTimedOut","OriginIsUnreachable","ATimeoutOccured","SSLHandshakeFailed","InvalidSSLCertificate","RailgunError","HttpVerb","Create","Read","Update","Delete","Keys","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","INSERT","DELETE","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","HEIGHT","NINE","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","LEFT_WINDOW_KEY","RIGHT_WINDOW_KEY","SELECT_KEY","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","MULTIPLY","ADD","SUBSTRACT","DECIMAL_POINT","DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","SEMICOLON","EQUAL","COMMA","DASH","PERIODE","SLASH","GRAVE_ACCENT","OPEN_SQUARE_BRACKET","BACKSLASH","CLOSE_SQUARE_BRACKET","SINGLE_QUOTE","MimeType","Mouse","WHEEL","LEFT","MIDDLE","RIGHT","ResponseType","ArrayBuffer","Blob","Document","DOMString","Default","TStore","[object Object]","validators","validatorIndex","numberOfValidators","length","validator","error","isString","TypeError","isFunction","parameters","_parameters","collection","allowOverride","keyValidators","valueValidators","this","_collection","expect","isNull","isUndefined","isNotObject","constructor","name","_allowOverride","isNotBoolean","_keyValidators","isNotArray","_valueValidators","keys","Object","values","key","force","contain","_validate","isNotUndefined","TAbstractFactory","super","TCloningFactory","create","get","clone","TInstancingFactory","LogOutput","Console","Html","Toast","File","Database","All","LogType","Message","Progress","Time","LogLevel","None","Debug","Info","Warning","Error","TLogger","level","levelString","outputLevel","outputs","_logsArray","_timers","_counterTrace","_outputLevel","_outputs","datas","tmpLevel","_levelToString","isObject","_formatObjectError","isArrayOfString","toString","isArrayOfObject","dataIndex","numberOfDatas","_formatTrace","message","type","_dispatchMessage","_dispatchProgress","_dispatchTime","RangeError","data","_dispatchErrorMessage","_dispatchWarningMessage","_dispatchInfoMessage","_dispatchDebugMessage","errorMessage","console","span","document","createElement","classList","add","innerText","body","appendChild","warnMessage","warn","infoMessage","log","debugMessage","progress","formattedMessage","_dispatchInfoProgress","_dispatchDebugProgress","infoProgress","debugProgress","time","debug","dispatch","info","warning","preventDefault","cancelable","stopImmediatePropagation","lengthComputable","loaded","total","Math","round","Date","getTime","DefaultLogger","TKeyboardController","keyCode","k","String","fromCharCode","event","keyName","status","pressed","down","up","updatedPreviously","addEventListener","onKeyDown","onKeyUp","list","arg","TMouseController","Endianness","Little","Big","Byte","One","Two","Four","Height","TBinaryReader","buffer","offset","endianness","_updateDataView","_buffer","isNotArrayBuffer","_offset","_length","byteLength","isNotNumber","_endianness","endianess","increment","currentOffset","_dataView","DataView","nBytes","getUint8","array","i","push","getBoolean","getInt8","_getAndUpdateOffsetBy","getInt16","getUint16","getInt32","getUint32","low","high","getInt64","getUint64","getFloat32","getFloat64","trim","string","charCode","size","slice","Generate","_id","id","RequestType","CreateOne","CreateMany","ReadOne","ReadMany","ReadWhere","ReadAll","UpdateOne","UpdateMany","UpdateWhere","UpdateAll","DeleteOne","DeleteMany","DeleteWhere","DeleteAll","TDataBaseManager","requestId","_requestId","basePath","responseType","bunchSize","requestAggregationTime","requestsConcurrency","logger","_cache","_waitingQueue","_aggregateQueue","_requestQueue","_processQueue","_aggregationTimeoutId","_idToRequest","_basePath","isNotString","isEmptyString","isBlankString","_responseType","_bunchSize","isNumberPositive","_requestAggregationTime","isNumberNegative","_requestsConcurrency","isZero","_logger","clearTimeout","setTimeout","datasToRequest","idBunch","idIndex","pop","_timeStart","_type","method","url","ids","processQueue","call","requestSkull","request","XMLHttpRequest","onloadstart","_onLoadStart","bind","onload","_onLoad","_onEnd","onLoad","_onProgress","onProgress","_onError","onError","onloadend","_onLoadEnd","onprogress","onreadystatechange","_onReadyStateChange","onabort","_onAbort","onerror","ontimeout","_onTimeout","open","setRequestHeader","dataToSend","JSON","stringify","send","loadStartEvent","loadEndEvent","readyStateEvent","abortEvent","timeoutEvent","onLoadCallback","onProgressCallback","onErrorCallback","isArray","isNotEmptyArray","isArrayOfSingleElement","_createOne","_createMany","isNotEmptyObject","condition","projection","isNotEmptyString","isNotBlankString","_readOne","_readMany","isEmptyObject","_readAll","_readWhere","update","isNotDefined","_updateOne","_updateMany","_updateAll","_updateWhere","_deleteOne","_deleteMany","_deleteAll","_deleteWhere","loadEvent","target","response","_dispatchResponse","progressEvent","isDefined","errorEvent","_closeRequest","_updateCache","_updateWaitingQueue","_onArrayBuffer","_onBlob","_onJson","_onText","splice","indexOf","Window","Itee","diff","valueOf","results","underRequest","toRequest","numberOfIds","cachedValue","_datas","entries","cachedResult","haveNoRequestToProcess","requestIndex","demand","demandIsComplet","onSuccess","_retrieveCachedValues","aggregateQueue","undefined","query","_requests","waitingQueue","toProcess","read","delete","underProcess","processed","TIdFactoryType","freeze","defineProperties","Number","enumerable","Uuid","includes","types","TIdFactory","base","_counter","_base"],"mappings":"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"}