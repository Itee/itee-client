this.Itee=this.Itee||{},this.Itee.Client=function(e,t,s,r){"use strict";const a=t.toEnum({Asc:{value:"asc"},Dae:{value:"dae"},Dbf:{value:"dbf"},Fbx:{value:"fbx"},Mtl:{value:"mtl"},Json:{value:"json"},Obj:{value:"obj"},Shp:{value:"shp"},Stl:{value:"stl"}}),n=t.toEnum({Continue:{value:100},SwitchingProtocols:{value:101},Processing:{value:102},Ok:{value:200},Created:{value:201},Accepted:{value:202},NonAuthoritativeInformation:{value:203},NoContent:{value:204},ResetContent:{value:205},PartialContent:{value:206},MultiStatus:{value:207},AlreadyReported:{value:208},ContentDifferent:{value:210},IMUsed:{value:226},MultipleChoices:{value:300},MovedPermanently:{value:301},Found:{value:302},SeeOther:{value:303},NotModified:{value:304},UseProxy:{value:305},Unused:{value:306},TemporaryRedirect:{value:307},PermanentRedirect:{value:308},TooManyRedirects:{value:310},BadRequest:{value:400},Unauthorized:{value:401},PaymentRequired:{value:402},Forbidden:{value:403},NotFound:{value:404},MethodNotAllowed:{value:405},NotAcceptable:{value:406},ProxyAuthenticationRequired:{value:407},RequestTimeOut:{value:408},Conflict:{value:409},Gone:{value:410},LengthRequired:{value:411},PreconditionFailed:{value:412},RequestEntityTooLarge:{value:413},RequestRangeUnsatisfiable:{value:416},ExpectationFailed:{value:417},ImATeapot:{value:418},BadMapping:{value:421},UnprocessableEntity:{value:422},Locked:{value:423},MethodFailure:{value:424},UnorderedCollection:{value:425},UpgradeRequired:{value:426},PreconditionRequired:{value:428},TooManyRequests:{value:429},RequestHeaderFieldsTooLarge:{value:431},NoResponse:{value:444},RetryWith:{value:449},BlockedByWindowsParentalControls:{value:450},UnavailableForLegalReasons:{value:451},UnrecoverableError:{value:456},SSLCertificateError:{value:495},SSLCertificateRequired:{value:496},HTTPRequestSentToHTTPSPort:{value:497},ClientClosedRequest:{value:499},InternalServerError:{value:500},NotImplemented:{value:501},BadGateway:{value:502},ServiceUnavailable:{value:503},GatewayTimeOut:{value:504},HTTPVersionNotSupported:{value:505},VariantAlsoNegotiates:{value:506},InsufficientStorage:{value:507},LoopDetected:{value:508},BandwidthLimitExceeded:{value:509},NotExtended:{value:510},NetworkAuthenticationRequired:{value:511},UnknownError:{value:520},WebServerIsDown:{value:521},ConnectionTimedOut:{value:522},OriginIsUnreachable:{value:523},ATimeoutOccured:{value:524},SSLHandshakeFailed:{value:525},InvalidSSLCertificate:{value:526},RailgunError:{value:527}}),o=t.toEnum({Create:{value:"PUT"},Read:{value:"POST"},Update:{value:"PATCH"},Delete:{value:"DELETE"}}),i=t.toEnum({BACKSPACE:{value:8},TAB:{value:9},ENTER:{value:13},SHIFT:{value:16},CTRL:{value:17},ALT:{value:18},PAUSE:{value:19},CAPS_LOCK:{value:20},ESCAPE:{value:27},SPACE:{value:32},PAGE_UP:{value:33},PAGE_DOWN:{value:34},END:{value:35},HOME:{value:36},LEFT_ARROW:{value:37},UP_ARROW:{value:38},RIGHT_ARROW:{value:39},DOWN_ARROW:{value:40},INSERT:{value:45},DELETE:{value:46},ZERO:{value:48},ONE:{value:49},TWO:{value:50},THREE:{value:51},FOUR:{value:52},FIVE:{value:53},SIX:{value:54},SEVEN:{value:55},HEIGHT:{value:56},NINE:{value:57},A:{value:65},B:{value:66},C:{value:67},D:{value:68},E:{value:69},F:{value:70},G:{value:71},H:{value:72},I:{value:73},J:{value:74},K:{value:75},L:{value:76},M:{value:77},N:{value:78},O:{value:79},P:{value:80},Q:{value:81},R:{value:82},S:{value:83},T:{value:84},U:{value:85},V:{value:86},W:{value:87},X:{value:88},Y:{value:89},Z:{value:90},LEFT_WINDOW_KEY:{value:91},RIGHT_WINDOW_KEY:{value:92},SELECT_KEY:{value:93},NUMPAD_0:{value:96},NUMPAD_1:{value:97},NUMPAD_2:{value:98},NUMPAD_3:{value:99},NUMPAD_4:{value:100},NUMPAD_5:{value:101},NUMPAD_6:{value:102},NUMPAD_7:{value:103},NUMPAD_8:{value:104},NUMPAD_9:{value:105},MULTIPLY:{value:106},ADD:{value:107},SUBSTRACT:{value:109},DECIMAL_POINT:{value:110},DIVIDE:{value:111},F1:{value:112},F2:{value:113},F3:{value:114},F4:{value:115},F5:{value:116},F6:{value:117},F7:{value:118},F8:{value:119},F9:{value:120},F10:{value:121},F11:{value:122},F12:{value:123},NUM_LOCK:{value:144},SCROLL_LOCK:{value:145},SEMICOLON:{value:186},EQUAL:{value:187},COMMA:{value:188},DASH:{value:189},PERIODE:{value:190},SLASH:{value:191},GRAVE_ACCENT:{value:192},OPEN_SQUARE_BRACKET:{value:219},BACKSLASH:{value:220},CLOSE_SQUARE_BRACKET:{value:221},SINGLE_QUOTE:{value:222}}),u=t.toEnum({}),l=t.toEnum({Wheel:{value:-1},Left:{value:0},Middle:{value:1},Right:{value:2}}),h=t.toEnum({ArrayBuffer:{value:"arraybuffer"},Blob:{value:"blob"},Document:{value:"document"},Json:{value:"json"},DOMString:{value:"text"},Default:{value:""}});
/**
	 * @class
	 * @classdesc TStore is a simple javascript object whose purpose is to store some ket/value data to future usage. It could be enable/disable.
	 *
	 * @example {@lang javascript}
	 * var cache = new TCache()
	 * cache.add( 'foo', 'bar' )
	 * TLogger.log( cache.get('foo') ) // 'bar'
	 *
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 */
class d{static _validate(e,t){for(let r=0,a=t.length;r<a;r++){let a=t[r];if(!a.validator(e)){const t=a.error;throw s.isString(t)?new TypeError(t):s.isFunction(t)?new TypeError(t(e)):new TypeError(`${e} is invalid.`)}}}constructor(e={}){const t={collection:{},allowOverride:!1,keyValidators:[],valueValidators:[],...e};this.collection=t.collection,this.allowOverride=t.allowOverride,this.keyValidators=t.keyValidators,this.valueValidators=t.valueValidators}get collection(){return this._collection}set collection(e){const t="Expect an object.";if(s.isNull(e))throw new TypeError(`Collection cannot be null ! ${t}`);if(s.isUndefined(e))throw new TypeError(`Collection cannot be undefined ! ${t}`);if(s.isNotObject(e))throw new TypeError(`Collection cannot be an instance of ${e.constructor.name} ! ${t}`);this._collection=e}get allowOverride(){return this._allowOverride}set allowOverride(e){const t="Allow override",r="Expect a boolean.";if(s.isNull(e))throw new TypeError(`${t} cannot be null ! ${r}`);if(s.isUndefined(e))throw new TypeError(`${t} cannot be undefined ! ${r}`);if(s.isNotBoolean(e))throw new TypeError(`${t} cannot be an instance of ${e.constructor.name} ! ${r}`);this._allowOverride=e}get keyValidators(){return this._keyValidators}set keyValidators(e){const t="Keys validators",r="Expect an array of TValidator or an empty array.";if(s.isNull(e))throw new TypeError(`${t} cannot be null ! ${r}`);if(s.isUndefined(e))throw new TypeError(`${t} cannot be undefined ! ${r}`);if(s.isNotArray(e))throw new TypeError(`${t} cannot be an instance of ${e.constructor.name} ! ${r}`);this._keyValidators=e}get valueValidators(){return this._valueValidators}set valueValidators(e){const t="Values validators",r="Expect an array of TValidator or an empty array.";if(s.isNull(e))throw new TypeError(`${t} cannot be null ! ${r}`);if(s.isUndefined(e))throw new TypeError(`${t} cannot be undefined ! ${r}`);if(s.isNotArray(e))throw new TypeError(`${t} cannot be an instance of ${e.constructor.name} ! ${r}`);this._valueValidators=e}get keys(){return Object.keys(this._collection)}get values(){return Object.values(this._collection)}setCollection(e){return this.collection=e,this}setAllowOverride(e){return this.allowOverride=e,this}setKeyValidators(e){return this.keyValidators(e),this}setValueValidators(e){return this.valueValidators(e),this}add(e,t,s=!1){if(this.contain(e)&&!this._allowOverride&&!s)throw new TypeError(`Item with key (${e}) already exist in collection !`);return d._validate(e,this._keyValidators),d._validate(t,this._valueValidators),this._collection[e]=t,this}contain(e){return s.isNotUndefined(this._collection[e])}get(e){return this._collection[e]}remove(e){return delete this._collection[e],this}clear(){return this._collection={},this}}
/**
	 * @class
	 * @classdesc The abstract class to create factory
	 * @abstract
	 * @extends TStore
	 *
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 */class c extends d{constructor(e={}){super({...e})}create(e,...t){}}
/**
	 * @class
	 * @classdesc The TCloningFactory is a kind a factory that performe instanciation by cloning a base instance.
	 * @extends TAbstractFactory
	 *
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 */
/**
	 * @class
	 * @classdesc TKeyboardController allow single source of thruth for keyboard state checking (based on Lee Stemkoski work).
	 * See TKeyboardController.k object data below for names of keys whose state can be polled
	 *
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 * @example {@lang javascript}
	 * // (1) create a global variable:
	 * var keyboard = new TKeyboardController();
	 *
	 * // (2) during main loop:
	 * keyboard.update();
	 *
	 * // (3) check state of keys:
	 * keyboard.down("A")    -- true for one update cycle after key is pressed
	 * keyboard.pressed("A") -- true as long as key is being pressed
	 * keyboard.up("A")      -- true for one update cycle after key is released
	 */
class g{static keyName(e){return null!==g.k[e]?g.k[e]:String.fromCharCode(e)}static onKeyUp(e){var t=g.keyName(e.keyCode);g.status[t]&&(g.status[t].pressed=!1)}static onKeyDown(e){var t=g.keyName(e.keyCode);g.status[t]||(g.status[t]={down:!1,pressed:!1,up:!1,updatedPreviously:!1})}constructor(e={}){document.addEventListener("keydown",g.onKeyDown,!1),document.addEventListener("keyup",g.onKeyUp,!1)}update(){for(var e in g.status)g.status[e].updatedPreviously?g.status[e].down=!1:(g.status[e].down=!0,g.status[e].pressed=!0,g.status[e].updatedPreviously=!0),g.status[e].up?delete g.status[e]:g.status[e].pressed||(g.status[e].up=!0)}down(e){return g.status[e]&&g.status[e].down}pressed(e){return g.status[e]&&g.status[e].pressed}up(e){return g.status[e]&&g.status[e].up}debug(){var e="Keys active: ";for(var t in g.status)e+=" "+t;r.DefaultLogger.log(e)}}g.k=i,g.status={};const p=t.toEnum({Little:!0,Big:!1}),_=t.toEnum({One:1,Two:2,Four:4,Height:8});const f=new
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @class TDataBaseManager
	 * @classdesc The base class of database managers. Give the basic interface about database call.
	 *
	 * @requires {@link HttpVerb}
	 * @requires {@link ResponseType}
	 * @requires {@link HttpStatusCode}
	 * @requires {@link TOrchestrator}
	 * @requires {@link TStore}
	 *
	 * @example Todo
	 *
	 */
class{constructor(){this._id=0}get id(){return this._id+=1,this._id}},y=t.toEnum({CreateOne:0,CreateMany:1,ReadOne:2,ReadMany:3,ReadWhere:4,ReadAll:5,UpdateOne:6,UpdateMany:7,UpdateWhere:8,UpdateAll:9,DeleteOne:10,DeleteMany:11,DeleteWhere:12,DeleteAll:13});class v{static get requestId(){return v._requestId++,v._requestId}constructor(e={}){const t={basePath:"/",responseType:h.Json,bunchSize:500,requestAggregationTime:200,requestsConcurrency:6,logger:r.DefaultLogger,...e};this.basePath=t.basePath,this.responseType=t.responseType,this.bunchSize=t.bunchSize,this.requestAggregationTime=t.requestAggregationTime,this.requestsConcurrency=t.requestsConcurrency,this.logger=t.logger,this._cache=new d,this._waitingQueue=[],this._aggregateQueue=[],this._requestQueue=[],this._processQueue=[],this._aggregationTimeoutId=null,this._idToRequest=[]}get basePath(){return this._basePath}set basePath(e){if(s.isNull(e))throw new TypeError("Base path cannot be null ! Expect a non empty string.");if(s.isUndefined(e))throw new TypeError("Base path cannot be undefined ! Expect a non empty string.");if(s.isNotString(e))throw new TypeError(`Base path cannot be an instance of ${e.constructor.name} ! Expect a non empty string.`);if(s.isEmptyString(e))throw new TypeError("Base path cannot be empty ! Expect a non empty string.");if(s.isBlankString(e))throw new TypeError("Base path cannot contain only whitespace ! Expect a non empty string.");this._basePath=e}get responseType(){return this._responseType}set responseType(e){if(s.isNull(e))throw new Error("TDataBaseManager: responseType cannot be null !");if(s.isNull(e))throw new TypeError("Response type cannot be null ! Expect a non empty string.");if(s.isUndefined(e))throw new TypeError("Response type cannot be undefined ! Expect a non empty string.");this._responseType=e}get bunchSize(){return this._bunchSize}set bunchSize(e){if(s.isNull(e))throw new TypeError("Bunch size cannot be null ! Expect a positive number.");if(s.isUndefined(e))throw new TypeError("Bunch size cannot be undefined ! Expect a positive number.");if(s.isNotNumber(e))throw new TypeError(`Bunch size cannot be an instance of ${e.constructor.name} ! Expect a positive number.`);if(!s.isNumberPositive(e))throw new TypeError("Bunch size cannot be lower or equal to zero ! Expect a positive number.");this._bunchSize=e}get requestAggregationTime(){return this._requestAggregationTime}set requestAggregationTime(e){if(s.isNull(e))throw new TypeError("Requests aggregation time cannot be null ! Expect a positive number.");if(s.isUndefined(e))throw new TypeError("Requests aggregation time cannot be undefined ! Expect a positive number.");if(s.isNotNumber(e))throw new TypeError(`Requests aggregation time cannot be an instance of ${e.constructor.name} ! Expect a positive number.`);if(s.isNumberNegative(e))throw new TypeError("Requests aggregation time cannot be lower or equal to zero ! Expect a positive number.");this._requestAggregationTime=e}get requestsConcurrency(){return this._requestsConcurrency}set requestsConcurrency(e){if(s.isNull(e))throw new TypeError("Minimum of simultaneous request cannot be null ! Expect a positive number.");if(s.isUndefined(e))throw new TypeError("Minimum of simultaneous request cannot be undefined ! Expect a positive number.");if(s.isNotNumber(e))throw new TypeError(`Minimum of simultaneous request cannot be an instance of ${e.constructor.name} ! Expect a positive number.`);if(s.isZero(e)||s.isNumberNegative(e))throw new TypeError("Minimum of simultaneous request cannot be lower or equal to zero ! Expect a positive number.");this._requestsConcurrency=e}get logger(){return this._logger}set logger(e){if(s.isNull(e))throw new TypeError("Progress manager cannot be null ! Expect an instance of TProgressManager.");if(s.isUndefined(e))throw new TypeError("Progress manager cannot be undefined ! Expect an instance of TProgressManager.");if(!(e instanceof r.TLogger))throw new TypeError(`Progress manager cannot be an instance of ${e.constructor.name} ! Expect an instance of TProgressManager.`);this._logger=e}setBasePath(e){return this.basePath=e,this}setResponseType(e){return this.responseType=e,this}setBunchSize(e){return this.bunchSize=e,this}setRequestAggregationTime(e){return this.requestAggregationTime=e,this}setRequestsConcurrency(e){return this.requestsConcurrency=e,this}setLogger(e){return this.logger=e,this}aggregateQueue(){clearTimeout(this._aggregationTimeoutId),this._aggregationTimeoutId=setTimeout((()=>{const e=this._idToRequest;let t=[];for(let s=e.length-1;s>=0;s--)t.push(e.pop()),t.length!==this._bunchSize&&0!==s||(this._requestQueue.push({_id:`readMany_${f.id}`,_timeStart:new Date,_type:y.ReadMany,method:o.Read.value,url:this._basePath,data:{ids:t},responseType:this._responseType}),t=[]);this.processQueue.call(this)}),this._requestAggregationTime)}processQueue(){for(;this._requestQueue.length>0&&this._processQueue.length<this._requestsConcurrency;){const n=this._requestQueue.pop();this._processQueue.push(n);const o=new XMLHttpRequest;o.onloadstart=e.bind(this),o.onload=this._onLoad.bind(this,n,this._onEnd.bind(this,n,n.onLoad),this._onProgress.bind(this,n.onProgress),this._onError.bind(this,n,n.onError)),o.onloadend=t.bind(this),o.onprogress=this._onProgress.bind(this,n.onProgress),o.onreadystatechange=s.bind(this),o.onabort=r.bind(this),o.onerror=this._onError.bind(this,n,n.onError),o.ontimeout=a.bind(this),o.open(n.method,n.url,!0),o.setRequestHeader("Content-Type","application/json"),o.setRequestHeader("Accept","application/json"),o.responseType=n.responseType.value;const i=n.data&&n.responseType===h.Json?JSON.stringify(n.data):n.data;o.send(i)}function e(e){this.logger.progress(e)}function t(e){this.logger.progress(e)}function s(e){this.logger.debug(e)}function r(e){this.logger.error(e)}function a(e){this.logger.error(e)}}create(e,t,r,a){s.isArray(e)&&s.isNotEmptyArray(e)?s.isArrayOfSingleElement(e)?this._createOne(e[0],t,r,a):this._createMany(e,t,r,a):s.isObject(e)&&s.isNotEmptyObject(e)?this._createOne(e,t,r,a):a("TDataBaseManager.create: Invalid data type, expect object or array of objects.")}read(e,t,r,a,n){s.isString(e)&&s.isNotEmptyString(e)&&s.isNotBlankString(e)?this._readOne(e,t,r,a,n):s.isArray(e)&&s.isNotEmptyArray(e)?s.isArrayOfSingleElement(e)?this._readOne(e[0],t,r,a,n):this._readMany(e,t,r,a,n):s.isObject(e)?s.isEmptyObject(e)?this._readAll(t,r,a,n):this._readWhere(e,t,r,a,n):n("TDataBaseManager.read: Invalid data type, expect string, object or array of objects.")}update(e,t,r,a,n){s.isNotDefined(t)?n("TDataBaseManager.update: Update data cannot be null or undefined !"):s.isNotObject(t)?n("TDataBaseManager.update: Invalid update data type. Expect an object."):s.isString(e)&&s.isNotEmptyString(e)&&s.isNotBlankString(e)?this._updateOne(e,t,r,a,n):s.isArray(e)&&s.isNotEmptyArray(e)?s.isArrayOfSingleElement(e)?this._updateOne(e[0],t,r,a,n):this._updateMany(e,t,r,a,n):s.isObject(e)?s.isEmptyObject(e)?this._updateAll(t,r,a,n):this._updateWhere(e,t,r,a,n):n("TDataBaseManager.update: Invalid data type, expect string, object or array of objects.")}delete(e,t,r,a){s.isString(e)&&s.isNotEmptyString(e)&&s.isNotBlankString(e)?this._deleteOne(e,t,r,a):s.isArray(e)&&s.isNotEmptyArray(e)?s.isArrayOfSingleElement(e)?this._deleteOne(e[0],t,r,a):this._deleteMany(e,t,r,a):s.isObject(e)?s.isEmptyObject(e)?this._deleteAll(t,r,a):this._deleteWhere(e,t,r,a):a("TDataBaseManager.delete: Invalid data type, expect null, string, object or array of objects.")}_onLoad(e,t,s,r,a){const o=a.target,i=o.status,u=o.response,l=o.responseType;switch(i){case n.Ok.value:this._dispatchResponse(u,l,t,s,r);break;case n.NonAuthoritativeInformation.value:case n.NoContent.value:case n.ResetContent.value:case n.PartialContent.value:case n.MultiStatus.value:case n.AlreadyReported.value:case n.ContentDifferent.value:case n.IMUsed.value:case n.MultipleChoices.value:case n.MovedPermanently.value:case n.Found.value:case n.SeeOther.value:case n.NotModified.value:case n.UseProxy.value:case n.Unused.value:case n.TemporaryRedirect.value:case n.PermanentRedirect.value:case n.TooManyRedirects.value:case n.BadRequest.value:case n.Unauthorized.value:case n.PaymentRequired.value:case n.Forbidden.value:case n.NotFound.value:case n.MethodNotAllowed.value:case n.NotAcceptable.value:case n.ProxyAuthenticationRequired.value:case n.RequestTimeOut.value:case n.Conflict.value:case n.Gone.value:case n.LengthRequired.value:case n.PreconditionFailed.value:case n.RequestEntityTooLarge.value:case n.RequestRangeUnsatisfiable.value:case n.ExpectationFailed.value:case n.ImATeapot.value:case n.BadMapping.value:case n.UnprocessableEntity.value:case n.Locked.value:case n.MethodFailure.value:case n.UnorderedCollection.value:case n.UpgradeRequired.value:case n.PreconditionRequired.value:case n.TooManyRequests.value:case n.RequestHeaderFieldsTooLarge.value:case n.NoResponse.value:case n.RetryWith.value:case n.BlockedByWindowsParentalControls.value:case n.UnavailableForLegalReasons.value:case n.UnrecoverableError.value:case n.SSLCertificateError.value:case n.SSLCertificateRequired.value:case n.HTTPRequestSentToHTTPSPort.value:case n.ClientClosedRequest.value:case n.InternalServerError.value:case n.NotImplemented.value:case n.BadGateway.value:case n.ServiceUnavailable.value:case n.GatewayTimeOut.value:case n.HTTPVersionNotSupported.value:case n.VariantAlsoNegotiates.value:case n.InsufficientStorage.value:case n.LoopDetected.value:case n.BandwidthLimitExceeded.value:case n.NotExtended.value:case n.NetworkAuthenticationRequired.value:case n.UnknownError.value:case n.WebServerIsDown.value:case n.ConnectionTimedOut.value:case n.OriginIsUnreachable.value:case n.ATimeoutOccured.value:case n.SSLHandshakeFailed.value:case n.InvalidSSLCertificate.value:case n.RailgunError.value:r(u);break;default:throw new RangeError(`Unmanaged HttpStatusCode: ${i}`)}}_onProgress(e,t){s.isDefined(this.logger)?this.logger.progress(t,e):s.isDefined(e)&&e(t)}_onError(e,t,r){this._closeRequest(e),s.isDefined(this.logger)?this.logger.error(r,t):s.isDefined(t)&&t(r)}_onEnd(e,t,s){const r=e._type;switch(r){case y.ReadOne:case y.ReadMany:this._updateCache(s),this._updateWaitingQueue();break;case y.ReadWhere:case y.ReadAll:this._updateCache(s),this._updateWaitingQueue(),t(s);break;case y.CreateOne:case y.CreateMany:case y.UpdateOne:case y.UpdateMany:case y.UpdateWhere:case y.UpdateAll:case y.DeleteOne:case y.DeleteMany:case y.DeleteWhere:case y.DeleteAll:t(s);break;default:throw new RangeError(`Invalid request type: ${r}`)}this._closeRequest(e)}_dispatchResponse(e,t,s,r,a){switch(t){case h.ArrayBuffer.value:this._onArrayBuffer(e,s,r,a);break;case h.Blob.value:this._onBlob(e,s,r,a);break;case h.Json.value:this._onJson(e,s,r,a);break;case h.DOMString.value:case h.Default.value:this._onText(e,s,r,a);break;default:throw new Error(`Unknown response type: ${t}`)}}_closeRequest(e){if(this._processQueue.splice(this._processQueue.indexOf(e),1),Window.Itee&&Window.Itee.Debug){const t=(new Date).valueOf()-e._timeStart.valueOf(),s=`${this.constructor.name} close request [${e._id}] on ${t}ms.Waiting queue: ${this._waitingQueue.length}Request queue: ${this._requestQueue.length}Process queue: ${this._processQueue.length}==========================`;this.logger.debug(s)}this.processQueue()}_retrieveCachedValues(e){let t={},r=[],a=[];for(let n=0,o=e.length;n<o;n++){const o=e[n],i=this._cache.get(o);s.isDefined(i)?t[o]=i:s.isNull(i)?r.push(o):a.push(o)}return{results:t,underRequest:r,toRequest:a}}_updateCache(e){if(s.isNull(e))throw new TypeError("Data cannot be null ! Expect an array of object.");if(s.isUndefined(e))throw new TypeError("Data cannot be undefined ! Expect an array of object.");let t={};if(s.isArray(e))for(let s in e)t[e[s]._id]=e[s];else t=e;for(let[e,r]of Object.entries(t)){const t=this._cache.get(e);s.isNull(t)?this._cache.add(e,r,!0):s.isUndefined(t)?(this.logger.warn("Cache was not pre-allocated with null value."),this._cache.add(e,r)):this.logger.error("Cached value already exist !")}}_updateWaitingQueue(){const e=0===this._requestQueue.length&&0===this._processQueue.length;for(let t=this._waitingQueue.length-1;t>=0;t--){const r=this._waitingQueue[t];for(let e=r.underRequest.length-1;e>=0;e--){const t=r.underRequest[e],a=this._cache.get(t);s.isNotDefined(a)||(r.results[t]=a,r.underRequest.splice(r.underRequest.indexOf(t),1))}const a=0===r.underRequest.length;a?(this._waitingQueue.splice(t,1),r.onLoadCallback(r.results)):!a&&e&&(this.logger.warn("Incomplet demand but empty request/process queue"),this._waitingQueue.splice(t,1),r.onLoadCallback(r.results))}}_onArrayBuffer(e,t,s,r){}_onBlob(e,t,s,r){}_onJson(e,t,s,r){}_onText(e,t,s,r){}_createOne(e,t,s,r){this._requestQueue.push({_id:`createOne_${f.id}`,_timeStart:new Date,_type:y.CreateOne,method:o.Create.value,url:this._basePath,data:e,onLoad:t,onProgress:s,onError:r,responseType:this._responseType}),this.processQueue()}_createMany(e,t,s,r){this._requestQueue.push({_id:`createMany_${f.id}`,_timeStart:new Date,_type:y.CreateMany,method:o.Create.value,url:this._basePath,data:e,onLoad:t,onProgress:s,onError:r,responseType:this._responseType}),this.processQueue()}_readOne(e,t,s,r,a){const n=this._retrieveCachedValues([e]);if(0===n.toRequest.length)0===n.underRequest.length?s(n.results):(n.onLoadCallback=s,n.onProgressCallback=r,n.onErrorCallback=a,this._waitingQueue.push(n));else{n.onLoadCallback=s,n.onProgressCallback=r,n.onErrorCallback=a,this._waitingQueue.push(n);try{this._cache.add(e,null),n.underRequest.push(e),n.toRequest.splice(n.toRequest.indexOf(e),1)}catch(e){this.logger.error(e)}this._idToRequest.push(e),this.aggregateQueue()}}_readMany(e,t,s,r,a){const n=this._retrieveCachedValues(e);if(0===n.toRequest.length)0===n.underRequest.length?s(n.results):(n.onLoadCallback=s,n.onProgressCallback=r,n.onErrorCallback=a,this._waitingQueue.push(n));else{n.onLoadCallback=s,n.onProgressCallback=r,n.onErrorCallback=a,this._waitingQueue.push(n);const e=n.toRequest;let t;for(let s=e.length-1;s>=0;s--){t=e[s];try{this._cache.add(t,null),n.underRequest.push(t),n.toRequest.splice(n.toRequest.indexOf(t),1)}catch(e){this.logger.error(e)}this._idToRequest.push(t)}this.aggregateQueue()}}_readWhere(e,t,s,r,a){this._requestQueue.push({_id:`readWhere_${f.id}`,_timeStart:new Date,_type:y.ReadWhere,method:o.Read.value,url:this._basePath,data:{query:e,projection:t},onLoad:s,onProgress:r,onError:a,responseType:this._responseType}),this.processQueue()}_readAll(e,t,s,r){this._requestQueue.push({_id:`readAll_${f.id}`,_timeStart:new Date,_type:y.ReadAll,method:o.Read.value,url:this._basePath,data:{query:{},projection:e},onLoad:t,onProgress:s,onError:r,responseType:this._responseType}),this.processQueue()}_updateOne(e,t,s,r,a){this._requestQueue.push({_id:`updateOne_${f.id}`,_timeStart:new Date,_type:y.UpdateOne,method:o.Update.value,url:`${this._basePath}/${e}`,data:{update:t},onLoad:s,onProgress:r,onError:a,responseType:this._responseType}),this.processQueue()}_updateMany(e,t,s,r,a){this._requestQueue.push({_id:`updateMany_${f.id}`,_timeStart:new Date,_type:y.UpdateMany,method:o.Update.value,url:this._basePath,data:{ids:e,update:t},onLoad:s,onProgress:r,onError:a,responseType:this._responseType}),this.processQueue()}_updateWhere(e,t,s,r,a){this._requestQueue.push({_id:`updateWhere_${f.id}`,_timeStart:new Date,_type:y.UpdateWhere,method:o.Update.value,url:this._basePath,data:{query:e,update:t},onLoad:s,onProgress:r,onError:a,responseType:this._responseType}),this.processQueue()}_updateAll(e,t,s,r){this._requestQueue.push({_id:`updateAll_${f.id}`,_timeStart:new Date,_type:y.UpdateAll,method:o.Update.value,url:this._basePath,data:{query:{},update:e},onLoad:t,onProgress:s,onError:r,responseType:this._responseType}),this.processQueue()}_deleteOne(e,t,s,r){this._requestQueue.push({_id:`deleteOne_${f.id}`,_timeStart:new Date,_type:y.DeleteOne,method:o.Delete.value,url:`${this._basePath}/${e}`,data:null,onLoad:t,onProgress:s,onError:r,responseType:this._responseType}),this.processQueue()}_deleteMany(e,t,s,r){this._requestQueue.push({_id:`deleteMany_${f.id}`,_timeStart:new Date,_type:y.DeleteMany,method:o.Delete.value,url:this._basePath,data:{ids:e},onLoad:t,onProgress:s,onError:r,responseType:this._responseType}),this.processQueue()}_deleteWhere(e,t,s,r){this._requestQueue.push({_id:`deleteWhere_${f.id}`,_timeStart:new Date,_type:y.DeleteWhere,method:o.Delete.value,url:this._basePath,data:{query:e},onLoad:t,onProgress:s,onError:r,responseType:this._responseType}),this.processQueue()}_deleteAll(e,t,s){this._requestQueue.push({_id:`deleteAll_${f.id}`,_timeStart:new Date,_type:y.DeleteAll,method:o.Delete.value,url:this._basePath,data:{query:{}},onLoad:e,onProgress:t,onError:s,responseType:this._responseType}),this.processQueue()}}v._requestId=0,v._requests={waitingQueue:{},toProcess:{create:{},read:{},update:{},delete:{}},underProcess:{create:{},read:{},update:{},delete:{}},processed:{create:{},read:{},update:{},delete:{}}};const m=t.toEnum({Number:0,String:1,Uuid:2});var w,b=new Uint8Array(16);function E(){if(!w&&!(w="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return w(b)}var T=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function O(e){return"string"==typeof e&&T.test(e)}for(var A=[],N=0;N<256;++N)A.push((N+256).toString(16).substr(1));function R(e,t,s){var r=(e=e||{}).random||(e.rng||E)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){s=s||0;for(var a=0;a<16;++a)t[s+a]=r[a];return t}return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=(A[e[t+0]]+A[e[t+1]]+A[e[t+2]]+A[e[t+3]]+"-"+A[e[t+4]]+A[e[t+5]]+"-"+A[e[t+6]]+A[e[t+7]]+"-"+A[e[t+8]]+A[e[t+9]]+"-"+A[e[t+10]]+A[e[t+11]]+A[e[t+12]]+A[e[t+13]]+A[e[t+14]]+A[e[t+15]]).toLowerCase();if(!O(s))throw TypeError("Stringified UUID is invalid");return s}(r)}class M{static isWebAPIMessage=!0;constructor(e){this._id=R(),this.type=e}get id(){return this._id}get type(){return this._type}set type(e){if(s.isNotString(e))throw new ReferenceError("WebAPIMessage type cannot be null or undefined !");if(s.isEmptyString(e))throw new TypeError("WebAPIMessage type cannot be an empty string !");this._type=e}toJSON(){return{id:this.id,type:this.type}}}class S extends M{static isWebAPIMessageData=!0;constructor(e){super("_data"),this.data=e}toJSON(){return{...super.toJSON(),data:JSON.stringify(this.data)}}}class q extends M{static isWebAPIMessageError=!0;constructor(e){super("_error"),this.message=e.message,this.stack=e.stack}toJSON(){return{...super.toJSON(),message:this.message,stack:this.stack}}}class C extends M{static isWebAPIMessageProgress=!0;constructor(e=0,t=0){super("_progress"),this.lengthComputable=!1,this.loaded=e,this.total=t}get loaded(){return this._loaded}set loaded(e){this._loaded=e,this._checkIfLengthComputable()}get total(){return this._total}set total(e){this._total=e,this._checkIfLengthComputable()}_checkIfLengthComputable(){this.lengthComputable=!1,this._total>0&&this._total<Number.MAX_SAFE_INTEGER&&this._loaded>=0&&this._loaded<Number.MAX_SAFE_INTEGER&&(this.lengthComputable=!0)}toJSON(){return{...super.toJSON(),lengthComputable:this.lengthComputable,loaded:this.loaded,total:this.total}}}class U extends M{static isWebAPIMessageReady=!0;constructor(){super("_ready")}}class P extends M{static isWebApiMessageResponse=!0;constructor(e,t){super("_response"),this.request=e,this.result=t}get request(){return this._request}set request(e){s.isNull(e)||s.isUndefined(e)||(this._request=e)}get result(){return this._result}set result(e){this._result=e}toJSON(){return{...super.toJSON(),request:this.request,result:this.result}}}class I{static isWorkerMessage=!0;constructor(e){this.type=e}get type(){return this._type}set type(e){this._type=e}toJSON(){return{type:this.type}}}class $ extends I{static isWorkerMessageData=!0;constructor(e,t){super(e),this.buffer=t}toJSON(){return{...super.toJSON(),buffer:this.buffer}}}class D extends I{static isWorkerMessageError=!0;constructor(e){super("error"),this.message=e.message,this.stack=e.stack}toJSON(){return{...super.toJSON(),message:this.message,stack:this.stack}}}class L extends I{static isWorkerMessageProgess=!0;constructor(e=0,t=0){super("progress"),this.lengthComputable=!1,this.loaded=e,this.total=t}get loaded(){return this._loaded}set loaded(e){this._loaded=e,this._checkIfLengthComputable()}get total(){return this._total}set total(e){this._total=e,this._checkIfLengthComputable()}_checkIfLengthComputable(){this.lengthComputable=!1,this._total>0&&this._total<Number.MAX_SAFE_INTEGER&&this._loaded>=0&&this._loaded<Number.MAX_SAFE_INTEGER&&(this.lengthComputable=!0)}toJSON(){return{...super.toJSON(),lengthComputable:this.lengthComputable,loaded:this.loaded,total:this.total}}}return e.AbstractWebAPI=class{constructor(e={}){const t={logger:r.DefaultLogger,allowAnyOrigins:!1,allowedOrigins:[],requestTimeout:2e3,...e};this.logger=t.logger,this._origin=window.location.origin,this._responses=new Map,window.addEventListener("message",this._onMessage.bind(this),!1),this.allowAnyOrigins=t.allowAnyOrigins,this.allowedOrigins=t.allowedOrigins,this.requestTimeout=t.requestTimeout,this._broadCastReadyMessage()}get logger(){return this._logger}set logger(e){if(s.isNull(e))throw new ReferenceError(`[${this._origin}]: The logger cannot be null, expect a TLogger.`);if(s.isUndefined(e))throw new ReferenceError(`[${this._origin}]: The logger cannot be undefined, expect a TLogger.`);if(!e.isLogger)throw new ReferenceError(`[${this._origin}]: The logger cannot be undefined, expect a TLogger.`);this._logger=e}get allowedOrigins(){return this._allowedOrigins}set allowedOrigins(e){this._allowedOrigins=[];const t=Array.isArray(e)?e:[e];for(let e=0,s=t.length;e<s;e++){const s=t[e];this._allowedOrigins.push({id:s.id||`origin_${Math.random().toString().slice(2)}`,uri:s.uri,methods:s.methods,window:this._getOriginWindow(s.uri),messageQueue:[],isReady:!1})}this._broadCastReadyMessage()}get requestTimeout(){return this._requestTimeout}set requestTimeout(e){if(s.isNull(e))throw new ReferenceError(`[${this._origin}]: The request timeout cannot be null, expect to be 0 or a positive number.`);if(s.isUndefined(e))throw new ReferenceError(`[${this._origin}]: The request timeout cannot be undefined, expect to be 0 or a positive number.`);if(s.isNotNumber(e))throw new ReferenceError(`[${this._origin}]: The request timeout expect to be 0 or a positive number.`);if(s.isNumberNegative(e)&&!s.isZero(e))throw new ReferenceError(`[${this._origin}]: The request timeout expect to be 0 or a positive number.`);this._requestTimeout=e}setAllowedOrigins(e){return this.allowedOrigins=e,this}setTargetOrigin(e){return this.targetOrigin=e,this}setRequestTimeout(e){return this.requestTimeout=e,this}_isInIframe(){try{return window.self!==window.top}catch(e){return!0}}_isNotAllowedForAllOrigins(){return!this.allowAnyOrigins}_isNotAllowedOrigin(e){return!this._allowedOrigins.map((e=>e.uri)).includes(e)}_isNotAllowedForAllMethods(e){return-1===e.methods.indexOf("*")}_isNotAllowedMethod(e,t){return-1===e.methods.indexOf(t)}_methodNotExist(e){return s.isNotDefined(this[e])}_getAllowedOriginById(e){return Object.values(this._allowedOrigins).find((t=>t.id===e))}_getAllowedOriginByURI(e){return Object.values(this._allowedOrigins).find((t=>t.uri===e))}_getOriginWindow(e){let t=null;if(this._isInIframe())t=window.parent;else{const r=document.getElementsByTagName("iframe"),a=Array.from(r).find((t=>t.src.includes(e)));s.isNotDefined(a)?(this.logger.warn(`[${this._origin}]: Unable to find iframe for [${e}] URI !`),t=null):t=a.contentWindow}return t}async _onMessage(e){if(this._isNotAllowedForAllOrigins()&&this._isNotAllowedOrigin(e.origin))return void this.logger.warn(`[${this._origin}]: An unallowed origin [${e.origin}] try to access the web api.`);let t=this._getAllowedOriginByURI(e.origin);s.isNotDefined(t)?(t={id:`origin_${Math.random().toString().slice(2)}`,uri:e.origin,methods:["*"],window:e.source,messageQueue:[],isReady:!1},this._allowedOrigins.push(t)):null===t.window&&(t.window=e.source);try{await this._dispatchMessageFrom(t,JSON.parse(e.data))}catch(e){this.postErrorTo(t.id,e)}}async _dispatchMessageFrom(e,t){if(s.isNotDefined(t))throw new ReferenceError(`[${this._origin}]: Message cannot be null or undefined ! Expect a json object.`);const r=t.type;"_ready"===r?(this.logger.log(`[${this._origin}]: Recieve '_ready' message from [${e.uri}].`),this.onReadyFrom(e,t)):"_progress"===r?(this.logger.log(`[${this._origin}]: Recieve '_progress' message from [${e.uri}].`),this.onProgressFrom(e,t)):"_error"===r?(this.logger.log(`[${this._origin}]: Recieve '_error' message from [${e.uri}].`),this.onErrorFrom(e,t)):"_response"===r?(this.logger.log(`[${this._origin}]: Recieve '_response' message from [${e.uri}].`),this.onResponseFrom(e,t)):"_request"===r?(this.logger.log(`[${this._origin}]: Recieve '_request' message from [${e.uri}].`),await this.onRequestFrom(e,t)):(this.logger.log(`[${this._origin}]: Recieve 'custom' message from [${e.uri}].`),this.onMessageFrom(e,t))}onReadyFrom(e,t){if(!e.isReady){e.isReady=!0;const t=new U;this.postMessageTo(e.id,t,!0)}const s=e.messageQueue;for(let t=s.length-1;t>=0;t--)this.postMessageTo(e.id,s.shift())}async onRequestFrom(e,t){const s=t.method;if(this._isNotAllowedForAllMethods(e)&&this._isNotAllowedMethod(e,s))throw new Error(`[${this._origin}]: Origin [${e}] try to access an unallowed method named ${s}.`);if(this._methodNotExist(s))throw new ReferenceError(`[${this._origin}]: Origin [${e.uri}] try to access an unexisting method named "${s}".`);const r=t.parameters;let a;try{const e=await this[s](...r);a=new S(e)}catch(e){a=new q(e)}const n=new P(t,a);this.postMessageTo(e.id,n)}onResponseFrom(e,t){this._responses.set(t.request.id,t)}onProgressFrom(e,t){}onErrorFrom(e,t){}onMessageFrom(e,t){}_broadCastReadyMessage(){const e=new U,t=setInterval((()=>{const r=this.allowedOrigins;r.map((e=>e.isReady)).includes(!1)?Object.values(r).forEach((t=>{t.isReady||t.isUnreachable||(s.isDefined(t.silent)?s.isFalse(t.silent)?this.postMessageTo(t.id,e,!0):t.isReady=!0:this.postMessageTo(t.id,e,!0))})):clearInterval(t)}),1e3)}postErrorTo(e,t){let s=null;s=t.isWebAPIMessageError?t:new q(t),this.postMessageTo(e,s.toJSON())}postProgressTo(e,t){let s=null;s=t.isWebAPIMessageProgress?t:new C(t.loaded,t.total),this.postMessageTo(e,s.toJSON())}postDataTo(e,t){let s=null;s=t.isWebAPIMessageData?t:new S(t),this.postMessageTo(e,s.toJSON())}postRequestTo(e,t){let r=0;return new Promise(((a,n)=>{try{this.postMessageTo(e,t);const o=setInterval((()=>{if(this._responses.has(t.id)){const e=this._responses.get(t.id);this._responses.delete(t.id),clearInterval(o);const r=e.result;s.isDefined(r)?"_error"===r.type?n(r.message):"_data"===r.type?a(r.data):a(r):a()}else r>=this.requestTimeout?(clearInterval(o),n(new Error(`Request timeout for ${JSON.stringify(t)}`))):r+=200}),200)}catch(e){n(e)}}))}postMessageTo(e,t,r=!1){if(s.isNotDefined(e))throw new ReferenceError(`[${this._origin}]: Unable to post message to null or undefined origin id !`);if(s.isNotDefined(t))throw new ReferenceError(`[${this._origin}]: Unable to post null or undefined message !`);const a=this._getAllowedOriginById(e);if(s.isNotDefined(a))throw new ReferenceError(`[${this._origin}]: Unable to retrieved origin with id: ${e}`);try{r||a.isReady?r&&!a.window?(this.logger.error(`[${this._origin}]: Origin "${a.uri}" is unreachable !`),a.isUnreachable=!0,a.messageQueue.push(t)):(this.logger.log(`[${this._origin}]: Send message of type [${t.type}] to  [${a.uri}]`),a.window.postMessage(JSON.stringify(t),a.uri)):(this.logger.warn(`[${this._origin}]: Origin "${a.uri}" is not ready yet !`),a.messageQueue.push(t))}catch(e){this.logger.error(e)}}},e.AbstractWorker=class{postProgress(e){e.isWorkerMessageProgess?postMessage(e.toJSON()):postMessage(new L(e.loaded,e.total).toJSON())}postError(e){e.isWorkerMessageError?postMessage(e.toJSON()):postMessage(new D(e).toJSON())}postData(e,t){if(s.isArray(t))postMessage(new $(e,t).toJSON(),[...t]);else{if(!s.isArrayBuffer(t))throw new TypeError(`AbstractWorker.postData: Unable to post data of type [${e}].`);postMessage(new $(e,t).toJSON(),[t])}}onMessage(e){if(s.isNotDefined(e))return this.postError(new Error("Message event cannot be null or undefined !")),!0;const t=e.data;if(s.isNotDefined(t))return this.postError(new Error("Message data cannot be null or undefined !")),!0;const r=t.type;if(s.isNotDefined(r))return this.postError(new Error("Message data type cannot be null or undefined !")),!0;if("methodCall"===t.type){const e=t.method;if(s.isNotDefined(e))return this.postError(new Error('Message of type "methodCall" cannot have null, undefined or empty name !')),!0;if(s.isNotString(e))return this.postError(new Error('Message of type "methodCall" expect name to be a string !')),!0;if(s.isEmptyString(e))return this.postError(new Error('Message of type "methodCall" expect name to be a non empty string !')),!0;const r=t.parameters||[];return s.isNotArray(r)?(this.postError(new Error('Message of type "methodCall" expect parameters to be an array !')),!0):(this._invoke(e,r),!0)}}_invoke(e,t=[]){try{const s=this[e](...t);s&&postMessage({type:e,result:s})}catch(e){this.postError(e)}}},e.Byte=_,e.Endianness=p,e.FileFormat=a,e.HttpStatusCode=n,e.HttpVerb=o,e.Keys=i,e.MimeType=u,e.Mouse=l,e.ResponseType=h,e.TAbstractFactory=c,e.TBinaryReader=
/**
	 * @class
	 * @classdesc TBinaryReader is design to perform fast binary read/write
	 *
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 */
class{constructor(e={}){const t={buffer:new ArrayBuffer(0),offset:0,length:0,endianness:p.Little,...e};this.buffer=t.buffer,this.offset=t.offset,this.length=t.length,this.endianness=t.endianness,this._updateDataView()}get buffer(){return this._buffer}set buffer(e){const t="Expect an instance of ArrayBuffer.";if(s.isNull(e))throw new TypeError(`Buffer cannot be null ! ${t}`);if(s.isUndefined(e))throw new TypeError(`Buffer cannot be undefined ! ${t}`);if(s.isNotArrayBuffer(e))throw new TypeError(`Buffer cannot be an instance of ${e.constructor.name} ! ${t}`);this._buffer=e,this._offset=0,this._length=e.byteLength,this._updateDataView()}get offset(){return this._offset}set offset(e){const t="Expect a number.";if(s.isNull(e))throw new TypeError(`Offset cannot be null ! ${t}`);if(s.isUndefined(e))throw new TypeError(`Offset cannot be undefined ! ${t}`);if(s.isNotNumber(e))throw new TypeError(`Offset cannot be an instance of ${e.constructor.name} ! ${t}`);this._offset=e,this._updateDataView()}get length(){return this._length}set length(e){const t="Expect a number.";if(s.isNull(e))throw new TypeError(`Length cannot be null ! ${t}`);if(s.isUndefined(e))throw new TypeError(`Length cannot be undefined ! ${t}`);if(s.isNotNumber(e))throw new TypeError(`Length cannot be an instance of ${e.constructor.name} ! ${t}`);this._length=e,this._updateDataView()}get endianness(){return this._endianness}set endianness(e){const t="Expect a boolean.";if(s.isNull(e))throw new TypeError(`Endianness cannot be null ! ${t}`);if(s.isUndefined(e))throw new TypeError(`Endianness cannot be undefined ! ${t}`);if(s.isNotBoolean(e))throw new TypeError(`Endianness cannot be an instance of ${e.constructor.name} ! ${t}`);this._endianness=e}setBuffer(e,t,s){return this.buffer=e,this.offset=t||0,this.length=s||e.byteLength,this}setOffset(e){return this.offset=e,this}setLength(e){return this.length=e,this}setEndianess(e){return this.endianness=e,this}_getAndUpdateOffsetBy(e){const t=this._offset;return this._offset+=e,t}_updateDataView(){this._dataView=new DataView(this._buffer,this._offset,this._length)}isEndOfFile(){return this._offset===this._length}skipOffsetTo(e){return this._offset=e,this}skipOffsetOf(e){return this._offset+=e,this}getBoolean(){return 1==(1&this.getUint8())}getBooleanArray(e){const t=[];for(let s=0;s<e;s++)t.push(this.getBoolean());return t}getInt8(){return this._dataView.getInt8(this._getAndUpdateOffsetBy(_.One))}getInt8Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getInt8());return t}getUint8(){return this._dataView.getUint8(this._getAndUpdateOffsetBy(_.One))}getUint8Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getUint8());return t}getInt16(){return this._dataView.getInt16(this._getAndUpdateOffsetBy(_.Two),this._endianness)}getInt16Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getInt16());return t}getUint16(){return this._dataView.getUint16(this._getAndUpdateOffsetBy(_.Two),this._endianness)}getUint16Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getUint16());return t}getInt32(){return this._dataView.getInt32(this._getAndUpdateOffsetBy(_.Four),this._endianness)}getInt32Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getInt32());return t}getUint32(){return this._dataView.getUint32(this._getAndUpdateOffsetBy(_.Four),this._endianness)}getUint32Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getUint32());return t}getInt64(){let e=null,t=null;return this._endianness===p.Little?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),2147483648&t?(t=4294967295&~t,e=4294967295&~e,4294967295===e&&(t=t+1&4294967295),e=e+1&4294967295,-(4294967296*t+e)):4294967296*t+e}getInt64Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getInt64());return t}getUint64(){let e=null,t=null;return this._endianness===p.Little?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),4294967296*t+e}getUint64Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getUint64());return t}getFloat32(){return this._dataView.getFloat32(this._getAndUpdateOffsetBy(_.Four),this._endianness)}getFloat32Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getFloat32());return t}getFloat64(){return this._dataView.getFloat64(this._getAndUpdateOffsetBy(_.Height),this._endianness)}getFloat64Array(e){const t=[];for(let s=0;s<e;s++)t.push(this.getFloat64());return t}getChar(){return String.fromCharCode(this.getUint8())}getString(e,t=!0){let s="",r=null;for(let t=0;t<e;t++)r=this.getUint8(),0!==r&&(s+=String.fromCharCode(r));return t&&(s=s.trim()),s}getArrayBuffer(e){const t=this._getAndUpdateOffsetBy(e);return this._dataView.buffer.slice(t,t+e)}},e.TCloningFactory=class extends c{constructor(e={}){super({...e})}create(e,...t){return super.create(e,...t),this.get(e).clone(...t)}}
/**
	 * @class
	 * @classdesc The TInstancingFactory is a kind a factory that performe instanciation based on registred constructor.
	 * @extends TAbstractFactory
	 *
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 */,e.TDataBaseManager=v,e.TIdFactory=class{constructor(e=m.Number,t=null){this.type=e,this.base=t,this._counter=0}get type(){return this._type}set type(e){if(s.isNull(e))throw new Error(`Type cannot be null ! Expect an value from TIdFactoryType enum: ${m.types()}`);if(s.isUndefined(e))throw new Error(`Type cannot be undefined ! Expect an value from TIdFactoryType enum: ${m.types()}`);if(!m.includes(e))throw new Error(`Invalide type ! Expect an value from TIdFactoryType enum: ${m.types()}`);this._type=e}get base(){return this._base}set base(e){if(s.isUndefined(e))throw new Error("Base cannot be undefined ! Expect an instance of Object3D.");if(this._type===m.Number&&s.isNotNumber(e))throw new Error("Invalide Base ! It does not match the type.");if(this._type===m.String&&s.isNotString(e))throw new Error("Invalide Base ! It does not match the type.");this._base=e}setType(e){return this.type=e,this}setBase(e){return this.base=e,this}createId(){return this._base+this._counter++}},e.TIdFactoryType=m,e.TInstancingFactory=class extends c{constructor(e={}){super({...e})}create(e,...t){return super.create(e,...t),new this.get(e)(...t)}},e.TKeyboardController=g,e.TMouseController=
/**
	 * @class
	 * @classdesc TMouseController allow single source of thruth for mouse state checking
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 * @example
	 * (1) create a global variable:
	 *      var keyboard = new TKeyboardController();
	 * (2) during main loop:
	 *       keyboard.update();
	 * (3) check state of keys:
	 *       keyboard.down("A")    -- true for one update cycle after key is pressed
	 *       keyboard.pressed("A") -- true as long as key is being pressed
	 *       keyboard.up("A")      -- true for one update cycle after key is released
	 *
	 *  See TKeyboardController.k object data below for names of keys whose state can be polled
	 */
class{constructor(){}},e.TStore=d,e.WebAPIMessage=M,e.WebAPIMessageData=S,e.WebAPIMessageError=q,e.WebAPIMessageProgress=C,e.WebAPIMessageReady=U,e.WebAPIMessageRequest=class extends M{static isWebAPIMessageRequest=!0;constructor(e,t=[]){super("_request"),this.method=e,this.parameters=t}get method(){return this._method}set method(e){s.isNull(e)||s.isUndefined(e)||s.isNotString(e)||(this._method=e)}get parameters(){return this._parameters}set parameters(e){s.isNotArray(e)||(this._parameters=e)}toJSON(){return{...super.toJSON(),method:this.method,parameters:this.parameters}}},e.WebApiMessageResponse=P,e.WorkerMessage=I,e.WorkerMessageData=$,e.WorkerMessageError=D,e.WorkerMessageMethodCall=class extends I{static isWorkerMessageMethodCall=!0;constructor(e,t=[]){super("methodCall"),this.method=e,this.parameters=t}get method(){return this._method}set method(e){s.isNull(e)||s.isUndefined(e)||s.isNotString(e)||(this._method=e)}get parameters(){return this._parameters}set parameters(e){s.isNotArray(e)||(this._parameters=e)}toJSON(){return{...super.toJSON(),method:this.method,parameters:this.parameters}}},e.WorkerProgessMessage=L,Object.defineProperty(e,"__esModule",{value:!0}),e}({},Itee.Utils,Itee.Validators,Itee.Core);
